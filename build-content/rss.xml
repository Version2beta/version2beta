<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[version2beta]]></title><description><![CDATA[version2beta]]></description><link>http://version2beta.com/</link><generator>metalsmith-feed</generator><lastBuildDate>Fri, 02 Oct 2015 23:59:43 GMT</lastBuildDate><atom:link href="http://version2beta.com/rss.xml" rel="self" type="application/rss+xml"/><author><![CDATA[Rob Martin]]></author><item><title><![CDATA[No title]]></title><description><![CDATA[<p>This is my presentation on selecting open source libraries by paying attention to the people behind them. I presented this at That Conference<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> in the Wisconsin Dells on August 14, 2013. I was very pleased by the compliments this presentation received. Here are a couple of them:</p>
<p><a href="https://twitter.com/joshbroton/status/367710157607665664" title="Josh Broton's twwet about Navigating the Bazaar"><img alt="Josh Broton's tweet about Navigating the Bazaar" src="/static/speaking/joshbroton_367710157607665664.png" style="padding-right: 5px; vertical-align: middle;"/></a><a href="https://twitter.com/nathanmfast/status/367681146269597697" title="Nathan Fast's tweet about Navigating the Bazaar"><img alt="Nathan Fast's tweet about Navigating the Bazaar" src="/static/speaking/nathanmfast_367681146269597697.png" style="vertical-align: middle;" /></a></p>
<p>As always, I write my presentations out in advance, in long form. I think of it as my &quot;ideal transcript&quot; - what I meant to say before I actually started stuttering my way through it. I'm sorry to say this conference did not record video.</p>
<p>You can also see my <a href="/static/examples/navigating-the-bazaar.html" title="Slide deck for Navigating the Bazaar">slide deck</a>.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide1.png" alt="Slide: @version2beta and contact info"></p>
<p>Hi. I'm Version2beta. That's 'version', the number 2, 'beta', and it's short for 'Life, version 2 beta'. It's my handle most places online.</p>
<p>In meat space I'm also known as Rob, and under a few select circumstances, Dad.</p>
<p>My contact info will be on the last slide too, so don't worry if I zip past this one.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide2.png" alt="Slide: I can smell you"></p>
<p>Smell is strong.</p>
<p>I don't mean the smell in this room. I mean that olfaction, our sense of smell, is a powerful sense. It's potent in the moment, sometimes overwhelmingly so, but it's also tightly coupled with our memory - especially our emotional memory. Very often a certain smell will be accompanied by a feeling of safety or fear, love or anger.</p>
<p>I still remember the way this girl in high school smelled. We were at a forensics competition, regionals, and we both got knocked out before lunch. We weren't going to state. Instead we went to the gym, where we played this backwards egg toss game. Every time we caught the throw, we'd move closer together. I still remember how she smelled. I also remember how it made me feel, but we won't get into that.</p>
<p>Turns out we have this thing in our DNA called a Major Histocompatibility Complex, and we can smell it in each other. Histocompatibility is a quick way for us to tell - by smell - whether we have compatible immune systems. My wife has known about this for years and readily admits the sniff test was the first thing she did when we met. I am very pleased to report that I passed.</p>
<p>Despite what we say about code smells, this sniff test may be better for selecting a mate than for selecting an open source library, or even an open source library programmer. But keep this smell stuff in mind. This presentation is about connecting with people authentically, and sometimes that means getting close enough to smell them.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide3.png" alt="Slide: Smell one another"></p>
<p>Let's do that now. Take a moment and smell someone near you. Really - I'm not kidding. Smile nervously if it helps. Say something awkward - that's how most people do it. But one way or another, turn to someone near you and smell them.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide4.png" alt="Slide: tl;dr"></p>
<p>This presentation is about forming authenticate connections with other programmers, specifically the ones who write the code libraries, modules, plug-ins, add-ons, etc. that you use every day. It's about finding new programmers to connect with and using those connections to help identify new libraries you need.</p>
<p>I'm not suggesting you adopt an open source developer. That sounds patronizing.</p>
<p>I'm not suggesting you befriend an open source developer. That sounds pitying.</p>
<p>I am suggesting we recognize that we are already in interdependent and mutually valuable relationships with the developers of the libraries we use. I am suggesting that we honor those connections.</p>
<p>We won't do it because it's a good idea. We will do it, and we are doing it, because it's part of making what we do and who we are into a single, holistic experience.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide5.png" alt="Slide: So many fish in the sea"></p>
<p>Let's shift for a moment to software, to picking out an open source library.</p>
<p>Did you know that Drupal.org lists over 23,000 freely-available modules? Let's say your employer wants you to be an expert on all the available Drupal modules, and is willing to let you spend a whole ten minutes learning what makes each module unique and useful. There's job security in this project - it will take you two years working full time to get through them all, not including the new ones that are released while you're working on the project.</p>
<p>Do you use Wordpress? You have more than 26,000 plugins to choose from, just at wordpress.org. Nearly 4,000 of these call themselves a &quot;widget&quot;. Surely there should be a plugin for almost anything you need, but finding it is a needle in a haystack problem.</p>
<p>Are you a javascript programmer? As of today, there are over 37,160 libraries in the npm registry. Need a library for logging? There are nearly 2,000 of them.</p>
<p>I'm a Python programmer, and I have five open source libraries I wrote and maintain in PyPi, or &quot;the cheese shop&quot;. But the cheese shop has almost 35,000 libraries, so for every one of my libraries, there are nearly 7,000 maintained by other people. Or not maintained at all.</p>
<p>I used to be a Perl programmer. Thankfully I do not have a job that expects me to know all of the Perl open source libraries. CPAN, the Comprehensive Perl Archive Network, indexes almost 125,000 modules.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide6.png" alt="Slide: So many fish in the sea, and each one is a unique little snowflake"></p>
<p>When we're looking for a code library, we pay attention to several characteristics.</p>
<p>We need to know that it will do what we need. Those are typically features of a code library.</p>
<p>We might consider whether the project is actively maintained. Commit frequency is useful for this. A project that hasn't been updated in a while is probably not actively maintained. Or maybe it's stable and doesn't need to further development.</p>
<p>We'll often rely on our peers to show us which cliff to jump off, so we might look at the number of times other people have downloaded a library, or the rating other people have given it, or maybe just how many people favorited the library.</p>
<p>We want to know that the programming is reasonably well done, so maybe we'll evaluate the code quality. If we have time. After all, if we rely on the library and the developer doesn't maintain it, we might be stuck fixing the code.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide7.png" alt="Slide: All the interesting stuff happens at the edges"></p>
<p>When we choose to use a library, we are also choosing to create new interfaces, new edges, in our code and our process.</p>
<p>Just to clarify, most of the time when I say edge I'm referring to graph theory. You see it all the time in network diagrams. You have nodes connected by lines to other nodes. The lines are called edges. How and where they connect are interfaces. What's true in mathematics is almost always true in life too, so when you hear me say something like &quot;All the interesting stuff happens at the edges,&quot; I'm not limiting myself to network graphs.</p>
<p>Okay, back to coding.</p>
<ul>
<li>There is an edge between our code and someone else's code.</li>
<li>There is an edge between our coding practices and someone else's code.</li>
<li>There is an edge between the needs of our project and the needs that the library was written to address.</li>
<li>There an edge between ourselves and the developer who wrote the library.</li>
<li>There is an edge between our needs and the developer's needs.</li>
<li>There an edge between our expectations and the developer's expectations.</li>
</ul>
<p>When things go well, the edges mesh together beautifully. But when they go poorly, we get the kind of grinding you hear from a teenager in a car with a manual transmission. Instead of interfaces, the edges represent conflicts.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide8.png" alt="Slide: Expectations are premeditated resentments."></p>
<p>So we have gears that aren't meshing. We have interfaces that have crashed into one another. We have conflict in our code, in our needs, in our expectations, or even between us and the developer. How do we resolve that conflict? Or a better question, how do we avoid it?</p>
<p>I've had the opportunity over the past decade or so to watch a number of Bollywood films. If it helps, take a moment and picture me dancing around the living room, singing along in Hindi.</p>
<p>My wife discovered this interesting difference between Bollywood films and American films. In American films, when the guy first sees the woman, he sizes her up with that cultural male gaze, and he judges the potential for a hookup. In Bollywood films, when the guy first sees the woman, he also sizes her up with that male gaze, but he judges her potential as a wife. He pictures her in her wedding gown, all hennaed up. He pictures her feeding him, being subservient to his mother, being gal pal with his sister. If it's a particularly racy Bollywood film, he'll picture her in his bedroom with a single bare shoulder.</p>
<p>Believe it or not, when we select an open source library, we do the same thing. We project the satisfaction of our needs onto the object of our desire. I mean the code library of course. The library - and the woman in the movie incidentally - is really just a reflection of ourselves. And like the man in the movie, we are often disappointed once we have real experience with the code.</p>
<p>Therein lies the conflict - we have expectations, and they might not be compatible with the code. The resolution of these conflicts comes from understanding the developer's expectations as well as our understand our own. And that understanding comes from connection, which in turn comes from trust.</p>
<p>The really tough question is, who can we trust?</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide9.png" alt="Slide: You can trust everyone, so long as you trust them to be themselves."></p>
<p>We can often understand someone's motivations and expectations if we understand their needs. Abraham Maslow helped us organize those needs into a hierarchy. Conveniently and memorably, it's called Maslow's Hierarchy of Needs.</p>
<p>Since we're relying on Maslow's work, let's quickly introduce him. If there's one thing I hope you take away from this presentation, it is to learn about the people upon whom you are relying.</p>
<p>I'm sure you've already heard of Maslow's Hammer. He originated the phrase, &quot;it's tempting, if the only tool you have is a hammer, to treat everything as a nail.&quot;</p>
<p>Abraham Maslow grew up in Brooklyn, the oldest of seven children of Jewish parents who fled Russian persecution. As a child, he was bullied mercilessly, much of it anti-Semitic. A psychologist at the time classed him as &quot;mentally unstable&quot;. As an adult he became one of our most important research psychologists, teaching at a slew of excellent schools, including Brandeis, Brooklyn College, the New School for Social Research, and Columbia University. Throughout his life, he had a horrible relationship with his mother, which may have contributed to his interest in understanding people's needs. Maslow had a massive heart attack while jogging and died at age 62. I was not yet a year old when that happened.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide10.png" alt="Slide: Maslow's Hierarchy of Needs."></p>
<p>Maslow created a pyramid describing human needs. At the bottom we have our basic physiological needs, like eating and drinking, peeing and crapping, breathing, sleeping, and sex. Once our physiological needs are met, we are better able to focus on our higher level needs, like being safe and healthy, having a secure home and job, and maintaining a moral code. After we've addressed these needs of our body and our future, we can truly start to work on our sense of belonging - having friends, intimacy, love, and family. Once we have stable social structures, we turn inward and work on our self esteem, self-respect, and sense of achievement. Finally, after we've found ways to satisfy all of these needs, we address our need to be self-actualized, to accept our role within reality and our responsibility to help create the world we live in.</p>
<p>Generally speaking we can use Maslow's hierarchy to understand ourselves and other people. We are all human, we all have needs, and we all need each other. We need each other.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide11.png" alt="Slide: Conflict v Connection."></p>
<p>Let's get back to some of the interesting stuff that happens at the edges.</p>
<p>Where there is an edge, there is potential for conflict.</p>
<p>What we need instead of conflict is connection. This is well demonstrated by Maslow's hierarchy. We need to know we belong. We need to hold ourselves in high esteem. We need to be self-actualized. When we work, we are actively meeting these needs and others. When a developer writes a library, she is also meeting these needs.</p>
<p>When we use a library and connect with the person or community behind it, we are meeting these needs together. This builds the connection that replaces conflict. It is the foundation for understanding and trust. It is self-actualization. One-to-one, it is us creating the wholeness of our selves.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide12.png" alt="Slide: I want to tie you up."></p>
<p>We each are part of larger social networks. Sure, this includes Twitter and Facebook and LinkedIn, but it also includes our friends and lovers, our coworkers and cohorts.</p>
<p>Quick review of graph theory: the connections between us are edges, and we are each a node. You might find it interesting to know that &quot;node&quot; comes the Latin word &quot;nodus&quot;, which means &quot;knot&quot;, as in your node is the spot where the edges are tied in a knot. That's how it goes: You are in the network. You are surrounded by edges. You are tied up.</p>
<p>Robin Dunbar - Robin Ian McDonald Dunbar - has put together some really excellent research on how connected we are.</p>
<p>Dunbar is an anthropologist and evolutionary psychologist, which is pretty much what I want to be when I grow up. Unless I become a farmer instead.</p>
<p>Among other achievements (like being a department head at Oxford University) he has a number named after him. It's called Dunbar's number, and it basically represents an approximate number of people with whom we can maintain stable social relationships. It's suggestive of our cognitive limit to connect. Dunbar's number is commonly accepted as 150, meaning that we can maintain stable social connections with that many people.</p>
<p>In reality, Dunbar's number isn't a single number, it's a range from about 120 to 230. According to his most recent research, the actual value of the number for any given individual depends on that person's &quot;social brain&quot; - specifically, the orbitomedial prefrontal cortex. In fact, Dunbar's 2012 paper has demonstrated a correlation between the size of an individual's orbitomedial prefrontal cortex and the size of their social networks.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide13.png" alt="Slide: Me and my prefrontal cortex."></p>
<p>My wife and I often talk about our children's underdeveloped prefrontal cortices, and how it's our responsibility to provide that capacity for them. But what does our prefrontal cortex do?</p>
<p>First and foremost, as demonstrated by Dunbar's research, the prefrontal cortex does our social information processing. It helps us keep track of the people with whom we are connected. It's where our theory of mind lives - the ability to recognize that other people have their own experiences, and that their experiences are different than our own.</p>
<p>It's also where we do our planning, both short term but complicated motor planning like tying a shoelace, and long term and even more complicated planning, like me becoming an anthropologist and evolutionary biologist. Or maybe a farmer.</p>
<p>The prefrontal cortex also houses our working memory - the mental stuff we're actively chewing on.</p>
<p>If you're still listening to me, that's also because of your prefrontal cortex. It's responsible for our attention.</p>
<p>Far from least, the prefrontal cortex is a processing center for language and symbolic thought.</p>
<p>Here's something interesting to point out. Every one of these functions are also important to us as developers. We use the same mental skills keeping track of code objects and passed messages that we use keeping track of social networks. We are constantly planning, whether it's keeping track of the current sprint or the next line of code we're going to type. Figuring out that next line of code totally taxes our working memory, and getting it down on the screen is all about language and symbolic processing.</p>
<p>Contrary to the stereotypes, we developers are all about the prefrontal cortex. We are jacked into that network. It's not just how we relate; it's where we live.</p>
<p>Want to hear something really interesting? The prefrontal cortex, specifically the orbitomedial region, is also responsible for olfaction. Our sense of smell.</p>
<p>Feel free to smell your neighbor again.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide14.png" alt="Slide: Connections: priceless."></p>
<p>As you might imagine, there has been a lot of recent work into figuring out what connections are worth.</p>
<p>One of the earlier rules came from Robert Metcalf. You might recognize that name. He graduated from MIT with two bachelor degrees about a thousand years ago, the year I was born. He was so impressed by Arpanet (a predecessor to our current internet) that he made it the topic of his PhD. dissertation at Harvard. They flunked him, and then he went on to co-invent ethernet and start a company called 3Com.</p>
<p>Metcalf's Law says the value of a telecommunications network is proportional to the square of the number of connected users.</p>
<p>David Reed was also educated at MIT, just a couple years behind Robert Metcalf. In the 80's he was an assistant professor there, and since then he's been a visiting scientist at the MIT Media Lab, America's foremost school of wizardry. David Reed invented UDP, though he finds that statement a little absurd since what he really did was co-invent TCP and then decide it might be nice to make a simplified version too.</p>
<p>Reed's Law says that the utility of large networks, particularly social networks, increases exponentially with the size of the network.</p>
<p>Rod Beckstrom is a relative youngster, only 52 years old. He's a Stanford grad and spends a lot of time thinking about organization theory. For a while, he directed the National Cyber Security Center, but he quit when the NSA decided they were in charge. He's also run ICANN, the Internet Corporation for Assigned Names and Numbers, and he's on the board for trustees for the Environment Defense Fund. One of my favorite things about him is that he presented Beckstrom's Law at DefCon, the world's largest underground hacking conference.</p>
<p>Beckstrom's Law says that the value of a network equals the net value added by each user's transactions conducted through that network, multiplied by the number of users.</p>
<p>So at least these three experts agree that networks get more valuable as they grow, and the value increases non-linearly. The more connections you have, the bigger the payoff.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide15.png" alt="Slide: It's like money in your my pocket."></p>
<p>This value is not retained solely by the people who own the networks. If that were the case, we wouldn't use their networks, would we. We use Facebook and Twitter and LinkedIn and Github because they provide value to us. And the value of the network to us personally goes up as our network grows, typically at least until we get somewhere around Dunbar's number.</p>
<p>I'm going to back this up with anecdotal evidence.</p>
<p>I'm not a particularly strong programmer, but for over two years I've made a point of trying to get better in part by knowing the people who write the libraries I use and put on the podcasts I learn from. About a year ago, one of those people heard I was looking for a job and said I should come interview at the place he works.</p>
<p>I said no, I'm not a good enough coder.</p>
<p>I worked my ass off for nine months, learning to be a better coder, and then I tweeted back at the same guy. He took time out from an embedded Javascript conference he was attending to talk with me on IRC. He got me an interview with five engineers at their place - the kind of place where the engineering team decides who they want to work with. That got me a plane ticket and two days of pairing at the office. That got me an offer that met my every need, including moving halfway across the country to one of the most beautiful places I've ever lived.</p>
<p>Now I'm working at a place that let Github, Valve, and TED inspire their employment manual. I make enough money to live the way we want to live. I don't have set hours. I don't have set vacation - if I need time, I let my coworkers know and they cover for me. I pair practically every day. I get a day a week to work on my own projects. If I think a conference is going to make me better at my job, or a better programmer, or just more creative and in touch with the world, I just ask for it. And since I'm not a foosball player, I work on my 9-ball skills at the office instead.</p>
<p>I didn't do any of this on my own. I connected with other people - open source developers who maintain libraries of their own - and they helped make it happen. I love my job and I have no interest in looking for another, but I know me and my network are still going places. For instance, this month I'll have my first article published in a programming journal. This is cool for me - I like talking and I like writing, and someday I'd even like to write a book.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide16.png" alt="Slide: Be a foodie."></p>
<p>Enough about coding. Let's talk about food. Food as a metaphor, at least.</p>
<p>Many of us buy our food from the grocery store. We look at the tomatoes and check out their color and feel their firmness and decide which ones we want to buy based on the characteristics of the fruit. That's the typical way of choosing open source libraries, too.</p>
<p>Some of us are &quot;foodies&quot;, though. Maybe you live in Madison, or Milwaukee, or even Salt Lake City like me. I don't want you to go to the store and check out the fruit. I want you to go to the farmer's market and check out the farmers. Get to know them. Go volunteer to work on their farm. Try to understand what they're choosing to grow and why they grow it. Is that heirloom tomato a specialty, or was it a one-time experiment? Where is the parsley? What happened to the potatoes they used to sell? You only know these answers if you know the farmer.</p>
<p>The same goes for your coding. Instead of a physical location, your community is the group of people who work with the same code base, be it Wordpress or Joomla, Python or Ruby or Node.js. Get to know the farmers in your community, and learn which libraries are their staples and which are experiments. Learn what's important to them, and go back to their code base when you're looking for something new.</p>
<p>After all, we're not here at this conference because we want to buy the tomatoes. We're here because we want to become farmers, and you don't become a farmer by studying the fruit in the supermarket.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide17.png" alt="Slide: Special thanks."></p>
<p>Like most projects, this one was a collaboration with a number of other people. Many ideas on this topic come from years of conversation with my wife. The place I'm working has been an entirely positive influence on my thoughts. A number of people helped me compose and edit the presentation. Some of them sat patiently through my practice and provided excellent feedback.</p>
<p>I have relied on these people, and I appreciate their roles in my life.</p>
<hr>
<p><img src="/static/examples/navigating-the-bazaar/slide18.png" alt="Slide: Contact information."></p>
<p>If you want to discuss these ideas further - or you want to disagree with me - please feel free to drop me a line. If you don't mind me quoting you, please tweet at me. This presentation, with a transcript, is already up on my website.</p>
<p>I'd like to thank you for your attention, and I hope the ideas I've presented are helpful to you.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://www.thatconference.com/" title="That Conference in Wisconsin Dells, August 12 - 14, 2013">That Conference</a> (really, it's called That Conference) is a summer camp for geeks held in the beautiful and touristy Wisconsin Dells. My presentation is listed under <a href="http://www.thatconference.com/Sessions/session_870" title="My session listing for Navigating the Bazaar">Navigating the Bazaar</a>. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/navigating-the-bazaar</link><guid isPermaLink="true">http://version2beta.com/articles/navigating-the-bazaar</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I'm pretty sure my dev team thinks I have it out for them. It's because I always give them the latest and greatest version of every library, regardless of whether our code is tested with that version.</p>
<p>My job includes responsibility for managing development, continuous integration, customer acceptance, and production environments. I wrote an installer that will build any of these environments. It uses Opscode Chef-solo<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> with a dynamically-generated JSON definition file that varies based on how the environment will be used. For example, every developer makes their own environment on one or more local virtual machines. Each developer can configure that environment using a Python program I wrote that manipulates the JSON to suit his or her<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> needs.</p>
<p>I made a design decision in creating this environment-builder that impacts our development workflow. Only production environments lock libraries to a given version. In other words, everything but production always gets the latest and greatest versions of all third party libraries.</p>
<p>In an ideal world, this is probably not the right way to do this. An comfortably funded and staffed development team would probably prefer to lock libraries at a &quot;known-to-be-working&quot; version so that devs only deal with problems they've created, not problems some third party open source developer introduced in their latest update. When a new version of a dependent library is released, a ticket gets generated and someone introduces it to a unit testing or continuous integration environment where the new library can be vetted properly, and any required changes to the code can be made.</p>
<p>Or maybe the ideal is to wait for a new release of our software, and then slam ourselves with all the updates at once. Code it with the known-working libraries, then update everything in one fell swoop. Make it, break it, fix it, ship it.</p>
<p>Not all teams can work this way. The company I'm working for right now is funded by accounts receivables, not angels or venture capitalists. We push a lot of code, and when something is billable, it's often done. Refactoring - hell, sometimes even unit testing - is a luxury. I'm not saying we're short-sighted. We want unit tests and have started writing them. We want continuous integration and we've started building that environment. But the primary target is business viability, not code maintainability. And even though I'm writing about current experience, it is worth noting that <em>every</em> development company I've worked for has been funded this way, with many of the same practices.</p>
<p>I know from experience across multiple teams that updated versions of third party libraries get attention only when there's a major reason to include them, usually a bug we can't work around. When we get around to using the new version, it may be one or more major releases ahead of what we've been using. There's a good chance it will be a non-trivial task to deploy the upgrade.</p>
<p>My solution was to create an environment that can be reprovisioned quickly and painlessly. Every time we reprovision, the installer updates virtually everything - except in the production environment, which has its own list of packages that specify versions explicitly. Any developer who reprovisions his or her local development environment (a virtual machine) gets the latest and greatest of everything, and that might break what they've been coding. If it does, they deal with it. Every night, the CI environment reprovisions and runs tests automatically. This may also catch incompatibilities and other issues related to libraries. If it breaks, I deal with it, or find a developer who can.</p>
<p>This system definitely catches issues. An ETL<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> library we're using is currently borked. Our code works with the library as of three releases ago, but not with any release since. There are five bug fixes, quite a few new features, and some significant performance improvements we're not getting because our code fails with the new versions. We back-burnered that upgrade while a dev scrambles to make the newest version work.</p>
<p>Getting new releases into the workflow improves our overall quality and reduces our technical debt. Mine is a practical solution, pragmatic even. I don't think that following best practices is an ivory-tower endeavor, but I recognize that it's a journey for a lot of small companies, especially when you already have a code base that evolved over years of hard work, often the product of passion more than programmers.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://www.opscode.com/chef/" title="Chef at Opscode.com.">Chef</a> is a tool for building infrastructure automatically. It's based on Ruby, is reasonably easy to learn, and runs stand-alone, with a central server, or with a hosted environment at Opscode. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>I say 'his or her' because I think it's an important habit to use language that recognizes diversity in the workplace, especially in tech. I actually work with all men. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Extract,_transform,_load" title="Extract, transform, load at Wikipedia">ETL stands for Extract, Transform, Load</a> and it refers to the process of getting data out of one system and into another. It's often used for data warehousing. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/the-developers-will-fix-it</link><guid isPermaLink="true">http://version2beta.com/articles/the-developers-will-fix-it</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I presented on this topic in February, and in the months since I've heard from several people who've successfully started using the C-R-V formula in quoting and evaluating their own projects. That's quite gratifying. Emboldened by this success, I've submitted it for some regional conferences. This particular version is a refactor I made for Wordcamp Milwaukee in June 2013. I've rearranged the order things are introduced and cut it to fit 30 minutes.</p>
<p>I write my presentations in advance, and then do my best to present what I wrote, so this post is something close to a transcript of my presentation. Actually, it's a transcript of how I meant to give the presentation, without the 'ums' and 'ahs', nervous pauses, misplaced words, and sections I undoubtedly missed due to various deficiencies in public speaking.</p>
<p><a href="/static/examples/managing-risk-and-selling-value-wordcamp/crv-calculator.html">Check out the calculator I made for calculating the CRV Factor</a>, which is the hard part of the formula. My slides are inline below, but check out <a href="/static/examples/managing-risk-and-selling-value-wordcamp.html">my slide deck online</a> too.</p>
<p>Here are some positive comments I've received about this presentation:</p>
<p><a href="https://twitter.com/HerbRipka/status/344617334998171648"><img src="/static/speaking/herbripka_344617334998171648.png" alt="@HerbRipka: EXCELLENT presentation at #wcMKE You have great insights into estimating for #webdesign!"></a></p>
<p><a href="https://twitter.com/basicdays/status/343903358257610752"><img src="/static/speaking/basicdays_343903358257610752.png" alt="@basicdays: I like the idea of optimal estimates with an adjustment value. Exact math where you can do it, fuzzy where you can't."></a></p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide01.png" alt="Slide: @version2beta and contact information"></p>
<p>Hi, I'm version2beta. Some people call me Rob. You can call me either.</p>
<p>My presentation is about figuring out how much to charge for your work. This is one of those talks where you get to learn from someone who really, really knows what they're talking about. I've done it wrong virtually every way you can, so I came up with a system that, so far and without fail, has told me how much I should have charged for every project I've underquoted.</p>
<p>It works proactively too. In fact, that is the recommended way of using this system.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide02.png" alt="Slide: Warning, ahead there be MATH"></p>
<p>I'm going to warn you right up front, there are going to be mathematics in this presentation. Real math, the kind that requires a scientific calculator app on your phone. Or you can use the <a href="/static/examples/managing-risk-and-selling-value-wordcamp/crv-calculator.html">special calculator I built</a> for doing this math. It's on my website.</p>
<p>Before we get into the details, I'd like to tell you about my first ever paid programming gig.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide03.png" alt="Slide: Economic Order Quantities"></p>
<p><em>slide</em></p>
<ul>
<li>Q is quantity</li>
<li>D is annual demand</li>
<li>S is fixed cost per order</li>
<li>H is annual holding cost</li>
</ul>
<p><em>slide</em></p>
<p>This formula is used to calculate the economic order quantity for inventory.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>It's been around a while. I first learned it in 1983, when I was 13 years old. I don't know if it's true or not, but at the time, I was under the impression that my father was one of the creators of this formula. He was inventory control manager for Simpson Paper Company, Eastern Division. His job was to make sure they had the right raw materials on hand, in the right quantities, for all of the plants east of the Mississippi River.</p>
<p>He had this formula that would help him figure out how much stuff to buy. He also had the only IBM PC at Simpson's Vicksburg, Michigan offices. And he had a very nerdy kid.</p>
<p>The formula isn't too bad. Basically, you take the annual demand for an inventory item, multiply that by twice the cost per piece, divide that by the holding cost for one item for a year, and then take the square root - blah blah blah. I know this isn't actually very interesting, but this formula has a square root symbol in it, so it's going to make the formulas I show you in a little while look easy. So it's important you pay attention.</p>
<p>The short story is that I got paid $30 to make this formula into a program.</p>
<p>Superbowl, one year later. Every year the DeYoungs came to my parents' superbowl party. Mr DeYoung worked with my father at Simpson paper. During this particular Superbowl party, Mr. DeYoung pulled me aside and congratulated me on the program I wrote for my father.</p>
<p>He said, &quot;That program saved us $3 million dollars last year.&quot; Even as a freshman in high school, I could do math pretty quick in my head. The $3 million dollars was a very significant return on investment for the $30 I was paid.</p>
<p>It seemed possible I had underquoted that job.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide04.png" alt="Slide: The CRV Model"></p>
<p><em>slide</em></p>
<p>Complexity</p>
<p>Risk</p>
<p>Value</p>
<p><em>slide</em></p>
<p>I have a formula for helping people figure out how much to charge for their work. It's called the CRV Model. C-R-V stands for Complexity, Risk, and Value.</p>
<p>I designed this model when I worked for my wife Barbara, in her web development company. Barbara spent extensive amounts of time considering how our pricing models, indeed our entire working environments, were inadequate. She deserves a lot of credit for ideas behind the model, and the conversations inspiring it. She was invaluable in developing and testing this model.</p>
<p>I wish I could say it was a great success, but some credit for the model is also due our largest and most risky customer. They demonstrated part of the need for this model by defaulting on $68,000 worth of contracts.</p>
<p>All of my experience using this model has been focused on web development and programming, but it should be useful for modeling any kind of project work. What matters to this formula is that the project is at least loosely specified in advance, and you're trying to put a fixed price on it.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide05.png" alt="Slide: Some caveats"></p>
<p><em>slide</em></p>
<ol>
<li>BYO Business Acumen.</li>
<li>Damn it Jim, it's a model, not a doctor for your business.</li>
<li>When you're pointing fingers, make sure you're looking in the mirror. Kthanxbai.</li>
</ol>
<p><em>slide</em></p>
<p>I have some caveats for you:</p>
<ol>
<li>You're going to need some business instinct to use this model.</li>
<li>In fact, the more business acumen you have, the better this model will work for you.</li>
<li>If you have a good sense of business, you probably don't need this model.</li>
<li>If you don't have a good business sense, this model will help you develop one.</li>
<li>This is not a silver bullet. It's a model. It helps you understand the world a little better.</li>
<li>At the end of the day you still need to take credit for your own success. No need to call me up and say thank you.</li>
<li>Same goes for your failures, by the way.</li>
</ol>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide07.png" alt="Slide: The problem"></p>
<p><em>slide</em></p>
<ol>
<li>Working for the man.</li>
<li>Selling your life by the hour.</li>
<li>Client wants a fixed price.</li>
<li>Client wants to go out of scope.</li>
<li>It can be hard to get paid for out of scope work.</li>
</ol>
<p><em>slide</em></p>
<p>Let's talk about why we're here. What is the problem we're trying to solve. I see it as three-fold.</p>
<p>First. It's very important that you hire the right clients. And in case you get a bad client, it's important to know when to fire them.</p>
<p>Second. Even good clients sometimes suck. They want a fixed price bid. Then they want to go out of scope. Then they want to blame you that they went out of scope, that you should have thought of that. Then they don't want to pay for going out of scope. Then if they do pay you for going out of scope, maybe they resent it.</p>
<p>Third. It's come to my attention that I have a limited number of hours in my life. I know that sometimes it feels infinite, but I've consulted with some pretty good doctors, and they assure me I have an expiration date. This may also be true for you. You should consult with your doctor. If by any chance your doctor confirms this, then you, like me, are in a position to decide at what hourly rate we're willing to sell our limited lives.  Or if we want to sell our lives by the hour at all.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide08.png" alt="Slide: List of goals."></p>
<p>I think we can distill these problems down to a list of goals for a pricing model.</p>
<p>Pursue the right work.
Avoid the wrong work.
Mitigate risk.
Charge according to value.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide09.png" alt="Slide: The formula : Pq = o * log10(C + R + V) / 2 * d + m"></p>
<p>So here it is. Scary. It even has a logarithm<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> thingamajig in it.</p>
<p>Let's walk through it, one parameter at a time.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide10.png" alt="Slide: The formula, highlighting 'Pq ='"></p>
<p>On the left side, we have the quoted price. This will be the product of our calculation, and the price the model suggests for your project.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide11.png" alt="Slide: The formula, highlighting '(C + R + V)'"></p>
<p>C, R, and V stand for Complexity, Risk, and Value. We are going to look at these terms in detail.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide12.png" alt="Slide: The formula, highlighting 'o', 'd', and 'm'"></p>
<p>I'm going to call these three little factors your constants. Overhead, days, and materials.</p>
<p>The little 'o' is your overhead. This is just enough to cover you basic costs. This will vary a lot based on how big your business is, whether you subcontract, etc.</p>
<p>The little 'd' is your time estimate in days. Not just any time estimate though - I'll show you how that works.</p>
<p>The little 'm' are your material and other project costs. These are project-based expenses other than time.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide13.png" alt="Slide: The formula, nothing highlighted"></p>
<p>So that's the formula. It's not as scary as it may have seemed at first.</p>
<p>Add some numbers together. Those are our factors for Complexity, Risk, and Value.</p>
<p>Apply a logarithm. This is the exponent you'd put on the number 10 to get this number. It's also the log10 key on your scientific calculator app.</p>
<p>Multiple by a couple other numbers. That gets us our overhead for the job and how many days of overhead we need to cover.</p>
<p>Add in the remainder. That's any direct or material costs.</p>
<p>You've got your price. Let's look at the specifics.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide14.png" alt="Slide: Overhead"></p>
<p><em>slide</em></p>
<p>o : Overhead costs per work day</p>
<p><em>slide</em></p>
<p>While Complexity, Risk, and Value are the real heart of this formula, let's get our constants out of the way first. Let's start with overhead.</p>
<p>In cost accounting, our labor is divided into time-based units of measure and we put a cost on each full unit and use that for our basis. That's the system we're getting away from.</p>
<p>Managerial or analytical accounting uses a variety of accounting metrics to answer specific questions, usually questions about the future. That's what we're doing. We're using a handful of metrics to ask questions about the future cost of doing a project.</p>
<p>One of the questions we need to answer is, &quot;How much of my overhead costs should this project pay for?&quot; This is the little 'o' in our formula. Overhead.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide15.png" alt="Slide: Overhead example, moonlighters"></p>
<p><em>slide</em></p>
<p>Match your preferred beer to your overhead.</p>
<ul>
<li>Pabst Blue Ribbon - $50 / night</li>
<li>Spotted Cow - $75 / night</li>
<li>Guinness - $100 / night</li>
<li>Chimay Blue Label - $125 / night</li>
</ul>
<p><em>slide</em></p>
<p>Moonlighters, raise your hand. Now keep your hand up if &quot;overhead costs&quot; and &quot;beer money&quot; are roughly the same for you. I've been there. I still do some work that way. I admit, this example is tongue-in-cheek. If I were serious, it would have been a chart of whiskeys.</p>
<p>I would like to remind you that there are a lot of people trying to feed families doing the same work. Be careful about setting this value too low. I suggest you use the freelance example instead, and think about pricing your work as if you are doing it full time.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide16.png" alt="Slide: Overhead example, freelancers"></p>
<p><em>slide</em></p>
<ul>
<li>I want to take home about $30,000 a year.</li>
<li>Taxes are about $7,500 a year.</li>
<li>Health insurance costs $6,000 a year.</li>
<li>I spend $1,800 a year on sales and marketing.</li>
<li>I spend $2,000 a year on new computers.</li>
<li>I spend $3,000 a year improving my skills.</li>
<li>I expect to do billable work three days a week.</li>
</ul>
<p>Overhead per work day = ( 30,000 + 7,500 + 6,000 + 3,000 + 2,000 + 1,800) / 150</p>
<p>Overhead per work day = $415</p>
<p><em>slide</em></p>
<p>Let's walk through an example calculating overhead for a single person freelancing. No employees. No employer.</p>
<p>Let's say this hypothetical freelancer is YOU.</p>
<ul>
<li>
<p>What's the minimum you could make in a year and still be happy freelancing?</p>
</li>
<li>
<p>Now take that, and increase it by at least 25% to cover taxes and self employment taxes.</p>
</li>
<li>
<p>If you plan to do this full time, add in the cost of your health insurance. If you have health insurance that's paid for by someone else, for instance your partner's employer, add in half the value of their insurance benefit. If you don't have health insurance, add at least $6,000.</p>
</li>
<li>
<p>Now add in any business expenses you expect to have for the year. Sales and marketing, professional development, equipment costs, insurance, business rent, professional memberships, etc.</p>
</li>
<li>
<p>Then figure out about how many days you expect to actually be doing production work. Divide by this number. If you plan to do this full time, figure on something between 120 and 180, depending on how much time you need to spend marketing, selling, and running your freelance business.</p>
</li>
</ul>
<p>In the example above, I arrive at a &quot;per project day&quot; overhead cost of $415 for this hypothetical freelancer working something that looks very much like full time on a very modest income of only $30,000 a year take home.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide17.png" alt="Slide: Overhead example, agencies"></p>
<p><em>slide</em></p>
<ul>
<li>Operating Expenses (including payroll): $72,000 / month</li>
<li>Employees engaged in production: 5</li>
<li>Productive days per month: 20</li>
</ul>
<p>Overhead per day per employee = 72,000 / (5 * 20)</p>
<p>Overhead per project day = $720</p>
<p><em>slide</em></p>
<p>Here's another example, this one for a small-ish agency.</p>
<p>For agencies, I think the numbers are pretty simple to follow. Add up all your expenses, including payroll, even for billable resources. Divide it across the number of people doing billable work.</p>
<p>Again, we're not doing cost accounting.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> If you're interested, this formula is inspired a bit by Throughput Accounting,<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup> but the important thing to remember is that we don't want to slip into the habit of thinking in terms of hours of labor.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide18.png" alt="Slide: Time commitment, 'd'"></p>
<p><em>slide</em></p>
<p>d : Person-days required for the project under the most ideal circumstances</p>
<p><em>slide</em></p>
<p>We are not going to try to figure out how many hours or days or weeks a job will actually take. However, we are going to consider how much time it would take under the most ideal circumstances.</p>
<p>I think this is a real selling point for this model. When we're using this model we get to think in terms of the best possible circumstances. This is a huge advantage because we humans can more accurately predict the future when everything goes perfectly, rather than when all hell breaks loose.</p>
<p>So at this point, we can say sayonara to contingencies. We can ignore plans B and C. We can put in the number that only happens when the stars are perfectly aligned.</p>
<p>Just make sure that &quot;days&quot; means the same thing here that it meant when you were figuring your overhead per day. For agencies, this is the number of person-days for production employees that you would assign to the project - under the most ideal circumstances. For freelancers, this is the number of work days you think the project would take you - under the most ideal circumstances. For moonlighters, this is probably the number of evenings or weekends you think you'll need to work on the job. Under the most ideal circumstances.</p>
<p>Again, the important thing to remember here is to be a paragon of optimism. Plan on rainbows and unicorns.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide19.png" alt="Slide: Project costs, 'm'"></p>
<p><em>slide</em></p>
<p>Examples of materials and direct project costs:</p>
<ul>
<li>Travel expenses - hotels, meals, mileage, etc.</li>
<li>Hosting a development environment for the specific project</li>
<li>Hiring a project manager</li>
<li>Contracting specialized work</li>
<li>Buying project-specific training materials</li>
<li>Software licensing</li>
<li>Etc.</li>
</ul>
<p><em>slide</em></p>
<p>Little 'm' is easy. It's any direct costs associated with the project, that apply just to this project.</p>
<p>Travel. A hosted dev environment. Specialized software. Contracted project management. Out of pocket expenses. Etc.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide20.png" alt="Slide: How the scales work"></p>
<p><em>slide</em></p>
<p>Fuzzy Math</p>
<p>Not actually fuzzy, just logarithmic.</p>
<p><em>slide</em></p>
<p>Now we get to the heart of the formula. We're going to estimate Complexity, Risk, and Value with some pretty fuzzy numbers.</p>
<p>This is not an exact science. For example, I can't tell you that the complexity on a given project is exactly 6,423.5.</p>
<p>We really only know how complex something is, if it's not complex at all. We can more accurately predict risk when there's very little. And as well all know, value is subjective. One man's trash and all that?</p>
<p>When I make scales for Complexity, Risk, and Value, I want to have a lot of room to move around, and I want the scales to be more accurate on the lower end than on the upper end. I can't really use &quot;infinity&quot; as a value, but it'd be nice to be able to say &quot;A whole damn lot.&quot;</p>
<p>So the scale we're using goes like this: Pick a number between ten and ten thousand. If any of the factors start really ramping up, use big numbers. That's what the &quot;log10&quot; in the formula does for us. If you really have a project that is so risky, or so complex, or so valuable that you feel like you need really big numbers to describe it, use them.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide21.png" alt="Slide: Complexity scale"></p>
<p><em>slide</em></p>
<ul>
<li>10 - Anyone could do it.</li>
<li>100 - There are only a few people in the area who can do it.</li>
<li>1000 - There are only a few people in the country who could do it.</li>
<li>10000 - It probably can't be done.</li>
</ul>
<p><em>slide</em></p>
<p>I think of complexity in terms of who can do the work. Actually, I tend to think of complexity in terms of how far you'd have to go to find someone else who can do the job. In that way, it's kind of like &quot;competition&quot;.</p>
<p>You could actually use distance as your complexity number. How far is it to the next nearest person or agency who can handle this project? If bunches of people in this room could do it, let's say 10 since I really never use factors lower than 10. If you'd have to go to Chicago for another place that could handle it, let's say 120. New York, about a thousand miles. A univerity in Tokyo? 10,000.</p>
<p>My grandfather, who was an engineer for over 40 years, gave me this example.</p>
<p>Gus retires from head of maintenance at the local factory. He put in his time and is ready to go fishing.</p>
<p>Shortly after Gus retires, an absolutely critical machine fails. It's making a horrible noise. Nobody in maintenance knows what to do with it, so they tell the plant manager he's gotta get Gus to come back and fix it.</p>
<p>Gus isn't very happy about this, but he agrees to come look. He walks around the machine. He listens to it. And then he pulls a piece of chalk from his pocket and puts an 'X' on a part and says, 'Replace that.'</p>
<p>Gus sends the plant manager an invoice for $50,000. The plant manager tells Gus to submit an itemized invoice.</p>
<p>Gus sends a new invoice with two line items. The first line item was &quot;Chalk mark: $1.&quot; The second line item was &quot;Knowing where to put it: $49,999.&quot;</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide22.png" alt="Slide: Risk scale"></p>
<p><em>slide</em></p>
<ul>
<li>10 - It's a cake walk.</li>
<li>100 - There are some problems with taking the job.</li>
<li>1000 - There are significant risks associated with this project.</li>
<li>10000 - That's just crazy talk.</li>
</ul>
<p><em>slide</em></p>
<p>I remember the first time it occured to me that I could change the price of a job based on how little or how much the client actually knows about what they want. You know the kind of the project, where the client is figuring out how it works by seeing everything he or she thinks you're doing wrong? This happened way later than it should have. I had my hourly rate, and it was my hourly rate. Maybe I'd add in a few extra hours to compensate for some unknown. But I could have saved a lot of money and salvaged at least one failed project if I'd only realized sooner that I should always charge more for projects that have more red flags.</p>
<p>Let's talk about risk.</p>
<p>First, I want to say risk isn't for everybody. At the low end of the scale, we have &quot;the cake walk.&quot; The job is well defined. The customer knows what they're doing when it comes to executing a project like this. They pay quickly and fairly. Maybe they're even an agency like C2<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> here in town that specializes in contract talent.</p>
<p>This is good, steady, low-risk work. It's nice to have this kind of work. Many of us would do well to focus on this kind of work.</p>
<p>Or maybe you can tolerate a little more risk, so we slide up the scale a little bit.</p>
<p>&quot;There are some problems with taking the job.&quot; Here we start to see some red flags, and we need to take them into consideration.</p>
<p>The specification is weak. The client seems uncertain of what they want. They don't respond well to suggestions. Their ideas seem overly fluid. (Scope creep!)</p>
<p>Maybe the project doesn't have a good cost-benefit ratio. It's unlikely to bring value to the client.</p>
<p>The customer seems overly cost-conscious. They may not have the funds required to manage the project well on their side.</p>
<p>The client talks about the previous contractors they had to fire.</p>
<p>Sometimes the risk isn't with the client. Let's say you're not well established yet. Maybe you don't have the skills you'd need to feel confident completing the job. Or taking on this project that's too big, and precludes your ability to take on other work or care for your regular clients. These are all risks too.</p>
<p>&quot;There are significant risks associated with the project.&quot; Now we're getting into some serious red-flaggage.</p>
<p>Maybe the project has no specification, and the client doesn't want to do a discovery phase.</p>
<p>Maybe the client's expectation for delivery, price, and / or quality are unreasonable.</p>
<p>Maybe the client seems to be hitting on you.</p>
<p>Maybe you have little confidence in the client's ability to fulfill their part of the contract. You know, like paying you.</p>
<p>Maybe you don't have confidence in your ability to finish the project. It may be too big, too hard, to many moving parts.</p>
<p>&quot;That's just crazy talk.&quot; Projects at this level of risk are the ones we walk away from. These are the projects with abusive clients, or projects we have no expectation will ever finish successfully.</p>
<p>But sometimes the client is throwing money at you in spite of the difficulties, and maybe you are pretty tolerant of risk. You might even specialize in difficult clients with deep pockets. There's money in that.</p>
<p>When you're quoting a project, always first try to drive risk down. Build in a discovery phase and price out the full project after there's an adequate scope. Spend extra time establishing reasonable expectations with the customer, in both directions. Discuss your concerns about their ability to manage the project, and how they may benefit from bringing on a professional project manager just for the project. Get a bigger down payment. Schedule invoicing more frequently, and require payments be current before each phase begins.</p>
<p>The risk you're left with drives up your price, and this is entirely reasonable. It does a couple of very valuable things for you. For one, you might not get the job, and depending on how much risk there is, this may be a Very Good Thing.</p>
<p>If the job has significant, unmitigated risks, give it a &quot;walking away&quot; price. Don't put a lot of effort into quoting the job. Bump up the risk to an appropriate level based on the problems with the job and your less-well-considered quotation, and send it over without expectation.</p>
<p>Then, if you do get the job and things start to head south, you were already being paid extra to deal with it and you can take it on with a smile. Scope creep? No problem - you expected it. Plus you can still try to get paid for it. Stiffed you for the last payment? That's okay, the last payment was the second half of your bonus, not your paycheck. The client is a pain in your butt? You charged the asshole tax up front.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide23.png" alt="Slide: Value scale"></p>
<p><em>slide</em></p>
<p>Evaluating value</p>
<ul>
<li>10 - The impact of the project will be at least as great as the cost.</li>
<li>100 - The impact of the project will be an order of magnitude greater than the cost.</li>
<li>1000 - The impact of the project will be two orders of magnitude greater than the cost.</li>
<li>10000 - An Arab Prince has already written you a blank check.</li>
</ul>
<p><em>slide</em></p>
<p>My microeconomics professor at the University of Maine was a fish economist. He told us how he'd been approached by Heinz Corporation way back in 1969 to assess the potential market for cocktail sauce. They asked him for a daily rate, and he gave them a price of $100 a day.</p>
<p>He didn't get the contract. They found someone who'd charge them $1,000 a day.</p>
<p>I've worked on big websites for small companies that cost $20,000. I've worked on small websites for big companies that cost $20,000. When it comes down to it, people want to pay a price commensurate to the value they get.</p>
<p>I told you up front you need some business instinct to use this model. That's perhaps most true when it comes to figuring out the value your client will gain from your work. Understanding that number will do much to free you from hourly drudgery.</p>
<p>Don't do work that has limited value.</p>
<p>If the potential gain is small, your client needs to think small, and treat you small. It makes your job much less enjoyable.</p>
<p>If the potential gain is large, your client is motivated to make big things happen with you, and will support you on the project. It makes your job much more enjoyable, and lucrative too.</p>
<p>It boils down to this: Always. Maximize. Value.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide26.png" alt="Slide: Ideal Cost and The CRV Factor"></p>
<p><em>slide</em></p>
<p>Ideal Cost: o * d</p>
<p>CRV Factor: log10 ( C + R + V )</p>
<p>Calculator: http://goo.gl/bCtQT</p>
<p><em>slide</em></p>
<p>Maybe you noticed that two mathematical terms make up the heart of this formula.</p>
<p>I call the first one &quot;The Ideal Cost&quot;. It's your overhead rate multiplied by your time commitment. That's what the job should cost you assuming everything goes swimmingly.</p>
<p>I particularly like the concept of Ideal Cost. We humans are notoriously bad at making predictions. Our emotions get in the way. Ideal Cost eliminates some of that problem by removing the complexity of the negative emotional factors. We don't have to think about what might go wrong at this point - we get to consider just the positive. And this is a nice way to think about a new project.</p>
<p>The second term is the &quot;CRV Factor&quot;. It builds in supply and demand, mitigates your risk, and keeps your price commensurate with the value of the project to your customer. You multiply your ideal cost by the CRV Factor. The higher the CRV Factor, the higher your total price.</p>
<p>But you can use the CRV Factor all by itself too. Let's look at some ways you can quickly analyze almost any project.</p>
<p>If you haven't already opened the calculator and you've got a computer or tablet device, please follow the link on the screen and you can run some numbers with me.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide27.png" alt="Slide: Hard but worth it"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 1000</li>
<li>Risk: 100</li>
<li>Value: 1000</li>
<li>CRV Factor: 3.32</li>
</ul>
<p>Hard but worth it.</p>
<p><em>slide</em></p>
<p>The project has moderately high complexity, well mitigated risk, and great value to your client. You are a specialist in a valuable field. Your clients are lucky to have your attention.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide28.png" alt="Slide: Assholes and superheroes"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 100</li>
<li>Risk: 1000</li>
<li>Value: 100</li>
<li>CRV Factor: 3.08</li>
</ul>
<p>Assholes and superheroes.</p>
<p><em>slide</em></p>
<p>We've probably all worked on this project, right? It's a good fit for your skill set, and it's quite worth while for your client, but your client is an ass. Or doesn't have the money. Or needs it next week.</p>
<p>The nice thing about these jobs is this: you get to be the superhero, if you're willing to work under these pressures.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide29.png" alt="Slide: Danger Will Robinson"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 2500</li>
<li>Risk: 2500</li>
<li>Value: 10</li>
<li>CRV Factor: 3.70</li>
</ul>
<p>Danger Will Robinson!</p>
<p><em>slide</em></p>
<p>Sometimes I feel like every job I quote looks like this. I can't think of anyone else getting it right, but the risks are significant and when it's done, the client isn't going to get their money's worth anyway.</p>
<p>These are the jobs you refactor for your customer. Drive the complexity down. Mitigate more risk up front, maybe by doing a discovery phase. Shift the priorities so there is more value in the final project.</p>
<p>Make this project a better project, or embrace the multiplier of almost four and hope they decide you're too expensive.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide30.png" alt="Slide: Sweet spot"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 100</li>
<li>Risk: 100</li>
<li>Value: 100</li>
<li>CRV Factor: 2.48</li>
</ul>
<p>The sweet spot.</p>
<p><em>slide</em></p>
<p>I like these jobs: Competition's not too tight, the job has manageable risks, and it's going to be worth it to your client. It's a factor of almost 2.5 times your Ideal Cost. You can afford to hold out for the jobs you want. You enjoy your customers and your work.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value-wordcamp/slide31.png" alt="Slide: Contact information"></p>
<p><em>slide</em></p>
<p>@version2beta</p>
<p>http://twitter.com/version2beta | http://version2beta.com</p>
<p>CRV Factor Calculator: http://version2beta.com/static/examples/managing-risk-and-selling-value-wordcamp/crv-calculator.html</p>
<p>Tech support is always free!*</p>
<ul>
<li>Free as in beer. Means you buy me a beer and I give you tech support.</li>
</ul>
<p><em>slide</em></p>
<p>I want to remind you that this formula is a model for pricing your work. It helps you understand your client, the project, and your self. Along the way it may make you a better businessperson. It's a framework for thinking about the work you do.</p>
<p>Oh, and use my calculator. It helps.</p>
<p>Hopefully I left a little time for questions?</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>A formula for calculating an order quantity that minimizes the total holding and ordering costs. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>The logarithm (or log) of a number is the exponent you'd put on a base number like 10 or e to get that number. For example, log<sub>10</sub>(1000) is 3, because 10<sup>3</sup> is 1000. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Cost_accounting" title="Wikipedia article on cost accounting.">Cost accounting</a> tries to evaluate production in terms of direct and indirect costs. Traditionally, it views labor as a direct cost. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Throughput_accounting" title="Wikipedia article on throughput accounting.">Throughput accounting</a> is a simplified managerial accounting model that focuses on simple measures that drive behavior in key areas toward organizational goals. While I was trying to figure out how to describe this, I also found an <a href="http://www.forbes.com/sites/stevedenning/2011/08/16/how-do-you-explain-radical-management-or-agile-to-a-cfo/" title="Forbes article on explaining Agile to the CFO.">interesting article in Forbes Magazine</a> about explaining Agile to the CFO using, in part, Throughput Accounting. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p>I used <a href="http://www.c2gps.com/" title="C2 Creative Talent">C2</a> as an example here because I know them and have worked with them. They're good people. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/managing-risk-and-selling-value-wordcamp</link><guid isPermaLink="true">http://version2beta.com/articles/managing-risk-and-selling-value-wordcamp</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>In February 2013 I heard about the MKE Event for the International Open Data Hackathon<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Since it had the word &quot;hackathon&quot; in the title, I thought I'd attend. I didn't know any more than that. It was awesome - here were a group of people, none of whom I already knew, who were part of the Milwaukee Data Initiative<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>. They work to get Milwaukee to open up its critical data to citizen hackers who will build applications that make that data useful to the people of Milwaukee. I worked on a team that scraped the night parking regulations and built an interactive, zoomable map of Milwaukee that tells you the night parking regulations for any address, simply by clicking on the map.</p>
<p>The next month I attended PyCon 2013<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> in Santa Clara, California, and through a series of mishaps ended up in a tutorial called &quot;Learn Python Through Public Data Hacking&quot;, led by David Beazley.<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup> He started off with a warning that &quot;Learn Python&quot; was the important part of the tutorial title, and that it wasn't a tutorial on hacking public data. I was disappointed, since I felt like I already knew Python pretty well and looked forward to pursuing my new-found interest in civic data hacking. I was in for a surprise. Not only did I learn a ton about civic data hacking in the next 3 hours and 20 minutes, but he absolutely kicked my butt with Python, too.</p>
<p>I started attending the Milwaukee Data Initiative meetups regularly, and I got a brief opportunity to demonstrate some of the code I wrote in David's tutorial. That led to this presentation on exploring data sets from the inside-out using IPython and Pandas. It also led to a conversation with Rafael Santana, a founder of the Milwaukee Tech Engine.[^techengine] Ultimately I presented at a joint meetup for members of the Milwaukee Data Initiative, Milwaukee Tech Engine, and MKE Python.<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<p>This presentation is not about learning Python. In fact, using Python is ancillary to the workshop - only enough Python is demonstrated to work interactively with various data sets. To a limited extent, it is a workshop about using IPython<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>, an interactive Python shell that can be run in the browser and supports rich media like charts and graphs. To a greater extent, it's about Pandas,<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup> a data analysis library for Python. These two technologies are presented in the context of civic hacking, with a couple of provided data sets and some challenges that participants might solve using these tools.</p>
<p>I write my presentations in advance, and then do my best to present what I wrote, so this post is something close to a transcript of my presentation. Actually, it's a transcript of how I meant to give the presentation, without the 'ums' and 'ahs', nervous pauses, misplaced words, and sections I undoubtedly missed due to my numerous deficiencies in public speaking. My slides are inline below, but check out <a href="/static/examples/civic-hacking-with-ipython-and-pandas.html">my slide deck online</a> too. Keep in mind this was a 90 minute hands-on workshop, so the slides and this writeup are not the important part. The important part was the people at their laptops learning by doing.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide01.png" alt="Slide: @version2beta and contact information"></p>
<p>Hi, I'm version2beta. Some people call me Rob. You can call me either.</p>
<p>This is a civic hacking presentation, and we're going to work with a couple of data sets that might pique your interest. Hopefully, just the nature of the data we've collected will suggest to some questions that you'll want to answer for yourself. Just in case it doesn't, we also have some challenges.</p>
<p>It's not a presentation on learning to program in Python, but we are going to use an interactive Python shell called IPython, and a data analysis library called Pandas. So along the way you'll probably learn at least enough Python to start using these two tools.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide02.png" alt="Slide: Warning, I am not a mathematician"></p>
<p>As you're working with the data and tools, you might be inclined to use probability and statistics. If you feel so moved, please go right ahead. But I do want to warn you that I'm a programmer, not a mathematician, so my utility in that area will be limited. I do understand however that we have engineers in the house who are probably pretty good at the probability and statistics stuff, and as a group I hope we'll help each other out.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide03.png" alt="Slide: Let's start with a story"></p>
<p>I think it's best to start a presentation off with a story. Often that story offers a little bit about the presenter. I'm going to start with a story, but it'll be only a very little bit about me, and much more about two guys named David Beazley and Travis Oliphant. And also a bus in Chicago.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide04.png" alt="Slide: David Beazley"></p>
<p>Last March, I went to PyCon, the big conference for people who use and hack on the Python programming language. Through a series of misadventures involving bad network connections and other computing problems, I ended up in a tutorial called &quot;Learning Python Through Public Data Hacking&quot; put on by David Beazley. At the time I didn't know anything about David Beazley, which was clearly a gaping hole in my Python education. Among many other contributions, he wrote the Python Essential Reference, the first and possibly most serious reference book published for Python. It's been called &quot;the best programming book I have ever seen&quot; and &quot;the sweet spot of concise usefulness&quot; by people who like programming books. Other people have said &quot;It makes my eyes hurt&quot; and &quot;This is not a book for learning Python. It's a book for writing Python.&quot;</p>
<p>This book is for heavy lifting.</p>
<p>David himself does some pretty heavy lifting, but when he introduced the tutorial, he wanted to make sure we all knew it was much more about &quot;learning Python&quot; and much less about &quot;public data hacking&quot;. I was disappointed; I felt like I already knew Python programming pretty well and looked forward to the public hacking part of the presentation. And then, for the next three hours and twenty minutes, David proceeded to kick my ass with both Python and public data hacking. I think I crawled out of the room at the end.</p>
<p>He prepared three challenges for us. The first one came from his own experience, and involved Travis Oliphant.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide05.png" alt="Slide: Travis Oliphant"></p>
<p>Travis Oliphant is a little bit indescribable.</p>
<p>I interviewed for a job with Google not too long ago, and the interviewer asked me to rate my skills on a scale of 1 to 10. She anticipated my question on what kind of scale Google uses when it comes to rating your skills, since they have some of the best programmers in the world working there. She described how a three or four indicated the kind of competence where you could use a skill independently, and a six or seven is &quot;expert&quot;. You don't get to a ten unless you not only created the technology, but it was probably your PhD. dissertation.</p>
<p>Travis Oliphant is a ten. He has degrees in Mathematics and Electrical Engineering, got his PhD. at the Mayo Clinic, and taught at Bringham Young University for seven years. He's the author and primary developer of the NumPy library for numerical analysis, and a founding contributor to the SciPy library for scientific computing. Right now he's CEO of Continuum Analytics, a company that makes the kind of Python tools I use in my dreams where I think I'm a genius and everyone needs me to save the world.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide06.png" alt="Slide: The case of the missing bag"></p>
<p>David told a story about a time when Travis came to see him. Travis flew into Chicago where David's office is, and took public transportation to David's office. The last leg of his trip was on bus route 22.</p>
<p>When Travis arrived, he realized he left his suitcase on the bus. A Chicago city bus.</p>
<p>Mere mortals would kiss that bag goodbye, but not David and Travis. They went up to the office and wrote a quick Python program to poll the city data for all of the CTA buses, track the location of all the buses on route 22, and pop open a browser window whenever one of the route 22 buses approached within a half mile of David's office. Then they'd run outside and check for Travis' suitcase.</p>
<p>It took about eight hours til the right bus came by again, but there was his bag. The driver didn't even blink when these two middle-age white guys got on the bus, grabbed a suitcase, and got back off.</p>
<p>This was our first challenge in David's Learn Python tutorial. Write a Python program to find Travis' suitcase. Some of my code is on the slide, along with a sample of the map I generated.</p>
<p>I don't have any great stories like that, which is why you heard David and Travis' story instead of mine. I'm not going to ask you to connect to the CTA website and find a bus. It was a fun program to write, but honestly, it took me as much time to figure it out as we have for this entire presentation. Instead, we're going to use some of the tools that David introduced in his workshop, and a couple of data sets we put together for you, and solve a few challenges that are focus on the data.</p>
<p>First, of course, we need the tools.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide07.png" alt="Slide: Installing IPython and Pandas"></p>
<p>If you've already installed IPython and Pandas, please consider making yourself available to other people as they try to work through it.</p>
<p>Anaconda is a free-for-all-to-use distribution of Python, IPython, and about 93 other tools from Travis' company, Continuum Analytics, and others. It's not the only way to get IPython and Pandas, but in many ways it's the easiest and most complete set of data analytics tools you can install on a Linux, Mac, or Windows computer. Use the address on the slide for downloading, or there are a couple of USB keys going around that have the various versions available.</p>
<p>If you're using one of the USB keys, also grab the data folder. If you're not, follow the data links and get the downloads.</p>
<p>Once you've downloaded the package, run the installer as directed for your operating system. For Mac and Linux users, it's just a Bash script to install. Windows users double click on the executable.</p>
<p>Let's take ten minutes or so and make sure everyone gets up and running. When you've got it installed and working, you should be able to run the command at the bottom to get IPython running within your default browser.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide08.png" alt="Slide: Navigating IPython"></p>
<p>Now that you have IPython Notebook running, let's look around a little bit. Start by clicking the button for a new notebook.</p>
<p>If you've worked with other programming languages, you probably recognize that this is different. IPython is an interactive shell, sometimes called a REPL or &quot;Read-Evaluate-Print-Loop&quot;, a program that lets you type in programming statements and see the result. IPython Notebook is a much prettier version that runs in your browser and gives you a bunch of extra tools, like the ability to edit and re-run lines, save your work, refer to previous results, and even make graphics right inside your browser.</p>
<p>Try a simple &quot;Hello World&quot; application, right on the first line. Just type the line on the slide, &quot;print 'Hello, World!'&quot;</p>
<p>If you press Enter, your cursor just moves down on the same line. This is so that you can enter a block of code - more than one line that all execute together.</p>
<p>If you press Shift-Enter, IPython will execute your code and underneath that line, you'll get the string &quot;Hello, World!&quot;. That's called &quot;running the cell&quot;. Now you'll also have a new line (also called a new cell) to type more code.</p>
<p>Before you type into the second line, click back on the first. This time, instead of pressing Shift-Enter, press Control-Enter. Control-Enter lets you run the line just like Shift-Enter does, but keeps your cursor on the same line. This is convenient if you want to stay on one line of code until you get it right.</p>
<p>You can also see that IPython has drop-down menus and a button bar. The menu lets you do things like save your notebook so you can come back to it later, add new cells inbetween the cells you've already made, and run your notebook from start to finish. The button bar lets you do things like save your notebook, copy and paste, move cells up and down, run your cell, and even change cells to text or headlines so that you can turn your notebook into a document with embedded live code and its output.</p>
<p>Pretty slick, huh.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide09.png" alt="Slide: Using Pandas"></p>
<p>Okay, that's all the introduction to IPython we're going to do for now. It's that easy. Let's start with Pandas.</p>
<p>Pandas is also easy. First we need to tell Python to use it. That's &quot;import pandas&quot;.</p>
<ul>
<li>import pandas</li>
</ul>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide10.png" alt="Slide: Pandas Series"></p>
<p>Pandas has two main data types, Series and Data Frames. Series are one-dimensional, just a list with an index. This slide has some examples on how you might create a Pandas Series. Try one or try them all.</p>
<pre><code>ds1 = pandas.Series(range(10))
ds2 = pandas.Series(list('MilwaukeeData'))
ds3 = pandas.Series(np.random.random_integers(0,100,10))
ds4 = pandas.Series(np.random.choice(list('AEIOU'), 10))
</code></pre>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide11.png" alt="Slide: Pandas Data Frames"></p>
<p>Data frames are two-dimensional, like a matrix or a table. Each column in a data frame is a series, except that they all share the same index. This slide has some examples on how you might create a data frame. Enter all three of these - we'll reference them again.</p>
<pre><code>df1 = pandas.DataFrame(np.random.rand(10,4), index=range(10), columns=list('ABCD'))
df2 = pandas.DataFrame(
    np.random.randn(10,4), index=list('abcdefghij'), columns=list('ABCD'))
df3 = pandas.DataFrame(
    {'A': list('ABCDEFGHIJ'), 'B': np.random.choice(list('ABCDEFGHIJ'),10), 'C': range(10)})
</code></pre>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide12.png" alt="Slide: Viewing data"></p>
<p>Now that you have a data frame, here are some different ways to look at the data. Try each of them yourself.</p>
<pre><code>df1.head()
df2.tail(3)
df2.index
df3.columns
df2.values
df2.sort_index(axis=0, ascending=False)
df2.sort_index(axis=1, ascending=False)
df1.sort(columns='A')
df1.describe()
</code></pre>
<p>I should point out about this point that this is hands on learning. I'm pulling a Zed Shaw, Learning Code The Hard Way on you. I want you to type it all in and learn it with your fingers, not copy and paste. I want you to remember the input, see the output, and make connections in your head. If you're not seeing it, interrupt me and let's talk through it.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide13.png" alt="Slide: Selecting data"></p>
<p>Selecting data from a data frame returns either a series if you select one column, or another data frame if you select a subset of the data frame.</p>
<p>Try each of these selections:</p>
<pre><code>df1['A'] # column A
df3.loc[0] # row 0, where index is 0 - 9
df3.loc[0:3] # the first four rows, where index is 0 - 9
df2.loc['a'] # row 'a', where index is 'a' - 'j'
df2.loc['a':'d'] # the first four rows, where index is 'a' - 'j'
df2.iloc[3] # the third row
df2.loc['a':'c', ['A', 'C']] # columns A and C for the first three rows
df2.iloc[0:2, 0:2] # the first two rows and columns
df2.at['a','A'] # the single value at row 'a' column 'A'
df2.iat[0,0] # the single value in the first row and first column
df1.ix[1:3,0:2] # The second and third row, first and second column
df2.ix[1:3,0:2] # The second and third row, first and second column
</code></pre>
<p><code>loc</code> is location. <code>iloc</code> is integer location, regardless of how the data frame is indexed. <code>ix</code> is cool - it will try what you give it first as labels for the row and column, then as integer locations.</p>
<p>One thing I've learned with Pandas is that there are a number of ways to get to your data. Many of them are wrong and end up looking pretty ugly. It's good to know several ways, so when things get ugly, you can try a different way.</p>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide14.png" alt="Slide: Selecting data conditionally"></p>
<p>With Pandas, you can also select data conditionally, as in, if the data in a cell meets a certain condition, return it.</p>
<p>Try these selections:</p>
<pre><code>df1[df1['A'] &gt; 0.5]
df2[df2 &gt; 0]
df3[df3['B'] &lt; 'h']
</code></pre>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide15.png" alt="Slide: Assigning values"></p>
<p>You can use the selection statements to assign values. Try these:</p>
<pre><code>df3.at[9,'C'] = 10
df3['d'] = pandas.Series([9,8,7,6,5,4,3,2,1], index=range(10))
df2.iat[0,0] = 0
df2 = -df2
df4 = df2.copy()
df4[df4 &gt; 0] = -df4
</code></pre>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide16.png" alt="Slide: Some statistics"></p>
<p>There are of course some statistical tools available. Try some of these.</p>
<pre><code>df1.min()
df1.min(1) # other axis
df1.max()
df1.max(1) # other axis
df1.mean()
df1.mean(1) # other axis
df1.median()
df3['b'].value_counts()
df3['b'].rank()
df1.std()
df1.quantile()
</code></pre>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide17.png" alt="Slide: Cool data sets"></p>
<p>Let's take a break for a moment and talk about interesting data sets before we get into the challenges we have for you. Here's a list of some that I find interesting. What are some others?</p>
<ul>
<li>Milwaukee County Transit stops and times</li>
<li>The address of every parking spot in Milwaukee</li>
<li>The location of every pothole in Chicago</li>
<li>The location of every drinking fountain in NYC</li>
<li>A list of every federal goverment agency</li>
</ul>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide18.png" alt="Slide: Challenge 1 Milwaukee Water Usage"></p>
<p>Water data set from <a href="https://github.com/milwaukeedata/MilwaukeeWater2011">https://github.com/milwaukeedata/MilwaukeeWater2011</a>:</p>
<pre><code>dfw = pandas.read_csv('MilwaukeeWater2011/Milwaukee-2011-07-14.csv', index_col=False, parse_dates=[4,5])
dfw.iloc[0]
</code></pre>
<p>Some challenges:</p>
<ul>
<li>Easy: Total Milwaukee water use</li>
<li>Easy: Average water use</li>
<li>Medium: Address with most water use</li>
<li>Hard: Average water use per day</li>
</ul>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide19.png" alt="Slide: Challenge 2 Milwaukee Parking Tickets"></p>
<p>Parking tickets data set from <a href="https://github.com/milwaukeedata/MKE_2012_Parking_Violations">https://github.com/milwaukeedata/MKE_2012_Parking_Violations</a>:</p>
<pre><code>dft = pandas.read_csv(
    'MKE_2012_Parking_Violations/2012_MKE_tickets_issued.csv',
    parse_dates=[1], index_col=1)
dft.iloc[0]
</code></pre>
<p>Some challenges:</p>
<ul>
<li>Easy: Most ticketed offenses</li>
<li>Easy: Most ticketed addresses</li>
<li>Hard: Worst time of day</li>
</ul>
<hr>
<p><img src="/static/examples/civic-hacking-with-ipython-and-pandas/slide20.png" alt="Slide: Final slide"></p>
<p>I'd like to thank you for listening. As always, my presentations come with a 100% money back guarantee plus tech support that is &quot;Free as in beer&quot;, which of course means if you buy me a beer, I'll give you tech support.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>The <a href="http://opendataday.org/" title="International Open Data Hackathon">International Open Data Hackathon</a> is an annual event inviting citizens in cities around the world to write applications, liberate data, create visualizations, and publish analyses using open and public data to encourage the adoption of open data policies by governments around the world. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>The <a href="http://milwaukeedata.org/" title="The Milwaukee Data Initiative">Milwaukee Data Initiative</a> is an advocacy workgroup that works to change the way Milwaukee uses and shares critical data. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="https://us.pycon.org/2013/" title="The website for PyCon 2013">PyCon</a> is the largest annual gathering for the community of people using and developing the Python programming language. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p>Here's the PyCon 2013 tutorial listing for <a href="http://www.dabeaz.com/" title="David Beazley's website">David Beazley's</a> <a href="https://us.pycon.org/2013/schedule/presentation/2/" title="The PyCon 2013 tutorial on learning Python through public data hacking">Learn Python through Public Data Hacking</a>. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p>I used to introduce myself at the <a href="http://www.meetup.com/RubyMKE/" title="RubyMKE meetup page">RubyMKE</a> and <a href="http://www.meetup.com/milwaukeejs/" title="Milwaukee JS meetup page">MilwaukeeJS</a> meetups as a Python programmer without a Python meetup. It's true, we had Ruby and Javascript and HTML5 and .Net, but no Python meetup. I attended these other language meetups in order to improve myself as a programmer. Anyway, someone heard me (TJ Kells and his employer, <a href="http://corvisa.com/" title="Corvisa is hiring. Check them out.">Corvisa</a>) and soon there was a Python meetup too. Actually, soon there was also a Perl meetup, which is actually pretty cool, even if I haven't used much Perl in the last decade. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p><a href="http://ipython.org/" title="The IPython Interactive Computing website">IPython</a> is an interactive Python shell running in the terminal, in Qt-based windows, and in the browser with support for code, text, mathematical expressions, inline plotting, and other rich media. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
<li id="fn7"  class="footnote-item"><p><a href="http://pandas.pydata.org/" title="Pandas data analysis library for Python">Pandas</a> is an open source Python library that provides high-performance, easy-to-use data structures and data analysis tools. <a href="#fnref7" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/civic-hacking-with-ipython-and-pandas</link><guid isPermaLink="true">http://version2beta.com/articles/civic-hacking-with-ipython-and-pandas</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p><strong>Comments lie.</strong></p>
<p>My favorite example of this was described in the Ruby Rogues podcast, episode 79.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> I believe it went something like this:</p>
<pre><code>five = 7; # 12
</code></pre>
<p>This comment is funny, but most comment-based lies are much more sinister. They hide, waiting patiently to spring out and bite the next programmer in the ass. Sure the comments were written in good faith, and they probably documented the system accurately when the comment was written. But code changes, often before we even get out of our chairs, and there are few systems guaranteeing that we keep inline documentation consistent with the code base as it changes.</p>
<p>We can make a commitment to avoiding comments that lie. One of the guiding principles of Python is that computers don't care how the code is written (and whenever I read that, I think of obfuscated Perl). Future programmers working on the code base do care how the program is written, because they have to read it. We have an obligation to that future programmer to make our code obvious.</p>
<p>As it says in the Zen of Python,<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> &quot;Readability counts.&quot;</p>
<p>It also says, &quot;If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea.&quot;</p>
<p>It also says, &quot;Simple is better than complex.&quot;</p>
<p>Let's take those aphorisms and apply them to our commitment about avoiding comments that lie. So now I want to change what I said above. Instead of &quot;Avoid comments that lie&quot;, let's try &quot;<strong>Avoid comments.</strong>&quot;</p>
<p>This is a guiding principal, not a carved-in-stone law. Try to write code that doesn't contain inline comments.</p>
<p>Here are two ways to do that.</p>
<h2>Write a test instead</h2>
<p>When you find yourself wanting to write a comment, write a test instead. Not just a test, but a spec. Tests don't lie - they either pass or they fail. If you write it as a spec, any future developer on your project (including you in six months - or maybe just after lunch) can view the test and see exactly what the code is supposed to do. Even better, you can see whether or not the code and the spec are still in sync with each other.</p>
<p>Here's a function written in Python. I'm not going to tell you what it does, and it doesn't have any comments.</p>
<pre><code>def matcher(i):
    group = {}
    for element in i:
        sorted_el = ''.join(sorted(list(element)))
        if group.get(sorted_el):
            group[sorted_el].append(element)
        else:
            group[sorted_el] = [element]
            group[sorted_el].sort()
    return sorted([v for k,v in group.iteritems()])
</code></pre>
<p>Since this is a public function written in Python, it should actually have a docstring.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> I'd give it one like this:</p>
<pre><code>def matcher(i):
    &quot;&quot;&quot;Group items that have the same letters.&quot;&quot;&quot;
    ...
</code></pre>
<p>Docstrings can lie just as easily as any other comment, and we want to document this code in a way that proves both the code and the comment are correct (or at least both wrong in the same way.)<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>I learned Test Driven Development and Behavior Driven Development using Ruby and RSpec,<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> so in Python I tend toward tests written using Nose<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> and Expecter<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>. Here's my test for this function:</p>
<pre><code>class TestMatcher(unittest.TestCase):
    def test_that_strings_are_grouped_by_component_letters(self):
        expect(
            matcher(['abc', 'def', 'aca', 'acb', 'fed', 'edf', 'c'])) == \
              [['abc', 'acb'], ['aca'], ['c'], ['def', 'edf', 'fed']]
</code></pre>
<p>So now my code has an example, and the beauty of it is that this is a specification can be proven, over and over again. This test tells me what kind of result to expect, and lets me demonstrate that the code actually achieves that result any time I wish.</p>
<p>One disadvantage of the &quot;write a test instead&quot; option is that the documentation (specification, really) is not in the same place as the code. It may not be in the same file or even the same directory. This can make it difficult to find. So here's an alternative to writing a comment that puts the appropriate documentation in the code at exactly the place you wanted to put the comment. Bonus, it complements the &quot;write a test instead&quot; directive.</p>
<h2>Write a function instead</h2>
<p>Write a function instead, and name your function for whatever you were going to put in your comment.</p>
<p>Here's an example, this time in Ruby. (Caveat: I'm still learning Ruby, so try not to laugh if I'm Doing It Wrong. Actually, laugh if you want, but please leave me a comment with advice.)</p>
<pre><code>class Matcher

  def initialize
    @my_hash = Hash.new
  end

  def make_hash(list)
    list.each do |e|
      # Add the list element to my hash keyed to
      # the element's component letters, sorted
      key = e.split(//).sort().join()
      if @my_hash.has_key?(key)
        @my_hash[key] &lt;&lt; e
      else
        @my_hash[key] = [e]
      end
    end
    return @my_hash
  end

end
</code></pre>
<p>See that comment in the middle? It explains what the next six lines of code do, the six lines of code that are making my method long and ugly. Let's refactor that comment into a method.</p>
<pre><code>class Matcher

  def initialize
    @my_hash = Hash.new
  end

  def add_to_hash(a_hash, key, e)
    if a_hash.has_key?(key)
      a_hash[key] &lt;&lt; e
    else
      a_hash[key] = [e]
    end
  end

  def make_hash(list)
    list.select{ |e| add_to_hash(@my_hash, e.split(//).sort().join(), e) }
    return @my_hash
  end

end
</code></pre>
<p>So now instead of the comment that described what the code was doing when I wrote the class, we defined a new method. Plus, the new method can be tested separately.</p>
<p>We still have a bit of code in the middle of the list.select block that looks obscure and a little confusing. Maybe I feel inclined to comment that, too. Let's make another method instead.</p>
<pre><code>class Matcher

  def initialize
    @my_hash = Hash.new
  end

  def add_to_hash(a_hash, key, e)
    if a_hash.has_key?(key)
      a_hash[key] &lt;&lt; e
    else
      a_hash[key] = [e]
    end
  end

  def sort_letters(a_string)
    return a_string.split(//).sort().join()
  end

  def make_hash(list)
    list.select{ |e| add_to_hash(@my_hash, sort_letters(e), e) }
    return @my_hash
  end

end
</code></pre>
<p>As I described above, this works in conjunction with tests, so as I'm refactoring my code-in-need-of-comments, I'm also running my tests to make sure that the code meets the spec all along. Here is a test for this code that meets the requirements above, specifying what the code is expected to do and giving an example.</p>
<pre><code>test_data = ['abc', 'def', 'aca', 'acb', 'fed', 'edf', 'c']

hash_data = {
  'abc' =&gt; [ 'abc', 'acb' ],
  'def' =&gt; [ 'def', 'fed', 'edf' ],
  'aac' =&gt; [ 'aca' ] ,
  'c' =&gt; [ 'c' ]
}

describe Matcher do
  it &quot;creates a hash that groups strings by component letters&quot; do
    matcher = Matcher.new
    expect(matcher.make_hash test_data).to eq hash_data
  end
end
</code></pre>
<h2>Stop commenting your code</h2>
<p>I've written tens of thousands of inline comments in the last 30 years. I can absolutely promise you that most of them are useless. They are all written from good intentions. Many of them inject humor, or at least personality. Quite a few of them were written to demonstrate how clever I am. Some of them might even help the poor sod who is now stuck maintaining that code understand what I was trying to do. The majority of them are probably no longer consistent with the operation of the program.</p>
<p>My motivations demonstrate why comments are often bad. My personality and attempts at being funny have little to do with shipping code. My clever programming was rarely an asset, and usually just made my code less understandable. And comments that no longer document the code as it stands now do nothing to enlighten the current maintainer. They confuse the issue.</p>
<p>I've been on the other side too, stuck with a code base that may have hundreds of lines of inline comments that made sense to someone at some point, but are useless to me now. Often I want to start from scratch rather than wallow through someone else's wall of text figuring out what's true and what's not.</p>
<p>Using these directives, my code is cleaner. It's not perfect, and I'm still learning, but at least the person who has to read it has a fighting chance.</p>
<p>Give it a try. Stop commenting your code, and see if it doesn't make you a better programmer.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://rubyrogues.com/" title="Ruby Rogues podcast">Ruby Rogues</a> is a podcast about Ruby, as you may have guessed, but I started listening to it more than a year before I considered myself a Ruby programmer. The Rogues have consistently been one of my best sources for learning to be a better programmer, regardless of language. It's fair to say I've been writing this blog post in my head ever since I listened to episode 79, <a href="http://rubyrogues.com/079-rr-documenting-code/" title="Ruby Rogues episode 79, Documenting Code">Documenting Code</a>. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p><a href="http://www.python.org/dev/peps/pep-0020/" title="The Zen of Python">The Zen of Python</a> are 20 aphorisms about coding in Python, and coding in general. They are Python's guiding principles. Also called PEP 20. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://www.python.org/dev/peps/pep-0257/" title="PEP 257 Docstring Conventions">PEP 257 Docstring Conventions</a> documents the semantics of docstrings. According to <a href="http://www.python.org/dev/peps/pep-0008/" title="PEP 8 Style Guide for Python">PEP 8, the style guide for Python</a>, all public modules, functions, classes, and methods should have a docstring that define the purpose of the code block. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p>I don't cover doctests here, but the Python standard library does include a way to write docstrings that prove the code works. They're called <a href="http://docs.python.org/2/library/doctest.html" title="The Python Doctest library">Doctests</a>. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p><a href="http://rspec.info/" title="RSpec documentation">RSpec</a> is a Ruby testing tool for Behavior Driven Development. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p><a href="https://nose.readthedocs.org/en/latest/" title="Nose documentation at ReadTheDocs.org">Nose is a testing framework</a> that extend's Python's unittest to make testing in Python nicer. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
<li id="fn7"  class="footnote-item"><p><a href="https://github.com/garybernhardt/expecter" title="Gary Bernhardt's Expecter assertion library">Expecter is an assertion library</a> written by Gary Bernhardt that helps you write assertions that describe expected behavior. I came across this library quite directly. When I started using test driven development in Python, all I knew was RSpec and I wanted to write expect-style assertions in Python. <a href="https://twitter.com/garybernhardt" title="Gary Bernhardt on Twitter">Gary Bernhardt</a> was the best person I knew at the intersection of Ruby, Python, and testing, so I tweeted at him and asked for his advice. He directed me to this library. <a href="#fnref7" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/dont-comment-your-code</link><guid isPermaLink="true">http://version2beta.com/articles/dont-comment-your-code</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>In this blog post, my coworker and boss Paul Morel has just completed a migration from MySQL to PostgreSQL on a codebase using SQLAlchemy. Paul has collected together some gotchas and WTF's for posterity, and very graciously asked me if I'd like to post them to my blog - an opportunity I jumped at.</p>
<p>In order to round out the conversation, I also asked Mike Bayer<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> to review Paul's notes and provide any commentary he thinks may be helpful. Mike is the author of SQLAlchemy, as well as a number of other powerful Python tools.</p>
<p>Paul's notes, and Mike's responses, are interleaved below.</p>
<p><strong>Paul Morel</strong>:</p>
<p>SQLAlchemy does not wrap the Boolean column for MySQL so that 1's are <code>True</code> and 0's are <code>False</code>.  This means that all code must be updated to change conditions from <code>== 1</code> to <code>== True</code> and <code>== 0</code> to <code>== False</code>.  Postgres does this right by having booleans while MySQL only has tinyint.  The SQLAlchemy class should probably mask this from developer so the Boolean column only returns <code>True</code>, <code>False</code>, and <code>None</code>.</p>
<p><strong>Mike Bayer</strong>:</p>
<blockquote>
<p>SQLAlchemy does not wrap the Boolean column for MySQL so that 1s = True and 0s = False.  This means that all code must be updated to change conditions from == 1 to == True and == 0 to == False.</p>
</blockquote>
<p>The SQLAlchemy Boolean type specifically handles the True/False constants, and translates them to 1 and 0 on the <em>backend</em> side, not the public side, for backends that don't have a native boolean of their own, e.g. MySQL.  However, if your code deals with all == 1 and == 0, the first thing to note is that the True/False constants in Python <em>are</em> the integers 1 and 0 (try True == 1, type(True).<strong>mro</strong> to see).  The second thing is that SQLA's Boolean type when used against psycopg2 doesn't do any coercion, and psycopg2 doesn't either, but for any type you can add whatever coercion you like using TypeDecorator:</p>
<pre><code>from sqlalchemy import create_engine
from sqlalchemy import MetaData, Column, Table, Boolean, TypeDecorator

class CoerceBool(TypeDecorator):
  impl = Boolean

  def process_bind_param(self, value, dialect):
    if value is not None:
      return bool(value)
    else:
      return None

t1 = Table('t1', MetaData(), Column('boolvalue', CoerceBool))

e = create_engine(&quot;postgresql://scott:tiger@localhost/test&quot;, echo=True)
conn = e.connect()
trans = conn.begin()

t1.create(conn)
conn.execute(t1.insert(), {'boolvalue': 1})
assert conn.scalar(t1.select()) is True
assert conn.scalar(t1.select().where(t1.c.boolvalue == 1)) is True

trans.rollback()
</code></pre>
<blockquote>
<p>Postgres does this right by having booleans while MySQL only has tinyint.  The SQLAlchemy class should probably mask this from developer so the Boolean column only returns True, False, and None.</p>
</blockquote>
<p>I don't understand this statement since this is exactly what the Boolean type <em>does</em> do.  Boolean only returns True, False and None, assuming you're using it against a boolean column on postgresql.  If you point it at an int, that's the wrong usage.  Use a TypeDecorator around Integer for that.</p>
<p><strong>Paul Morel</strong>:</p>
<p>SQLAlchemy does not alias the <code>func.ifnull</code> function as <code>COALESCE</code> for Postgres.  So, any code using the <code>ifnull</code> method breaks until it is changed to <code>func.coalesce()</code>.  You can use <code>func.coalesce</code> with MySQL so it is safer to start with that but any legacy code still using <code>ifnull</code> must be changed for Postgres use.</p>
<p><strong>Mike Bayer</strong>:</p>
<blockquote>
<p>SQLAlchemy does not alias the <code>func.ifnull</code> function as <code>COALESCE</code> for Postgres.  So, any code using the <code>ifnull</code> method breaks until it is changed to <code>func.coalesce()</code>.</p>
</blockquote>
<p>You can redefine any func.<xyz> in any way you'd like per specific backend.  It's easier in 0.8 which I recommend for new projects:</p>
<pre><code>from sqlalchemy.sql.functions import GenericFunction
from sqlalchemy.ext.compiler import compiles
from sqlalchemy import create_engine, func

class IfNull(GenericFunction):
  name = 'ifnull'

@compiles(IfNull, &quot;postgresql&quot;)
def coalesce(element, compiler, **kw):
  return compiler.process(func.coalesce(*element.clauses), **kw)

e = create_engine(&quot;postgresql://scott:tiger@localhost/test&quot;, echo=True)
assert e.scalar(func.ifnull(None, 8)) == 8
</code></pre>
<p><strong>Paul Morel</strong>:</p>
<p>MySQL treats Text column types as <code>BLOB</code>.  So migrating data from MySQL to Postgres introduces <code>\015\012\</code> characters in place of line break characters. If the data stored in a Text type column all have lengths under 255, the column can be converted to <code>varchar(255)</code> before trying to migrate the data.  If not, the binary characters need to be corrected after migration.</p>
<p><strong>Mike Bayer</strong>:</p>
<blockquote>
<p>MySQL treats Text column types as <code>BLOB</code>.  So migrating data from MySQL to Postgres introduces <code>\015\012\</code> characters in place of line break characters.</p>
</blockquote>
<p>I'm not aware of any reason why that would be true.   Whatever data you have in your MySQL BLOB comes out just as it is, and goes straight into the PG TEXT column in just the same way.   There shouldn't be any line break conversion behavior.</p>
<blockquote>
<p>If the data stored in a Text type column all have lengths under 255, the column can be converted to <code>varchar(255)</code> before trying to migrate the data.</p>
</blockquote>
<p>Postgresql supports VARCHAR of any length, including unlimited.   So feel free to declare a column as VARCHAR on PG, without a length:</p>
<pre><code>from sqlalchemy import *
import random

t = Table('t1', MetaData(), Column('data', String))

e = create_engine(&quot;postgresql://scott:tiger@localhost/test&quot;, echo=True)

data = &quot;&quot;.join(chr(random.randint(ord('A'), ord('Z'))) for i in xrange(10000))
conn = e.connect()
trans = conn.begin()

t.create(conn)
conn.execute(t.insert(), {&quot;data&quot;: data})

assert conn.scalar(t.select()) == data

trans.rollback()
</code></pre>
<blockquote>
<p>If not, the binary characters need to be corrected after migration.</p>
</blockquote>
<p>This sounds like something that's local to your own software.</p>
<p><strong>Paul Morel</strong>:</p>
<p>There is no self correcting auto increment feature for Postgres since auto increment is achieved through sequences.  Therefore, after migrating data you must update all sequences to the proper position so the nextval() command will return a valid number and not cause key violations.  I had to write a routine that would update all sequences to their latest max corresponding value for the table key where they are used.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>This is true.</p>
<p><strong>Paul Morel</strong>:</p>
<p>Granting rights to a database for a user does not actually do much.  You must grant rights on all tables specifically.  In addition, if you have auto increment sequences being used, you must also grant <code>USAGE</code> permission on the sequences.  While these can all be granted at the schema level, they do require several commands and it is rather opaque when coming from the simplicity of the MySQL security model.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>Wow I feel the total opposite, MySQL's model which inexplicably takes into account the &quot;hostname&quot; and weird things like &quot;user@<em>.</em>&quot; has never made sense to me. PG's is clear, and there's no need for a per table grant as he says, just do this:</p>
<pre><code>GRANT ALL PRIVILEGES ON DATABASE &lt;database name&gt; TO &lt;username&gt;
</code></pre>
<p>The syntax diagram at <a href="http://www.postgresql.org/docs/9.0/static/sql-grant.html">http://www.postgresql.org/docs/9.0/static/sql-grant.html</a> shows all the options.</p>
<p><strong>Paul Morel</strong>:</p>
<p>Database objects in Postgres are all expected to be lowercase.  If for some reason, you chose to use non-lowercase values for table or field names you must enclose them in double quotes.  So all of you Oracle and SQL Server developers that use all upper or camel case are going to be in for an unpleasant surprise.  SQLAlchemy handles this for you but if you have any hand written SQL those queries will need to be updated.  If you leave a field or table unquoted it will automagically get converted to lowercase when trying to access the database objects.  For a database that strives to not do magic things, this one is sort of puzzling.</p>
<p><strong>Mike Bayer</strong>:</p>
<blockquote>
<p>Database objects in Postgres are all expected to be lowercase.</p>
</blockquote>
<p>Totally untrue. Postgresql will consider a name to be case insensitive if it isn't quoted, that is <code>CREATE TABLE SomeTable ()</code>, which causes the symbol &quot;SomeTable&quot; to be represented as &quot;sometable&quot;, and it will match any casing in any statement. If you quote the name, i.e. 'CREATE TABLE &quot;SomeTable&quot;', now it's case sensitive and has to be specified as &quot;SomeTable&quot; in any statement.</p>
<p><a href="http://www.postgresql.org/docs/9.2/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS">http://www.postgresql.org/docs/9.2/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS</a></p>
<p>Quoting an identifier also makes it case-sensitive, whereas unquoted names are always folded to lower case. For example, the identifiers FOO, foo, and &quot;foo&quot; are considered the same by PostgreSQL, but &quot;Foo&quot; and &quot;FOO&quot; are different from these three and each other. (The folding of unquoted names to lower case in PostgreSQL is incompatible with the SQL standard, which says that unquoted names should be folded to upper case. Thus, foo should be equivalent to &quot;FOO&quot; not &quot;foo&quot; according to the standard. If you want to write portable applications you are advised to always quote a particular name or never quote it.)&quot;</p>
<blockquote>
<p>If for some reason, you chose to use non-lowercase values for table or field names you must enclose them in double quotes.</p>
</blockquote>
<p>See documentation above.</p>
<blockquote>
<p>So all of you Oracle and SQL Server developers that use all upper or camel case are going to be in for an unpleasant surprise.</p>
</blockquote>
<p>This is an odd statement because Oracle and SQL Server have nearly the same behavior - Oracle instead will fold case to UPPERCASE in the absence of quotes, SQL Server will maintain the casing you specify without quotes but still applies case sensitivity based on whether or not you supplied quotes (which also, conveniently, are the bracket character [] up until very recent versions).</p>
<p>MySQL IMO has by far the most unreasonable and outrageous casing behavior, basing it on <em>the operating system in use</em> :</p>
<p><a href="http://dev.mysql.com/doc/refman/5.0/en/identifier-case-sensitivity.html">http://dev.mysql.com/doc/refman/5.0/en/identifier-case-sensitivity.html</a></p>
<blockquote>
<p>SQLAlchemy handles this for you but if you have any hand written SQL those queries will need to be updated.</p>
</blockquote>
<p>If your schemas are created using case insensitive names, that is without quotes, then you can refer to any kind of casing convention you'd like in your statements. No need to update hand written statements:</p>
<pre><code>test=&gt; CREATE TABLE FooTable (SomeCrazyCasING integer);
CREATE TABLE
test=&gt; INSERT INTO fooTABLE (someCRAZYcasing) VALUES (3);
INSERT 0 1
test=&gt; SELECT SOMECRAZYCASiNG FROM FOOTABLE;
somecrazycasing
---------------
              3
        (1 row)
</code></pre>
<blockquote>
<p>If you leave a field or table unquoted it will automagically get converted to lowercase when trying to access the database objects.  For a database that strives to not do magic things, this one is sort of puzzling.</p>
</blockquote>
<p>Because the unquoted identifier name is not actually uppercase or lowercase, it's &quot;case insensitive&quot;.  Any case matches it, schema inspection tools will display it as lowercase and it will be represented in the information schema views with lowercase names (this is the one area where the case sensitivity comes back again, when searching through those tables).</p>
<p><strong>Paul Morel</strong>:</p>
<p>No simple way to perform upsert like actions in Postgres.  MySQL has a handy way to performing updates inline when key violations are detected without having to write a function to do so.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>That is true, PG is really lagging on supporting the SQL standard <code>MERGE</code>.  Then again so is MySQL which has it's own homegrown partially-compatible version of <code>MERGE</code>.</p>
<p><strong>Paul Morel</strong>:</p>
<p><code>UPDATE</code> queries using <code>INNER JOINs</code> don't work in Postgres.  There is a new syntax for joined table updates using the <code>UPDATE ... SET ... FROM ... WHERE</code> rather than <code>UPDATE ... INNER JOIN ... SET ... WHERE</code>.  Note the change in position of the <code>FROM</code> and <code>INNER JOIN</code> so no quick search and replace.  The <code>FROM</code> also takes no join conditions directly so they all need to get moved to the <code>WHERE</code>.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>This is true, and SQLAlchemy has support for <code>UPDATE ... FROM</code>.  But to refer to the Oracle background, those of us coming from Oracle just use standard SQL correlated criteria in the <code>WHERE</code> clause, which is what I usually do with <code>UPDATE</code>.</p>
<p><strong>Paul Morel</strong>:</p>
<p><code>INSERT IGNORE</code> is not available Postgres.  Sure they have a way to do it but it, again, requires writing yet another specialty function.  When we strive to not put too much logic in the database, writing a function is moving away from that goal.  There are a lot of pronouncements why <code>IGNORE</code> is a bad idea but there are some current use cases we have that absolutely make <code>IGNORE</code> a far more efficient way to import like data into tables.</p>
<p><strong>Mike Bayer</strong>:</p>
<blockquote>
<p><code>INSERT IGNORE</code> is not available Postgres.</p>
</blockquote>
<p>IMHO this is one of MySQL's crazy hacky keywords that people shouldn't be using</p>
<blockquote>
<p>Sure they have a way to do it but it, again, requires writing yet another specialty function.  When we strive to not put too much logic in the database, writing a function is moving away from that goal.  There are a lot of pronouncements why IGNORE is a bad idea but there are some current use cases we have that absolutely make IGNORE a far more efficient way to import like data into tables.</p>
</blockquote>
<p>Sure, if your codebase is based on that, and you really need to maintain those semantics, write a stored procedure, yup.</p>
<p><strong>Paul Morel</strong>:</p>
<p><code>GROUP BY</code> in Postgres follows the SQL standard requiring all non-suummary fields to appear in the <code>GROUP</code> BY clause.  MySQL allows for some laziness here where you don't need to list all the fields unless you feel like it.  So, all the <code>GROUP BY</code> clauses had to be revisited and updated in many cases to add missing fields.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>Right, this is another MySQL behavior (apparently SQLite does it too) that I'm pretty strongly against, as it produces random results in many situations. I'd recommend strongly against adding large lists of columns to the <code>GROUP BY</code>, as this is not how <code>GROUP BY</code> is meant to be used and it will lead to inefficient queries - you should only <code>GROUP BY</code> the thing that actually needs to be grouped, in a subquery.  A great article on this technique is here: <a href="http://weblogs.sqlteam.com/jeffs/archive/2005/12/14/8546.aspx">http://weblogs.sqlteam.com/jeffs/archive/2005/12/14/8546.aspx</a>.</p>
<p><strong>Paul Morel</strong>:</p>
<p>Postgres treats dates as dates and does not accept invalid dates.  MySQL stores bogus dates so during the data migration several errors occurred and cleaning of data was required.</p>
<p><strong>Mike Bayer</strong>:</p>
<p>Very true!</p>
<p><strong>Paul Morel</strong>:</p>
<p>There were also a lot of other little things that Postgres does right and MySQL doesn't.  That translates into a lot of little fixes to make syntax &quot;right&quot;.</p>
<p>All in all, I think we will be happier with Postgres but it was not a slam dunk converting despite extensive use of SQLAlchemy, which I thought would make the transition naively transparent except for the hand written queries.</p>
<p>We still need to run the performance testing to determine if we get any better performance out of Postgres for our analytics.</p>
<p><em>A final note from Rob Martin / @version2beta</em>:</p>
<p>I'd like to thank both Paul Morel and Mike Bayer for allowing me to document their conversation here. I've changed almost nothing from the emails each provided me, with the exception of making some characters capitalized and adding some puctuation marks.</p>
<p>I fully expect this discussion will be valuable to other developers migrating from MySQL to PostgreSQL. If you should use this article and wish to add to the thoughts, please leave a comment below.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://techspot.zzzeek.org/" title="Mike Bayer's blog">Mike Bayer</a> (<a href="https://twitter.com/zzzeek" title="Mike Bayer on Twitter">@zzzeek</a> on Twitter) is the author of <a href="http://www.sqlalchemy.org/" title="The Python SQL Toolkit and Object Relational Mapper">SQLAlchemy</a>, <a href="https://alembic.readthedocs.org/en/latest/front.html" title="Alembic provides SQL migrations and rollbacks, and works with SQLAlchemy">Alembic</a>, <a href="http://www.makotemplates.org/" title="Python templates without XML">Mako</a>, and other Python tools. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/migrating-from-mysql-to-postresql-using-sqlalchemy</link><guid isPermaLink="true">http://version2beta.com/articles/migrating-from-mysql-to-postresql-using-sqlalchemy</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>There is so much to say on the subject of tech sexism, and I am not the person to say it. Instead I can talk about my struggle, including concerns about my own culpability and ongoing responsibilities.</p>
<h2>I.</h2>
<p>In my first draft of this blog post, I started by listing what I do to support women in tech. But the reality is, I have no authority in this area, so I'm skipping that.</p>
<p>White people in the 1950's accepted that black people were disadvantaged. Today, not so much. A suprisingly large number of middle class white people believe that they have it every bit as bad as any black person. As a result, it's more difficult for many of these white people to recognize the advantages and privileges they have that others do not.</p>
<p>I believe this is also true for men and women. When oppression of women was practiced (even more) openly, there was no stigma in recognizing it. It was the norm. Now we accept that this form of oppression is wrong, and the result is that we can no longer see it in ourselves. Seeing it means accepting we are not the men we think we are.</p>
<h2>II.</h2>
<p>There was an incident at PyCon. A woman chose to speak up about inappropriate behavior in violation of the conference Code of Conduct. She has my complete support. I will not for a moment second guess her handling of the situation. The conference leadership also has my complete support. They (specifically the PyCon chair) were deliberate in their actions and consistent with the code of conduct.</p>
<p>Both the woman who asked for support, and the conference chair, have received vitriolic messages. I've seen these. I've heard that the conference chair has received death threats at home. I don't know that is the case. I have seen threats against the woman that scare me.</p>
<h2>III.</h2>
<p>I have a friend in San Jose. We dated in high school. To be perfectly honest I still have a crush on her.</p>
<p>She visited me at the PyCon hotel bar. Among other things, we discussed booth babes. She's been laid off from a Silicon Valley startup in the hospitality industry. They also did a big annual trade show, in Vegas. To save money they asked her to work the company's booth. There was no question about whether she would be a booth babe. They openly discussed her chest size as an unfortunate compromise. She did not accept their offer to go to Vegas.</p>
<h2>IV.</h2>
<p>At about that point in our conversation, a woman came up to the bar near us. This is the same woman who later would ask the conference for support. I commented on her in the context of our conversation about booth babes. I said I found her very attractive, and this made me suspicious that she may be more &quot;babe&quot; than &quot;tech&quot;.</p>
<p>I texted with my friend yesterday and got her recollection of what I said. Her memory of our conversation did not treat me as kindly as mine did.</p>
<p>[me] Hey remember the woman at the bar with the awesome hair that we talked about being tech or booth babe? That I didn't know who she was, just that she worked for a company I know? She's definitely a tech. ... She's been interviewed by Rachel Maddow. She's invited to speak all over the place, and is apparently amazing to hear. She is in the middle of a shitstorm right now because she called out three men for sexist comments in the closing session at PyCon.</p>
<p>[my friend] Oh my!</p>
<p>[me] She wrote about the incident. She's catching a lot of idiots I guess but also getting, and got a lot of support from PyCon and the Python community. She is going to be one of my heroes very, very soon.</p>
<p>[my friend] Well good thing she didn't hear your comments about booth babes.</p>
<p>[me] Did I accuse her of being a booth babe? I thought I said she was attractive but I had no idea whether or not she has tech skills. That I hoped she wasn't a booth babe. In part because I like the company she works for, and I want to respect them.</p>
<p>[my friend] Ah, I thought you suggested she was a booth babe.</p>
<p>[me] It sucks that the question is relevant to me at all though. It'd be better if people assumed, and I trusted, that any attractive female rep at a vendor booth is technically competent. Not that I assume the men are either. I try to ask who is able to discuss technical details regardless of whom I'm speaking with.</p>
<p>[me] I suspected she might be [a booth babe], so that's close enough.</p>
<p>[me] Anyway having learned who she is and the incredible work she does both in the tech and black communities, I thought I'd share this with you. You may find her post interesting. I knew I had mentioned her attractiveness and questioned whether she was there for those qualities.</p>
<h2>V.</h2>
<p>&quot;Smile but don't be creepy.&quot;</p>
<p>&quot;Don't make sexual advances towards women.&quot;</p>
<p>These are two of the instructions given in teacher training for Railsbridge. It's good advice. The point is to create an environment where women can feel safe participating. I've taught only one Railsbridge-style course, and I don't think these guidelines were a problem for me.</p>
<p>There is an interesting side-effect though. It should come as no surprise that a geeky guy, especially one who wishes to help create an environment where people feel safe and are treated equally, might find a geeky woman who believes the same things really quite attractive.</p>
<p>A Railsbridge session is absolutely not the right place to bring up that attraction. It's quite possible that, having worked with a woman in such a session, there is never an appropriate way to approach the topic. I really don't know.</p>
<h2>VI.</h2>
<p>I once saw author Derrick Jensen speak. I was particularly troubled by his assertion that men have a responsibility to announce and prove on every occasion that they are not a threat to women. That <strong>I</strong> must be presumed dangerous, and that <strong>I</strong> have responsibility to demonstrate definitively otherwise.</p>
<p>After I started writing this post, I saw yet another threat against the woman from PyCon. This one was posted on Twitter, and it contained her home address and phone number with a photograph that I would find disturbing even in a horror movie. It seems that Derrick Jensen was living in the real world, and I'm still learning how sheltered I've been. &quot;Check your privileges.&quot;</p>
<p>Being male is only one of my advantages. I'm white. I'm heterosexual. I'm big - tall, strong, imposing. I'm married. I have children. I have some advanced education. I have a white collar job. I live in a house. I have a car. I have connections. I come from a &quot;decent family&quot;. I'm sure the list goes on.</p>
<p>To be perfectly honest, I have trouble living with the messages I get. Sometimes my depression over just being who I am is debilitating. This depression is informed in large part by the degree of truth in the message.</p>
<p>I am the oppressor. Believe me, I can probably overpower you, male or female. Mentally I'm quick-witted and argumentative, and in an argument I can cut you down. Physically I am powerful. My hands alone are twice the size of most - my pinky, for example, is bigger and stronger than my wife's thumbs. My wife tells me I should include here that she is neither small nor weak.</p>
<p>I am the patriarch. I have tried to be a loving husband and nurturing parent, and I've been very successful in many ways. And yet I will power-over my children to get done what needs done.</p>
<p>I am entitled. Not only do I have all of these advantages, not only have I used all of these advantages, but I believe at various times that it is my <em>right</em> to use all of these advantages.</p>
<p>I'm Hulk in a kindergarden. Sometimes I can't turn around without hurting someone vulnerable.</p>
<h2>VII.</h2>
<p>I've never worked with a woman developer.</p>
<p>I'm not the only one, either. I've been collecting stories about this, asking hundreds of people in real life and online how many women developers they've worked with, and in comparison, how many male developers they've worked with.</p>
<p>These stories will become a blog post eventually. Maybe even a presentation, if I can figure out how I, a privileged heterosexual white man, can get up and talk about the position women hold in the tech community. So far the best I've come up is this: I can call for us to throw our hands in the air and reject the premise that a small number of (mostly) white men should be responsible to create our society and our culture.</p>
<p>But even there, I have looked in the mirror and recognize the enemy.</p>
<p>So then I wonder if I can just go to teach coding in some predominantly minority neighborhood, to anyone who wants to learn. I imagine maybe they won't notice I'm white, and hope that someone from the community quickly takes over and I can play only a supporting role.</p>
<h2>VIII.</h2>
<p>No one has solicited my help to solve the issues around minorities in tech - at least not beyond speaking up in support. I do not expect to be drafted in the future to solve these question either.</p>
<p>So far as I can tell, I have two responsibilities:</p>
<ol>
<li>I have privilege and power, which puts me in the class that is considerably better able to create change without violence.</li>
<li>I have children who are dependent on me, and responsibility to bring them into the community better prepared and with fewer hangups than I have.</li>
</ol>
<p>I have four children, two from my first marriage and two from my wife's first marriage. Two of them are adult women. Two of them are young men. All of them are dependent in part on me to help them learn how to check their privilege. I continue to try to teach them by example, even as I'm learning this myself.</p>
<h2>IX.</h2>
<p>I'm going to put it out here for discussion, not because it's enough: &quot;The role of women in tech is relevant to men because we have wives and daughters.&quot;</p>
<p>I've heard it many times. I've said it myself. It even has some truth to it (especially if you ignore the patriarchal way it defines a whole group of people by their relationship to some man). I want my wife and daughters to be recognized and valued for who they are, and for their contributions rather than their potential as sexual partners.</p>
<p>I started getting closer, I think, when I realized I want the role of women in tech to improve because I have two sons, also. I want them to have the experience of working with women as equals, to get the benefit of different perspectives and experiences. I want all of my children to live and work in a world that treats women as people.</p>
<p>The homogenous tech environment we have now has not only limited the opportunity for women, it limits opportunity for all of us. The role of women in tech is not relevant to me because I'm a man, it's relevant to me because I am a person. Each of us lives fuller lives when our communities include, and are built by, all kinds of people.</p>
<h2>X.</h2>
<p>I don't think the woman who asked PyCon to enforce their Code of Conduct intended to be brave. She is brave, and she's proving it repeatedly, but her courage should never have been necessary.</p>
<p>I was at PyCon, and I'm not one of the people she called out. But over a period of three decades, I've contributed to her dilemma. I'm trying to do better. I've undoubtedly been one of the jokers, inappropriate and unprofessional, at points in my career. I've never been one of the people threatening to rape or murder. Sometimes it takes the latter to even notice the former, if you're one of the privileged. I understand women and other minorities find it much easier to recognize our biases.</p>
<p>This hurts me. I've spent two and a half days half-broken in a depressed funk over this specific situation at a conference I just left. I was just there. I was with these people, beautiful and kind and caring for each other. It wasn't all unicorns and rainbows, but I do prefer my peak experiences stay where I put them.</p>
<p>Sexism in the tech community hurts me. I go to work and to tech meetups and I see variations of myself - white men, many of them younger than me these days, building the products and services that I put my heart into. We can't do this by ourselves. We need the diversity of women, of people who weren't raised in the same way I was, thinking many of the same things. When I look at this community, I don't want to see myself. I want to see us all.</p>
<p>Some sexual banter between these guys at a tech conference ended up hurting us all, but none more than this one woman at PyCon it seems. The situation continues to develop. As if threats of rape and murder were not enough response to her request that the conference enforce their code of conduct, she lost her job about ten minutes ago. <a href="https://www.facebook.com/SendGrid/posts/10151502570463967">SendGrid's announcement</a>.</p>
<p>We not only share this world, we co-create it. <strong>This means that you and I are responsible for how it has turned out.</strong> I've done my share of damage, in spite of my best efforts. I try to do my share of construction too. I'm still looking for my role, and I'm afraid it will ultimately only be clear when it's become my legacy.</p>
<hr>
<p>Thank you to <a href="https://twitter.com/kurafire">@KuraFire</a>, <a href="https://twitter.com/zspencer">@zspencer</a>, <a href="https://twitter.com/angelaharms">@angelaharms</a>, and my wife <a href="https://www.twitter.com/senvara">@senvara</a> for her help in editing this post, and to my friend in San Jose for allowing me to share our conversation. While my post has been improved by their input, I don't speak for them or anyone but myself.</p>
<p>I've decided not to use footnotes or name names in this post since it is not my intention to focus yet more vitriol on the people involved in this story.</p>
<p>On March 24, 2013 I edited sections VIII and IX based on feedback I received in order to better communicate my ideas.</p>
]]></description><link>http://version2beta.com/articles/tech-sexism-and-co-creation</link><guid isPermaLink="true">http://version2beta.com/articles/tech-sexism-and-co-creation</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I prepared this lightning talk to present at PyCon 2013<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> on March 16 in Santa Clara, California. Unfortunately, talks were selected at random. I wasn't selected Saturday evening, and even though I was select Sunday morning, apparently I was in the overflow list in case others didn't show.</p>
<p>Surely I'll have opportunity to give this talk somewhere. Meanwhile, it's here for you.</p>
<p><a href="/static/examples/tyranny-of-the-database.html">My slides are available online here</a> and as usual, this is my &quot;intended transcript&quot; - the way I meant it to be, before I messed it up by actually presenting it.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide01.png" alt="Slide: @version2beta and contact information"></p>
<p>Data represents reality.</p>
<p>Maybe just a small slice of it, but data is a slice of reality, and it's packed away inside of a database.</p>
<p>Databases model our world. Practically every electronic representation of the real world is in fact some kind of database.</p>
<p>If you use a computer, or are a customer of almost any company, then there is a database that models you.</p>
<p>As models go, databases lack a lot. They tend to store only what they expect to need. They often store that information poorly, trying to squeeze the world into a set of tables like putting an elephant into ballet shoes.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide02.png" alt="Slide: web form with a middle initial box"></p>
<p>I use my first initial and my middle name. I get squeezed into databases all the time.</p>
<p>Many of us are developers, and we build applications that are database doorkeepers and data validators. Our job is to build that toddler's toy that turns star shaped cylinders into square blocks.</p>
<p>The short-sightedness of a database's design can lead to all sorts of misadventure. I laugh when my wife gets mail that has my name as her last name. Not even my last name. My first name as her last name.</p>
<p>It's funny when we're talking about junk mail, but try standing at an emergency room counter explaining why your insurance card has the wrong name on it.</p>
<p>This is, of course, our fault. Us, the developers and architects and thinkers about this model of our world.</p>
<p>We design databases based on our subjective understanding of the parts of the world we need to model.</p>
<p>Our subjective understanding is informed by culture, and because of this we often encode culture into our database.</p>
<p>Even today it's hard for my wife to create a joint account for us that doesn't list me as the first and primary account holder.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide03.png" alt="Slide: When we change our story, we change our selves"></p>
<p>The database distorts reality to fit its limited ability to model the world. As a result, it changes how we describe ourselves. It changes our story. And when we change our story, we change our selves.</p>
<p>That is the tyranny of the database.</p>
<hr>
<p>I want us to do better. We have the storage space, the performance, the bandwidth, and the programming skill to build databases that are informed by behavior and observation.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide04.png" alt="Slide: simplejson.dumps(me)"></p>
<p>Here is a JSON document that represents me.</p>
<p>I picture how this document could be the product of a call to a service. Maybe this service is backed by PostgreSQL, or by someone else's API, or maybe it's flat files. This document doesn't need to be drawn from any one data source at all. We can make it richer by pulling data from other services and merging them into one document. It's no longer a join so much as a mixin.</p>
<p>I call this data Arbitrary. I want to even further decouple the database from the application. Let's make fewer objects and more services that can become richer and better over time.</p>
<p>Let's look again at the document that describes me. What's your app supposed to do with all of that?</p>
<p>Start by using what you can, what you recognize as relevant data, but approach it semantically. Be prepared to look for data in more than one place. Coalesce from multiple sources.</p>
<p>Silently set aside the data that isn't relevant. It's what our brains do, a thousand times a minute, in the real world.</p>
<p>Gracefully accept what you don't know. Write tolerant code that recognizes that data has holes. And when you can, make your software help fill those holes to build a richer, more complete model of reality.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide05.png" alt="Slide: Amanita virosa"></p>
<p>16 years ago my wife used a web authoring tool to build a botanical encyclopedia. That software is long gone. That data is locked up in a bunch of three and a half inch floppies. But the information is still relevant. I'm pretty sure that amanita virosa - the destroying angel mushroom - is still poisonous even if somebody stopped supporting the software.</p>
<p>The botanical encyclopedia she built is legacy data. If we do this right, we can instead build data legacies. Lets plan for that. Lets build rich models that demonstrate their own intrinsic value, that improve over time, and that provide services to the applications that call on them.</p>
<p><img src="/static/examples/tyranny-of-the-database/slide06.png" alt="Slide: Information and contact info"></p>
<p>Thank you.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="https://us.pycon.org/2013/" title="PyCon 2013">PyCon</a> is the largest annual gathering for the community using and developing the open-source Python programming language <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/tyranny-of-the-database</link><guid isPermaLink="true">http://version2beta.com/articles/tyranny-of-the-database</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Last month I got into a discussion with a few professional members at BucketWorks<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Two of the participants are mechanical engineers who have a 3D prototyping company, and a third is a developer. The discussion focused on the correct way to price a software development project the mechanical engineers were expected to produce.</p>
<p>I happened into the conversation, but I'm afraid I may have taken it over a bit. See, I already have a system for pricing software development, so I simply shared it, in condensed form, over a period of ten or fifteen minutes. The mechanical engineers were very kind in their appreciation, which is always cool to have, and the software developer said I should present this at one of the tech meetups.</p>
<p>This hadn't occured to me before, but I was happy that Web414 accepted my proposal and invited me to give this presentation on pricing project work.</p>
<p>I write my presentations in advance, and then do my best to present what I wrote, so this post is something close to a transcript of my presentation. Actually, it's a transcript of how I meant to give the presentation, without the 'ums' and 'ahs', nervous pauses, misplaced words, and sections I undoubtedly missed due to various deficiencies in public speaking.</p>
<p><a href="/static/examples/managing-risk-and-selling-value/crv-calculator.html">Check out the calculator I made for calculating the CRV Factor</a>, which is the hard part of the formula. My slides are inline below, but check out <a href="/static/examples/managing-risk-and-selling-value.html">my slide deck online</a> too. I've been using reveal.js<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> and it's pretty sweet.</p>
<p>Dusty Filippini, one of the @web414<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> organizers, streamed this presentation using Google Hangouts, and sent it to YouTube. The video quality is not ideal. The presentation doesn't actually start until about 17:30 and goes for about 55 minutes plus questions and answers. About six minutes into my presentation, I have computer problems and we switch machines. But once it gets going, the sound quality is pretty decent. <a href="http://www.youtube.com/watch?v=and2kexFxt0">Watch &quot;Managing risk and selling value&quot; on YouTube.</a></p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide01.png" alt="Slide: @version2beta and contact information"></p>
<p>Hi, I'm version2beta. Some people call me Rob. You can call me either.</p>
<p>My presentation is about figuring out how much to charge for your work. This is one of those talks where you get to learn from someone who really, really knows what they're talking about. I've done it wrong virtually every way you can, so I came up with a system that, so far and without fail, has told me how much I should have charged for every project I've underquoted.</p>
<p>It works proactively too. In fact, that is the recommended way of using this system.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide02.png" alt="Slide: Warning, ahead there be MATH"></p>
<p>I'm going to warn you right up front, there are going to be mathematics in this presentation. Real math, the kind you need a scientific calculator to do. Or a log table, if you're over the age of 50 and know how to use them.</p>
<p>Or you can use the <a href="/static/examples/managing-risk-and-selling-value/crv-calculator.html">special calculator I built</a> for doing this math. It's on my website.</p>
<p>Before we get into the details, I'd like to tell you about my first ever paid programming gig.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide03.png" alt="Slide: Economic Order Quantities"></p>
<p><em>slide</em></p>
<ul>
<li>Q is quantity</li>
<li>D is annual demand</li>
<li>S is fixed cost per order</li>
<li>H is annual holding cost</li>
</ul>
<p><em>slide</em></p>
<p>This formula is used to calculate the economic order quantity for inventory.<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>It's been around a while. I first learned it in 1983, when I was 13 years old. I don't know if it's true or not, but at the time, I was under the impression that my father was one of the creators of this formula. He was inventory control manager for Simpson Paper Company, Eastern Division. His job was to make sure they had the right raw materials on hand, in the right quantities, for all of the plants east of the Mississippi River.</p>
<p>He had this formula that would help him figure out how much stuff to buy. He also had the only IBM PC at Simpson's Vicksburg, Michigan offices.</p>
<p>And he had a very nerdy kid. I didn't know it then, but I was going to write the student council's computer dating program and run the annual computer dating fundraiser every single year for the next four years.</p>
<p>The formula isn't too bad. Basically, you take the annual demand for an inventory item, multiply that by twice the cost per piece, divide that by the holding cost for one item for a year, and then take the square root. The resulting number is the ideal quantity to minimize your total ordering and holding costs for the year.</p>
<p>I know this isn't actually very interesting. But this formula has a square root symbol in it, so it's going to make the formulas I show you in a little while look easy. So it's important you pay attention.</p>
<p>The short story is that my father had me code this formula. He paid me $30 and took it to the office and that was the last I heard about it for a year.</p>
<p>Let's fast forward to the Superbowl, about a year later. Every year the DeYoungs came to my parents' superbowl party. Mr DeYoung worked with my father at Simpson paper. During this particular Superbowl party, Mr. DeYoung pulled me aside and congratulated me on the program I wrote for my father.</p>
<p>He said, &quot;That program saved us $3 million dollars last year.&quot;</p>
<p>Even as a freshman in high school, I could do math pretty quick in my head. The $3 million dollars was a very significant return on investment for the $30 I was paid.</p>
<p>It seemed possible I had underquoted that job.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide04.png" alt="Slide: The CRV Model"></p>
<p><em>slide</em></p>
<p>Complexity</p>
<p>Risk</p>
<p>Value</p>
<p><em>slide</em></p>
<p>I have a formula for helping people figure out how much to charge for their work. It's called the CRV Model. C-R-V stands for Complexity, Risk, and Value.</p>
<p>I designed this model when I worked for my wife Barbara, in her web development company. Barbara spent extensive amounts of time considering how our pricing models, indeed our entire working environments, were inadequate. She deserves a lot of credit for ideas behind the model, and the conversations inspiring it. She was invaluable in developing and testing this model.</p>
<p>I wish I could say it was a great success, but some credit for the model is also due our largest and most risky customer, whose $68,000 default not only demonstrated the need for this model, but also contributed to the downfall of my wife's company.</p>
<p>All of my experience using this model has been focused on web development and programming, but it should be useful for modeling any kind of project work. What matters to this formula is that the project is at least loosely specified in advance, and you're trying to put a fixed price on it.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide05.png" alt="Slide: Some caveats"></p>
<p><em>slide</em></p>
<ol>
<li>BYO Business Acumen.</li>
<li>Damn it Jim, it's a model, not a doctor for your business.</li>
<li>When you're pointing fingers, make sure you're looking in the mirror. Kthanxbai.</li>
</ol>
<p><em>slide</em></p>
<p>I have some caveats for you:</p>
<ol>
<li>You're going to need some business instinct to use this model.</li>
<li>In fact, the more business acumen you have, the better this model will work for you.</li>
<li>If you have a good sense of business, you probably don't need this model.</li>
<li>If you don't have a good business sense, this model will help you develop one.</li>
<li>This is not a silver bullet. It's a model. It helps you understand the world a little better.</li>
<li>At the end of the day you still need to take credit for your own success. No need to call me up and say thank you.</li>
<li>Same goes for your failures, by the way.</li>
</ol>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide06.png" alt="Slide: Ignore everything I'm about to tell you and do Agile development instead."></p>
<p><em>slide</em></p>
<p>Pro-tip: Ignore everything I'm about to tell you and do Agile development instead.</p>
<p><em>slide</em></p>
<p>It's also important to note that there are better systems. For example, don't do fixed price quotes.</p>
<p>I'm a fan of Agile methodologies.<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> I strongly recommend you ditch fixed price quoting and pursue Agile development and project management. I promise you, properly done, it works better. All you need is a lot of trust, excellent communication skills between you and your client, and the knowledge and experience to do Agile properly.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide07.png" alt="Slide: The problem"></p>
<p><em>slide</em></p>
<ol>
<li>Working for the man.</li>
<li>Selling your life by the hour.</li>
<li>Client wants a fixed price.</li>
<li>Client wants to go out of scope.</li>
<li>It can be hard to get paid for out of scope work.</li>
</ol>
<p><em>slide</em></p>
<p>Let's talk about why we're here. What is the problem we're trying to solve. I see it as three-fold.</p>
<p>First. It's very important that you hire the right clients. And in case you get a bad client, it's important to know when to fire them.</p>
<p>Second. Even good clients sometimes suck. They want a fixed price bid. Then they want to go out of scope. Then they want to blame you that they went out of scope, that you should have thought of that. Then they don't want to pay for going out of scope. Then if they do pay you for going out of scope, maybe they resent it.</p>
<p>Third. It's come to my attention that I have a limited number of hours in my life. I know that sometimes it feels infinite, but I've consulted with some pretty good doctors, and they assure me I have an expiration date. It's true.</p>
<p>This may also be true for you. You should consult with your doctor. If by any chance your doctor confirms this, then you, like me, are in a position to decide at what hourly rate we're willing to sell our limited lives.  Or if we want to sell our lives by the hour at all.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide08.png" alt="Slide: List of goals."></p>
<p>I think we can distill these problems down to a list of goals for a pricing model.</p>
<p>Pursue the right work.
Avoid the wrong work.
Mitigate risk.
Charge according to value.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide09.png" alt="Slide: The formula : Pq = o * log10(C + R + V) / 2 * d + m"></p>
<p>So here it is. Scary. It even has a logarithm<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> thingamajig in it.</p>
<p>Let's walk through it, one parameter at a time.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide10.png" alt="Slide: The formula, highlighting 'Pq ='"></p>
<p>On the left side, we have the quoted price. This will be the product of our calculation, and the price the model suggests for your project.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide11.png" alt="Slide: The formula, highlighting '(C + R + V)'"></p>
<p>C, R, and V stand for Complexity, Risk, and Value. We are going to look at these terms in detail.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide12.png" alt="Slide: The formula, highlighting 'o', 'd', and 'm'"></p>
<p>I'm going to call these three little factors your constants. Overhead, days, and materials.</p>
<p>The little 'o' is your overhead. This is just enough to cover you basic costs. This will vary a lot based on how big your business is, whether you subcontract, etc. We'll discuss this in more detail.</p>
<p>The little 'd' is your time estimate in days. It doesn't need to be exact. We'll cover this more too.</p>
<p>The little 'm' are your material and other project costs. If you are going to have project-based expenses other than time, put it in here. If you mark up your direct costs, put the marked up amount in here.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide13.png" alt="Slide: The formula, nothing highlighted"></p>
<p>So that's the formula. It's not as scary as it may have seemed at first.</p>
<p>Add some numbers together. Those are our factors for Complexity, Risk, and Value.</p>
<p>Apply a logarithm. This is the exponent you'd put on the number 10 to get this number. It's also the log10 key on your scientific calculator app.</p>
<p>Multiple by a couple other numbers. That gets us our overhead for the job and how many days of overhead we need to cover.</p>
<p>Add in the remainder. That's any direct or material costs.</p>
<p>You've got your price. Let's look at the specifics.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide14.png" alt="Slide: Overhead"></p>
<p><em>slide</em></p>
<p>o : Overhead costs per work day</p>
<p><em>slide</em></p>
<p>While Complexity, Risk, and Value are the real focus of this formula, let's get our constants out of the way first. Let's start with overhead.</p>
<p>Just in case you're wondering, our formula is managerial accounting, not traditional balance-sheet type accounting. For example in cost accounting, our labor is divided into time-based units of measure and we put a cost on each full unit and use that for our basis. That's the system we're getting away from.</p>
<p>Managerial or analytical accounting uses a variety of accounting-type metrics to answer specific questions, usually questions about the future. That's what we're doing. We're using a handful of metrics to ask questions about the future cost of doing a project.</p>
<p>One of the questions we need to answer is, &quot;How much of my overhead costs do I need to assign to this project?&quot; This is the little 'o' in our formula. Overhead.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide15.png" alt="Slide: Overhead example, moonlighters"></p>
<p><em>slide</em></p>
<p>Match your preferred beer to your overhead.</p>
<ul>
<li>Pabst Blue Ribbon - $50 / night</li>
<li>Spotted Cow - $75 / night</li>
<li>Guinness - $100 / night</li>
<li>Chimay Blue Label - $125 / night</li>
</ul>
<p><em>slide</em></p>
<p>Moonlighters, raise your hand. Now keep your hand up if &quot;overhead costs&quot; and &quot;beer money&quot; are roughly the same for you. I've been there. I still do some work that way. I admit, this example is a little bit tongue-in-cheek. If I were serious, I'd have used whiskey in the example</p>
<p>I would like to remind you that there are a lot of people trying to feed families doing the same work. Be careful about setting this value too low. I suggest you use the freelance example instead, and think about pricing your work as if you are doing it full time.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide16.png" alt="Slide: Overhead example, freelancers"></p>
<p><em>slide</em></p>
<ul>
<li>I want to take home about $30,000 a year.</li>
<li>Taxes are about $7,500 a year.</li>
<li>Health insurance costs $6,000 a year.</li>
<li>I spend $1,800 a year on sales and marketing.</li>
<li>I spend $2,000 a year on new computers.</li>
<li>I spend $3,000 a year improving my skills.</li>
<li>I expect to do billable work three days a week.</li>
</ul>
<p>Overhead per work day = ( 30,000 + 7,500 + 6,000 + 3,000 + 2,000 + 1,800) / 150</p>
<p>Overhead per work day = $415</p>
<p><em>slide</em></p>
<p>Let's walk through an example calculating overhead for a single person freelancing. No employees. No employer.</p>
<p>If I am this freelancer, this is what I need to know:</p>
<ul>
<li>
<p>What's the minimum I could make in a year and still be happy freelancing? Or moonlighting?</p>
</li>
<li>
<p>I need to increase that number by 25% to cover taxes and self employment taxes.</p>
</li>
<li>
<p>If I plan to do this full time, I'll add in the cost of my health insurance. If you have health insurance that's paid for by someone else, for instance your partner's employer, add in half the value of their insurance benefit. If you don't have health insurance, add at least $6,000.</p>
</li>
<li>
<p>Now add in any business expenses I expect to have for the year. Sales and marketing, professional development, equipment costs, insurance, business rent, professional memberships, etc.</p>
</li>
<li>
<p>Then I figure out about how many days I actually expect do production work, and I divide by this number. If you plan to do this full time, figure on something between 120 and 180, depending on how much time you need to spend selling.</p>
</li>
</ul>
<p>In the example above, I arrive at a &quot;per project day&quot; overhead cost of $415 for this hypothetical freelancer working something that looks very much like full time on a very modest income of only $30,000 a year take home.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide17.png" alt="Slide: Overhead example, agencies"></p>
<p><em>slide</em></p>
<ul>
<li>Operating Expenses (including payroll): $72,000 / month</li>
<li>Employees engaged in production: 5</li>
<li>Productive days per month: 20</li>
</ul>
<p>Overhead per day per employee = 72,000 / (5 * 20)</p>
<p>Overhead per project day = $720</p>
<p><em>slide</em></p>
<p>Here's another example, this one for a small-ish agency.</p>
<p>For agencies, I think the numbers are pretty simple to follow. Add up all your expenses, including payroll, even for billable resources. Divide it across the number of people doing billable work.</p>
<p>Again, we're not doing cost accounting.<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup> If you're interested, this formula is inspired a bit by Throughput Accounting,<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup> but the important thing to remember is that we don't want to slip into the habit of thinking in terms of hours of labor.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide18.png" alt="Slide: Time commitment, 'd'"></p>
<p><em>slide</em></p>
<p>d : Person-days required for the project under the most ideal circumstances</p>
<p><em>slide</em></p>
<p>We are not going to try to figure out how many hours or days or weeks a job will actually take. However, we are going to consider how much time it would take under the most ideal circumstances.</p>
<p>I think this is a real selling point for this model. We'll talk about this more in a few minutes, but when we're using this model we get to think in terms of the best possible circumstance. This is a huge advantage because it's easiest for us to accurately predict what's going to happen if everything goes perfectly, rather than if all hell breaks loose.</p>
<p>So at this point, we can say sayonara to contingencies. We can ignore plans B and C. We can put in the number that only happens when the stars are perfectly aligned.</p>
<p>Just make sure that &quot;days&quot; means the same thing here that it meant when you were figuring your overhead per day. For agencies, this is the number of person-days for production employees that you would assign to the project - under the most ideal circumstances. For freelancers, this is the number of work days you think the project would take you - under the most ideal circumstances. For moonlighters, this is probably the number of evenings or weekends you think you'll need to work on the job. Under the most ideal circumstances.</p>
<p>Again, the important thing to remember here is to be a paragon of optimism. Plan on rainbows and unicorns.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide19.png" alt="Slide: Project costs, 'm'"></p>
<p><em>slide</em></p>
<p>Examples of materials and direct project costs:</p>
<ul>
<li>Travel expenses - hotels, meals, mileage, etc.</li>
<li>Hosting a development environment for the specific project</li>
<li>Hiring a project manager</li>
<li>Contracting specialized work</li>
<li>Buying project-specific training materials</li>
<li>Software licensing</li>
<li>Etc.</li>
</ul>
<p><em>slide</em></p>
<p>Little 'm' is easy. It's any direct costs associated with the project, that apply just to this project.</p>
<p>For example, if you need to hire a specialist, put his or her costs in here.</p>
<p>Actually, I've done this a bunch of times. On one project, I was programming the controls for an automated heat treating line. This particular system used huge vats of molten salt for heat treating the parts. The system was basically robot arm on a 120 foot long track that picks up baskets of parts, each basket weighing about 300 pounds, and moves them through the heat treating process. Each basket got its own recipe, based on the kinds of parts inside. So a given basket might go in the hottest vat for 30 seconds, then quench for 30 seconds, then do something else.</p>
<p>Believe it or not, that was the easy part.</p>
<p>The hard part of this project was adding the ability for the heat treating company to tell the computer what parts were coming up, so that the computer could decide when each basket should be loaded in order to maximize throughput. For that I hired an outside consultant, a guy named Kim Duk-Won.</p>
<p>Kim is great. Before I went to visit Korea, he taught me to read and speak enough Hangeul so that I could get around town, order food, and find a bathroom. When he did his Masters thesis, I helped him with the programming. When I hired him for this project, he had completed his Ph.D. in Operations Research, done a few years optimizing delivery schedules for FedEx, and was teaching at the University of Tennessee at Oak Ridge.</p>
<p>On this particular project, Kim gave me a fixed price quote. You know, because I'm that kind of customer.</p>
<p>Paying Kim to work on that project was a direct project cost.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide20.png" alt="Slide: How the scales work"></p>
<p><em>slide</em></p>
<p>Fuzzy Math</p>
<p>Not actually fuzzy, just logarithmic.</p>
<p><em>slide</em></p>
<p>We're going to estimate Complexity, Risk, and Value with some pretty fuzzy numbers.</p>
<p>This isn't an exact science. I can't tell you that the complexity on a given project is exactly 6,423.5.</p>
<p>We really only know how complex something is, if it's not complex at all. We can more accurately predict risk when there's very little. And as well all know, value ranges from nothing, to a lot, to priceless, right?</p>
<p>When I make scales for Complexity, Risk, and Value, I want to have a lot of room to move around, and I want the scales to be more accurate on the lower end than on the upper end. I can't really use &quot;infinity&quot; as a value, but it'd be nice to be able to say &quot;A whole damn lot.&quot;</p>
<p>So the scale we're using goes like this: Pick a number between ten and ten thousand. If any of the factors start really ramping up, use big numbers. That's what the &quot;log10&quot; in the formula does for us. If you really have a project that is so risky, or so complex, or so valuable that you feel like you need really big numbers to describe it, use them.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide21.png" alt="Slide: Complexity scale"></p>
<p><em>slide</em></p>
<ul>
<li>10 - Anyone could do it.</li>
<li>100 - There are only a few people in the area who can do it.</li>
<li>1000 - There are only a few people in the country who could do it.</li>
<li>10000 - It probably can't be done.</li>
</ul>
<p><em>slide</em></p>
<p>I think of complexity in terms of who can do the work. Actually, I tend to think of complexity in terms of how far you'd have to go to find someone else who can do the job. In that way, it's kind of like &quot;competition&quot;.</p>
<p>You could actually use distance to the next nearest person or agency who can do this job as your complexity number. If bunches of people in this room could do it, let's say 10 since I really never use factors lower than 10. If you'd have to go to Chicago for another place that could handle it, let's say 120. New York, about a thousand miles. A univerity in Tokyo? 10,000.</p>
<p>My friend Kim Duk-Won is an example, right? I needed a highly-specialized algorithm that he was uniquely suited to provide. Given that the competition for that position is very limited, he can charge more for his time. It's simple supply and demand.</p>
<p>Here's an even better example. I first heard this example from my grandfather, who was an engineer.</p>
<p>There's this guy Gus who retires from his position as lead maintenance person at the local factory. He's put in his time, he's ready to be done working and focus on his fishing.</p>
<p>One day shortly after Gus retires, an absolutely critical machine fails. It's making a horrible noise. Nobody in maintenance knows what to do with it, so they tell the plant manager he's gotta get Gus to come back and fix it.</p>
<p>Gus isn't very happy about this, but he agrees to come look. He walks around the machine. He listens to it. And then he pulls a piece of chalk from his pocket and puts an 'X' on one part. 'Replace that,' he says.</p>
<p>The plant manager is thrilled until he sees Gus' invoice for $50,000. The plant manager tells Gus to submit an itemized invoice.</p>
<p>Gus sends a new invoice came with with two line items. The first line item was &quot;One chalk mark: $1.&quot; The second line item was &quot;Knowing where to put it: $49,999.&quot;</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide22.png" alt="Slide: Risk scale"></p>
<p><em>slide</em></p>
<ul>
<li>10 - It's a cake walk.</li>
<li>100 - There are some problems with taking the job.</li>
<li>1000 - There are significant risks associated with this project.</li>
<li>10000 - That's just crazy talk.</li>
</ul>
<p><em>slide</em></p>
<p>I remember the first time it occured to me that I could change the price of a job based on how little or how much the client actually knows about the project. This happened way later than it should have. I had my hourly rate, and it was my hourly rate. Maybe I'd add in a few extra hours to compensate for some unknown. But I could have saved a lot of money and salvaged at least one failed project if I'd only realized sooner that I should always charge more for projects that have more red flags.</p>
<p>Let's talk about risk.</p>
<p>First, I want to say risk isn't for everybody. At the low end of the scale, we have &quot;the cake walk.&quot; The job is well defined. The customer knows what they're doing when it comes to executing a project like this. They pay quickly and fairly. Maybe they're even an agency like C2<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup> that specializes in contract talent.</p>
<p>This is good, steady, low-risk work. It's nice to have this kind of work. Many of us would do well to focus on this kind of work.</p>
<p>Or maybe you can tolerate a little more risk, so we slide up the scale a little bit.</p>
<p>&quot;There are some problems with taking the job.&quot; Here we start to see some red flags, and we need to take them into consideration.</p>
<p>The specification is weak. The client seems uncertain of what they want. They don't respond well to suggestions. Their ideas seem overly fluid. That's a nice way of saying they are a high risk for scope creep.</p>
<p>The project has weak prospects. The project doesn't have a good cost-benefit ratio. It's unlikely to bring value to the client.</p>
<p>The customer seems overly cost-conscious. They may not have the funds required to manage the project well on their side.</p>
<p>The client talks about the previous contractors they had to fire.</p>
<p>Sometimes the risk isn't with the client. Let's say you're not well established yet. Maybe you don't have the skills you'd need to feel confident completing the job. Or taking on this project precludes your ability to take on other work or care for your regular clients. These are all risks too.</p>
<p>&quot;There are significant risks associated with the project.&quot; Now we're getting into some serious red-flaggage.</p>
<p>Maybe the project has no specification, and the client doesn't want to do a discovery phase.</p>
<p>Maybe the client's expectation for delivery, price, and / or quality are unreasonable.</p>
<p>Maybe the client seems to be hitting on you.</p>
<p>Maybe you have little confidence in the client's ability to fulfill their part of the contract. You know, like paying you.</p>
<p>Maybe you don't have confidence in your ability to finish the project. It may be too big, too hard, to many moving parts.</p>
<p>&quot;That's just crazy talk.&quot; Projects at this level of risk are the ones we walk away from. These are the projects with abusive clients, or projects we have no expectation will ever finish successfully.</p>
<p>But sometimes the client is throwing money at you in spite of the difficulties, and maybe you are pretty tolerant of risk. You might even specialize in difficult clients with deep pockets. There's money in that.</p>
<p>When you're quoting a project, always first try to drive risk down. Build in a discovery phase and price out the full project after there's an adequate scope. Spend extra time establishing reasonable expectations with the customer, in both directions. Discuss your concerns about their ability to manage the project, and how they may benefit from bringing on a professional project manager just for the project. Get a bigger down payment. Schedule invoicing more frequently, and require payments be current before each phase begins.</p>
<p>The risk you're left with drives up your price, and this is entirely reasonable. It does a couple of very valuable things for you. For one, you might not get the job, and depending on how much risk there is, this may be a Very Good Thing.</p>
<p>If the job has significant, unmitigated risks, give it a &quot;walking away&quot; price. Don't put a lot of effort into quoting the job. Bump up the risk to an appropriate level based on the problems with the job and your less-well-considered quotation, and send it over without expectation.</p>
<p>Then, if you do get the job and things start to head south, you were already being paid extra to deal with it and you can take it on with a smile. Scope creep? No problem - you expected it. Plus you can still try to get paid for it. Stiffed you for the last payment? That's okay, the last payment was the second half of your bonus, not your paycheck. The client is a pain in your butt? You charged the asshole tax up front.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide23.png" alt="Slide: Value scale"></p>
<p><em>slide</em></p>
<p>Evaluating value</p>
<ul>
<li>10 - The impact of the project will be at least as great as the cost.</li>
<li>100 - The impact of the project will be an order of magnitude greater than the cost.</li>
<li>1000 - The impact of the project will be two orders of magnitude greater than the cost.</li>
<li>10000 - An Arab Prince has already written you a blank check.</li>
</ul>
<p><em>slide</em></p>
<p>My microeconomics professor at the University of Maine was a fish economist. He told us how he'd been approached by Heinz Corporation way back in 1969 to assess the potential market for cocktail sauce. They asked him for a daily rate, and he gave them a price of $100 a day.</p>
<p>He didn't get the contract. They found someone who'd charge them $1,000 a day.</p>
<p>I've worked on big websites for small companies that cost $20,000. I've worked on small websites for big companies that cost $20,000. When it comes down to it, people want to pay a price commensurate to the value they get.</p>
<p>I told you up front you need some business instinct to use this model. That's perhaps most true when it comes to figuring out the value your client will gain from your work. Understanding that number will do much to free you from hourly drudgery.</p>
<p>Don't do work that has limited value.</p>
<p>If the potential gain is small, your client needs to think small, and treat you small. It makes your job much less enjoyable.</p>
<p>If the potential gain is large, your client is motivated to make big things happen with you, and will support you on the project. It makes your job much more enjoyable, and lucrative too.</p>
<p>It boils down to this: Always. Maximize. Value.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide24.png" alt="Slide: The Hunger Game."></p>
<p><em>slide</em></p>
<p>How to discount your work:</p>
<ul>
<li>Look for snacks, not huge meals.</li>
<li>Quote full price and then apply a discount.</li>
<li>Your discount may be a marketing expense. Talk to your accountant.</li>
</ul>
<p><em>slide</em></p>
<p>We have one more factor that we could have added to our formula, but if we did, it'd be there strictly to help you undo the benefits of using a pricing model like this at all.</p>
<p>Sometimes it doesn't matter what you know you should charge, you really need to get the work. Or at least some work. I propose it's still best to know what you should have been charging, and then discount it, rather than ignoring good sense and pricing the work artificially low.</p>
<p>&quot;Hunger&quot; is that factor. The hungrier you are to get the job, the more you'll knock of your price to make sure you get it.</p>
<p>Obviously the best bet is to keep hunger at bay. But since that's often not possible, I have a couple of suggestions that may be helpful:</p>
<ul>
<li>If you're hungry, look for snacks, not huge meals. Once you get something in the pipeline, that sense of hunger is going to start going away. You don't want to be paying for it long term. Sometimes you can even turn a big job into a snack. For example, it may be beneficial for everyone if you got paid for a 40 hour discovery project and use that to spec out the big job at regular price.</li>
<li>Quote your work at full price and then add your discount as a line item. Offer a new client a &quot;new customer discount&quot;. Apply a coupon. Do a cross-promotion with your client. Your client gets the price they need, but you're instilling an expectation about your future charges.</li>
<li>Talk to your accountant. It's possible that discount you're giving might actually be a marketing expense, and this might improve your tax situation.</li>
</ul>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide25.png" alt="Slide: Advanced usage"></p>
<p><em>slide</em></p>
<p>nested CRV</p>
<p><em>slide</em></p>
<p>I'm just going to throw this out there. You don't have to use the same complexity, risk, and value factors for every part of a project. You can break the project into meaningful pieces and apply the model to each piece.</p>
<p>For example, let's say we're quoting a new website for a heat treating company. Most of the project is straight up design and implementation, but they also want their customers to be able to log in and retrieve quality documents about previous jobs. To do that, you need to tie into their internal document management system running under Microsoft Dynamics.</p>
<p>Now we have a project that involves two kinds of CRV profiles. The web site is relatively easy and moderately valuable, but the document retrieval system is significantly more complicated and valuable. Depending on how much experience your team has with Microsoft Dynamics, it may also add a bit of risk.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide26.png" alt="Slide: Ideal Cost and The CRV Factor"></p>
<p><em>slide</em></p>
<p>Ideal Cost: o * d</p>
<p>CRV Factor: log10 ( C + R + V )</p>
<p><em>slide</em></p>
<p>You may have noticed that two terms make up the heart of this formula.</p>
<p>I call the first one &quot;The Ideal Cost&quot;. It's your overhead rate times your time commitment. That's what the job should cost you assuming everything goes swimmingly.</p>
<p>I particularly like the concept of Ideal Cost. We humans are notoriously bad at making predictions. Our emotions get in the way. Ideal Cost eliminates some of that problem by removing the complexity of the negative emotional factors. We don't have to think about what might go wrong at this point - we get to consider just the positive. And this is a nice way to think about a new project.</p>
<p>The second term is the &quot;CRV Factor&quot; is your multiplier on the Ideal Cost. It builds in supply and demand, mitigates your risk, and keeps your price commensurate with the value of the project to your customer. The higher the CRV Factor, the higher your total price.</p>
<p>Let's look at some ways you can use the CRV Factor to quickly analyze almost any project.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide27.png" alt="Slide: Hard but worth it"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 1000</li>
<li>Risk: 100</li>
<li>Value: 1000</li>
<li>CRV Factor: 3.32</li>
</ul>
<p>Hard but worth it.</p>
<p><em>slide</em></p>
<p>You're a specialist in a valuable field. Your clients are lucky to have your attention.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide28.png" alt="Slide: Assholes and superheroes"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 100</li>
<li>Risk: 1000</li>
<li>Value: 100</li>
<li>CRV Factor: 3.08</li>
</ul>
<p>Assholes and superheroes.</p>
<p><em>slide</em></p>
<p>We've probably all worked on this project, right? It's a good fit for your skill set, and it's quite worth while for your client, but your client is an ass. Or doesn't have the money. Or needs it next week.</p>
<p>The nice thing about these jobs is this: you get to be the superhero, and if you're willing to work under these pressures, you can really shine.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide29.png" alt="Slide: Danger Will Robinson"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 2500</li>
<li>Risk: 2500</li>
<li>Value: 10</li>
<li>CRV Factor: 3.70</li>
</ul>
<p>Danger Will Robinson!</p>
<p><em>slide</em></p>
<p>Sometimes I feel like every job I quote looks like this. I can't think of anyone else getting it right, but the risks are significant and when it's done, the client isn't going to get their money's worth anyway.</p>
<p>These are the jobs you refactor for your customer. Drive the complexity down. Mitigate more risk up front, maybe by doing a discovery phase. Shift the priorities so there is more value in the final project.</p>
<p>Make this project a better project, or embrace the multiplier of almost four and hope they decide you're too expensive.</p>
<p><img src="/static/examples/managing-risk-and-selling-value/slide30.png" alt="Slide: Sweet spot"></p>
<p><em>slide</em></p>
<ul>
<li>Complexity: 100</li>
<li>Risk: 100</li>
<li>Value: 100</li>
<li>CRV Factor: 2.48</li>
</ul>
<p>The sweet spot.</p>
<p><em>slide</em></p>
<p>I like these jobs: Competition's not too tight, the job has manageable risks, and it's going to be worth it to your client. It's a factor of almost 2.5 times your Ideal Cost. You can afford to hold out for the jobs you want. You enjoy your customers and your work.</p>
<hr>
<p><img src="/static/examples/managing-risk-and-selling-value/slide31.png" alt="Slide: Contact information"></p>
<p><em>slide</em></p>
<p>@version2beta</p>
<p>http://twitter.com/version2beta | http://version2beta.com</p>
<p>CRV Factor Calculator: http://version2beta.com/static/examples/managing-risk-and-selling-value/crv-calculator.html</p>
<p>Tech support is always free!*</p>
<ul>
<li>Free as in beer. Means you buy me a beer and I give you tech support.</li>
</ul>
<p><em>slide</em></p>
<p>I want to remind you that this formula is a model for pricing your work. It helps you understand your client, the project, and your self. Along the way it may make you a better businessperson. It's a framework for thinking about the work you do.</p>
<p>Thank you for listening. As always, my presentations come with a 100% money back guarantee plus tech support that is &quot;Free as in beer&quot;. That means you buy me a beer and I give you tech support.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://bucketworks.org" title="Bucketworks is a health club for your brain.">Bucketworks</a> is a health club for your brain. It's space for your community, your business, or your meetup. It's a physical wiki. Bucketworks is cool. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>[Reveal.js<a href="http://lab.hakim.se/reveal-js/" title="Reveal.js HTML presentations made easy.">reveal</a> is a very cool HTML &amp; javascript presentation tool. It's been easy to work with on all fronts. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://www.meetup.com/web414/" title="Web414 at Meetup.com.">Web414</a> is Milwaukee's web community. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p>A formula for calculating an order quantity that minimizes the total holding and ordering costs. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p>Agile Software Development attempts to shift the focus of work. Two good places to start learning about Agile are the <a href="http://agilemanifesto.org/" title="The Manifesto for Agile Software Development">Agile Manifesto</a> and the <a href="http://agilemanifesto.org/principles.html" title="Principles behind the Agile Manifesto">Twelve Principles of Agile Software</a>. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p>The logarithm (or log) of a number is the exponent you'd put on a base number like 10 or e to get that number. For example, log<sub>10</sub>(1000) is 3, because 10<sup>3</sup> is 1000. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
<li id="fn7"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Cost_accounting" title="Wikipedia article on cost accounting.">Cost accounting</a> tries to evaluate production in terms of direct and indirect costs. Traditionally, it views labor as a direct cost. <a href="#fnref7" class="footnote-backref">↩</a></p>
</li>
<li id="fn8"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Throughput_accounting" title="Wikipedia article on throughput accounting.">Throughput accounting</a> is a simplified managerial accounting model that focuses on simple measures that drive behavior in key areas toward organizational goals. While I was trying to figure out how to describe this, I also found an <a href="http://www.forbes.com/sites/stevedenning/2011/08/16/how-do-you-explain-radical-management-or-agile-to-a-cfo/" title="Forbes article on explaining Agile to the CFO.">interesting article in Forbes Magazine</a> about explaining Agile to the CFO using, in part, Throughput Accounting. <a href="#fnref8" class="footnote-backref">↩</a></p>
</li>
<li id="fn9"  class="footnote-item"><p>I used <a href="http://www.c2gps.com/" title="C2 Creative Talent">C2</a> as an example here because I know them and have worked with them. They're good people. <a href="#fnref9" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/managing-risk-and-selling-value</link><guid isPermaLink="true">http://version2beta.com/articles/managing-risk-and-selling-value</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>On February 12, 2013 I had the pleasure to discuss using Vagrant, Chef Solo, and Git to create development environments that could be quickly stood up and easily discarded and replaced. My presentation focused heavily on stories about computing and workflow, while demonstrations ran in the background.</p>
<p>My slides ran on <a href="http://lab.hakim.se/reveal-js/" title="Reveal is a javascript presentation package">Reveal.js</a> and are available <a href="/static/examples/vagrant-chef-git.html" title="Slide deck for my Vagrant, Chef, and Git presentation">here</a>. Because I write my presentations long-hand before I give them, I can post something very close to a transcript of it below.</p>
<p>Update 2013-05-08: Tonight I'm presenting this same talk for the <a href="http://www.meetup.com/fox-cities-php/" title="Fox Cities PHP">Fox Cities PHP Users' Group</a>. I chose to update this post with the latest version of my slides and presentation. It feels a bit revisionist, but I did it anyway.</p>
<h2>/static/</h2>
<p><img src="/static/examples/vagrant-chef-git/slide1.png" alt="Slide: @version2beta and contact info"></p>
<p>Hi. I'm version2beta. That's version, the number two, beta. I'm version2beta on twitter, github, linkedin, skype, etc. I'm at version2beta.com online.</p>
<p>In meat space, some people call me Rob. There are also some short people who call me Dad.</p>
<p>Since we're talking about Vagrant, I decided to dress like a vagrant. I even have a hole in my armpit. Since the last time I gave this presentation, I've developed a hole in my other armpit too.</p>
<p><img src="/static/examples/vagrant-chef-git/slide2.png" alt="Slide: Julia Childs cooking"></p>
<p>We're talking about Chef tonight, so I'm going to run this like a cooking show. We'll start by putting the casserole in the oven.</p>
<p>That's how it works, right? The TV chef makes up the entire dish in advance and tosses it in the oven just before the cameras start rolling. Then, live in front of a studio audience - that's you - they make the dish from scratch. And they put it in the oven. And then they pull the other one, the one they've had cooking all along, out of the other oven.</p>
<p>That's what we're going to do. Preparing this dish live right in front of you sounds a little scary, so instead, we'll just toss this one in the oven and let it bake, while we just talk some about the ingredients.</p>
<p>I think this is actually going to work out pretty well, because I actually made a whole bunch of these casseroles in advance and stuck them up at Github. All you have to do is grab one and throw it in the microwave for about six minutes. The first step is to grab a frozen casserole from Github. There's the link if you want to follow along real-time, we're going to go slow enough. But no worries, it'll be up again.</p>
<p>Actually the zeroeth step is to install VirtualBox and Vagrant if you haven't already. That's the other link, Vagrant Up Dot Com. We don't cover installing these two programs because it's easy and they cover it just fine on the website. If you want to install them right now, that's fine. You'll have plenty of time. I haven't even told you about my grandfather yet.</p>
<p>But first, I'm going to git clone this repository -</p>
<p>[Shell: git clone git@github.com:Version2beta/vagrant-chef-wordpress.git]</p>
<p>and then change directories into the repository -</p>
<p>[Shell: cd vagrant-chef-wordpress]</p>
<p>and then run vagrant up. I love that. Vagrant Up. I always wanna say Vagrant up, muthafucka, Vagrant up. I don't know why. Or when I'm in a family friendly venue, I just say Vagrant up, yo.</p>
<p>[Shell: vagrant up]</p>
<p>That'll be done cooking in about 6 minutes. We'll come back to it.</p>
<hr>
<p>Okay, I'm Version2beta. I know a lot of people start off their presentations with the &quot;Why should you listen to me anyway?&quot; slide. &quot;I'm blah blah blah and I blah blah blah so you can blah blah blah.&quot;</p>
<p>I haven't written any books, or keynoted any conferences. I have a few cool open source repositories and a small Twitter following. So instead of bragging about the little things, I decided to tell you about my grandfather instead. And my mom, too.</p>
<p><img src="/static/examples/vagrant-chef-git/slide3.png" alt="Slide: &amp;quot;Charles Miles Brindley. Screwup. Geek. My grandpa.&amp;quot;"></p>
<p>So grandpa always said he was a total screwup, but what he really meant was he was a geek. He almost got expelled from high school for his senior prank. He made explosive BB's and tossed them on stage during the finale of the senior talent show.</p>
<p>A fews years after he graduated from high school, he and his brother Bill both signed up for the Navy. It was world war two, they both had new spouses, and Grandpa even had a baby girl at home.</p>
<p>Grandpa was stationed in Rhode Island testing missiles. I don't know what Bill did in the Navy, but I do know that when they'd done their two years of service, they got four years of college paid for on the GI bill, and they squeezed every penny they could get out of it.</p>
<p>In four years at the University of Pennsylvania, Grandpa did a bachelors in engineering, a masters in business administration, and a masters in the brand new field of operations research.</p>
<p>In fact the university had created that Operations Research department specifically at the request of the federal government. I heard it was the Office of Strategic Services that asked for it.</p>
<p>At the end of his four years at University, in 1949, Grandpa went to work for RCA. He started out as an engineer for their military contracts. When he retired from RCA in 1989, he was RCA's chief technical liaison to the Pentagon.</p>
<p>Hey this is cool. I recently discovered that Grandpa wrote a book in 1951 called &quot;Music in Industrial Plants.&quot; Like a boss.</p>
<p>In comparison, my Uncle Bill was a slacker. In four years of college all he managed was a bachelors and a masters in chemical engineering. But look at this. At the beginning of college Grandpa and Grandma had only one child, my mother. At the end of the four years, they still only had one child. When Grandpa and Bill started at the university, Bill and June didn't have any kids. Four years later they had four kids. So Bill was maybe more productive during his college years than my grandfather was.</p>
<p>Uncle Bill went on to become a senior engineer on the team that invented PVC. And later he died of cancer. I could be wrong, but I've always suspected a connection.</p>
<p>The story about my grandfather doesn't really have anything to do with our topic for tonight, I just like telling it. But I do have a story that can tie it together. On Valentines Day in 1946, the Moore School of Electrical Engineering at the University of Pennsylvania announced they had built the first general purpose electronic computer. You've probably heard of it. It was called Eniac. Eniac was Turing complete, back in the days when Alan Turing himself was still Turing complete. Eniac was capable of solving a wide variety of problems, all of which had to do with the firing of artillery.</p>
<p><img src="/static/examples/vagrant-chef-git/slide4.png" alt="Slide: Eniac. The world's first general purpose electronic computer. A very complicated development environment. Hard to virtualize. Pretty good at Tic Tac Toe."></p>
<p>Around this same time, Grandpa had a habit of hanging around the Moore School, and my mother had a habit of hanging around him.</p>
<p>I know when I was a kid, I had a lot more freedom than kids have today. When I was in elementary school, I ran the streets ’til dusk, rode my bike wherever I wanted, hung out with friends, and only sometimes got in trouble for it.</p>
<p>My mother apparently had a little more freedom. When she was in elementary school, she was allowed to hang around with college boys and play tic tac toe against the world's first electronic computer. In fact my mom beat the computer at tic tac toe. At least, that's her story. She also says that Grandpa accused her of lying and said no one could beat the computer at tic tac toe. When I asked him about it, Grandpa denied ever doubting her.</p>
<hr>
<p>I spent the 90's doing industrial controls, some ladder logic, some programmable logic controllers, and then the best part, human machine interfaces. Except they were still called man machine interfaces back then.</p>
<p>I had a photography hobby though. My specialty was tastefully photographing attractive women without their clothing, and sometimes I photographed flowers. I even won a few awards and was invited to lecture at a local university.</p>
<p><img src="/static/examples/vagrant-chef-git/slide5.png" alt="Slide: early11_large.jpg. &amp;quot;My specialty was photographing attractive women without their clothing. And sometimes flowers.&amp;quot;"></p>
<p>The Internet was getting pretty interesting so I decided I should have a website for my photography. So I did the only logical thing. I built myself a web server.</p>
<p>Don't tell anyone but back then, I was running IIS on Windows NT 4.0 Server.</p>
<p><img src="/static/examples/vagrant-chef-git/slide6.png" alt="Slide: Windows NT 4.0 Server. A very complicated development environment. Not too terribly hard to virtualize. Pretty good at Tic Tac Toe."></p>
<p>For like the first six months. I hosted my own Windows web server in my office at home, connected to the internets with two 56K modems. Shotgun.</p>
<p>This was my first internet dev environment. It was also my first internet production environment. I broke it a lot. Soon, I replaced IIS with Apache, and Windows with Red Hat and then NetBSD and then FreeBSD.</p>
<p>These were exciting times. I got a lot of experience.</p>
<p><img src="/static/examples/vagrant-chef-git/slide7.png" alt="Slide: Person photo. Experience is what you get when you don't get what you want."></p>
<p>These were the days when just being there on the ’net would get you visitors. Having one modest web site was enough to keep the average hobbyist busy. Plus my website had naked people on it.</p>
<hr>
<p>Let's zoom forward a few more years. By 2001, most of my work was on the Internet. In fact, I was doing development and systems administration full time for a company I owned part of. We hosted a few hundred websites, had email for a couple thousand accounts, and provided Internet access for about a thousand families.</p>
<p>Yes, we were a dial-up internet service provider. And no, we didn't last very much longer.</p>
<p>I had an interesting experience last weekend. I was teaching a Ruby class, and one of the participants works for a company that bought a company that bought the company that I owned part of. So this kid was telling me that he's now responsible for maintain code I wrote more than ten years ago.</p>
<p>And he didn't even try to hurt me.</p>
<p>I don't have any screen captures of those days to share with you, so I made one up.</p>
<p><img src="/static/examples/vagrant-chef-git/slide8.png" alt="Slide: files with nested naming for production, final, dev, backup, etc."></p>
<p>You've seen file structures like this, right? Where there are four versions of &quot;Final&quot;? Backups upon backups? No good way of knowing what's actually what?</p>
<hr>
<p>Okay, lets jump a few more years. Now the dev environments are getting organized, although still not on version control, since that's actually still kinda hard to do with a CMS and relational database.</p>
<p>By the way, has anyone here solved that problem? Who's running Wordpress, or Drupal, or Joomla or a similar CMS?</p>
<p>Keep your hands up if you're also using Git?</p>
<p>Okay now keep your hands up if you're also versioning your database?</p>
<p><img src="/static/examples/vagrant-chef-git/slide9.png" alt="Slide: Ommani's multiple versions with symlink htdocs"></p>
<p>For about five years most of my web work was done in an application framework and content management system called MODX. It's pretty cool, works okay.</p>
<p>Here is a site that is running on MODX now. Over the past four years, it has gone through three different major rewrites. The first one I saw was static. I didn't build it, that's what I inherited. That's version 1.0.</p>
<p>Version 1.1 is on MODX and Wordpress, but it's really just the static site cleaned up and put into a content management system.</p>
<p>Version 1.2 is an incremental improvement from there. Still MODX and Wordpress.</p>
<p>The thing I want to show you here is that version 1.1 was the dev site, up until it launched and then it became the production site.</p>
<p>The way I built this system, launching was really easy. I just point htdocs at the correct version with a symbolic link.</p>
<p>After version 1.1 became the production site, version 1.2 got started up as the new development site. Obviously if we continued along this path, version 1.3 would be the next development site.</p>
<p>This setup works. It's good for small sites on shared servers where you don't have to worry about breaking too much shit.</p>
<p>Oh, and when you're the only developer on the project.</p>
<p>And you don't need very many versions, or branches, on the code.</p>
<p>And you always have internet access.</p>
<p>And when you don't have to worry about dependency hell. You know, when one version of the site needs one version of a package, but the development version needs a newer version. That's why god made virtualenv. And rvm. And rbenv. And chruby. And so on.</p>
<p>This way of doing it also works really well when you want your development site to use the production site's database. Which of course you never do. Especially not by accident. There are some stories there.</p>
<p>So yeah, this was the state of the art for me a couple of years ago. It's not like git and mercurial and svn and everything else weren't available, I just wasn't using them.</p>
<hr>
<p>I work now for a company called Tartan Solutions and they make a platform for running programs that do profit and cost management stuff for big companies. For instance, one of the programs will calculate how much every product in a product line will cost for the next year given current sales forecasts. Even if you took these three little parts that are used in a bunch of different products and combined them into two parts and got them from a different provider, say in China.</p>
<p>When I was interviewing for my job, I hit on a real winner for selling myself. I said, &quot;My problems are not big enough.&quot;</p>
<p>My problems are not big enough.</p>
<hr>
<p>Sure, I can make my current problems bigger. That's easy. You've probably seen this.</p>
<p>Let's say you a problem you need to solve with an internet application. So you install Drupal. Now your problem is twice as large.</p>
<p>I'm trying to go the other way, though. I've adopted this new philosophy. It's my Twitter bio right now.</p>
<p><img src="/static/examples/vagrant-chef-git/slide10.png" alt="Slide: Twitter avatar and bio, &amp;quot;When you only have two ducks, they are always in a row.&amp;quot;"></p>
<p>It says, &quot;I think I'm free for lunch.&quot;</p>
<p>No, wait. That was the old one. The new one is &quot;When you only have two ducks, they are always in a row.&quot;</p>
<hr>
<p>So that's my strategy now. I eschew complexity.</p>
<p>It's actually really cool. It means I can do things like make a completely separate development environment for every project, and they build themselves automatically.</p>
<p>It means I can make a separate server for every production site. Unless of course I can manage to host it without a server at all.</p>
<p>I'm also avoiding complex, monolithic application frameworks and content management systems. I'm focusing on microframeworks and services that collaborate.</p>
<hr>
<p>This all fits together with our dev environment, right? It's done cooking.</p>
<p>[Browser: http://localhost:8000/wp-admin/install.php]</p>
<p>So here's a brand new Wordpress installation ready to happen.</p>
<p>[Browser: Fill it in.]</p>
<p>That was git clone and vagrant up. Two commands. If you want to work directly on your new server, it's just vagrant ssh.</p>
<p>[Shell: vagrant ssh to development environment. ls -al blog]</p>
<p>Pretty slick. Let's look at it more closely.</p>
<p><img src="/static/examples/vagrant-chef-git/slide11.png" alt="Slide: Vagrantfile for vagrant-chef-wordpress"></p>
<p>Discuss:</p>
<p>Vagrant and Chef are Ruby. Ruby is optimized for programmer happiness. Really, when Yukihiro Matsumoto created it, he made programmer happiness a primary goal. Here's one think I've learned from observing the Ruby community: You know you're a Ruby programmer when you stop buying cheap booze for medicinal purposes and start buying expensive whiskeys instead.</p>
<p>Chef is a DSL, a domain specific language, which is a way of saying we can make our own commands in the language of our problem domain. In this case, managing servers.</p>
<p>Does anyone here read TheChangelog, or listen to the podcast? Vagrant was created mostly by Mitchell Hashimoto, and yesterday they recorded a podcast with him as the guest. It was his second appearance on the show. I got to listen to it live, and I asked Mitchell several questions, including whether there was anything he wanted me to tell you tonight. There wasn't.</p>
<p>Vagrant recently came out with version 2. Not really, but that's what the part that says &quot;configure('2')&quot; means. It is version 2 of the configuration, even if Mitchell is building up to Vagrant version 2 slowly, starting with versions 1.1 and 1.2.</p>
<p>This Vagrantfile specifies Ubuntu 12.04 from vagrantup.com. Vagrantup.com doesn't offer very many choices for boxes, but there are other sources too, and it's easy to make your own.</p>
<p>We're forwarding port 8000 to port 80 on the Vagrant guest. This is happening on all addresses for the host computer, so you can access the guest's web server from any host on the local network.</p>
<p>We share a folder between the host and the guest operating system. This makes it convenient for passing files in.</p>
<p>Outside of config.vm.provision is all VirtualBox magicness.</p>
<p>Inside of config.vm.provision is the Chef magicness.</p>
<p>This is Chef Solo. We don't have a Chef server. We're not using hosted Chef. We don't have a persistent store of each Vagrant boxes' configuration. This is kindergarten-level Chef.</p>
<p>In kindergarten they teach you some best practices, right? Like to say excuse me after burping and wash your hands after using the bathroom. We're doing the same thing with Chef - following some best practices, even though we're totally introductory level right now.</p>
<p><img src="/static/examples/vagrant-chef-git/slide12.png" alt="Slide: Things I learned in kindergarten."></p>
<p>So here's a best practice we're using in this recipe. We're following a chef pattern called &quot;Library cookbooks and Configuration cookbooks&quot;.</p>
<p>This means that we're using a handful of standard libraries created by Opscode (that's the people who make Chef) or other members of the community. We don't mess with these cookbooks, we just use them. We don't change the settings. We don't twist any knobs. We keep our hands off.</p>
<p>That way if the maintainer of one of those cookbooks wants to change something, they can do that, and we can upgrade to it, and it should affect us, but only in a good way. We should get the new features, the new coolness the maintainer put in, but it shouldn't break our code.</p>
<p>We also have one or more &quot;Configuration&quot; cookbooks. These are our in-house &quot;application&quot; cookbooks, the cookbooks that set up our stuff.</p>
<p>See, we know what our raw materials are - maybe a little apt, a little build-essential, some nginx, a fat dose of composer, or wordpress, or Jekyll, or whatever. Those are our library cookbooks.</p>
<p>But the meal comes of out how we put it all together. You know, presentation is everything. Sure, I made some rice, but rice tastes a whole lot different when you put my sausage-coconut milk-curry on top of it.</p>
<p>That's what the configuration cookbook is for. It puts the curry on the rice. Yum.</p>
<p><img src="/static/examples/vagrant-chef-git/slide13.png" alt="Slide: Vagrant directories from vagrant-chef-wordpress"></p>
<p>Just real quick, under a Vagrant project you're gonna have a few folders. Cookbooks live in the cookbook folder. Both library cookbooks and configuration cookbooks, all mixed up together.</p>
<p>Anyone here like Korean food? There's a Korean dish called Bi Bim Bap. It's a great name. Not only does it sound cool, but it exactly describes the dish. Bap means rice. Bim is vegetable. Bi is 'all mixed up'.</p>
<p>Files that contain data about the system as a whole like to hang out in 'databags' folder.</p>
<p><img src="/static/examples/vagrant-chef-git/slide14.png" alt="Slide: databag json"></p>
<p>A databag is just a collect of JSON files that you can use to store information that one or more of your recipes might need. We can reference these values inside our recipes. Like this information includes a public and a private SSH key that my github account knows about. That way I can work my git repository from the Vagrant box. I don't actually do it this way anymore though, because private keys are a pain to put into JSON, so I just do it manually. If you use one of my dev environments, you'll have some choices of how to get connected to Github. Ask me about that later if you want to know.</p>
<p><img src="/static/examples/vagrant-chef-git/slide15.png" alt="Slide: Chef cookbook structure from vagrant-chef-wordpress"></p>
<p>In Vagrant, the cookbooks are straight up Opscode Chef cookbooks.</p>
<p>Actually, in the interest of full disclosure, Vagrant does give you the option of using other systems too, like Puppet. I'm using Chef, and I promised we'd talk about Chef. I did not promise to talk about Puppet.</p>
<p>Cookbooks have a README, a place to put in some attributes (you know, those tunable knobs I told you to leave alone?), a place for recipes, some resources maybe, and some providers maybe.</p>
<p>Here's some definitions:</p>
<p>A Chef RECIPE is a set of instructions describing how to install the software on one or more kinds of systems.</p>
<p>A Chef RESOURCE is a piece of information about the state of the machine. For example, a resource might indicate that a given piece of software is installed, or that a configuration value is set, or that a service is supposed to be running.</p>
<p>A Chef PROVIDER is a tool that puts the system into a given state. It's basically just a Ruby program. So a provider might set a configuration value, or tell a service to reload its configuration, or restart itself..</p>
<p>Let's look at a configuration recipe, since that's where all the interesting stuff happens.</p>
<p>[Shell: vagrant-chef-wordpress configure default recipe]</p>
<p>We're gonna breeze through this, and it's going to be easy, because it's just a collection of Chef standard providers. That's because Chef is a domain specific language, so we just use these little domain-specific commands to get exactly what we want.</p>
<p>First we include a bunch of library recipes. I did this with a little loop in Ruby, because cookbook files are in fact Ruby programs.</p>
<p>All of these are cookbooks that someone else wrote and someone else maintains. Some of them are from Opscode, the company that makes Chef. Some of them are from people like you and me.</p>
<p>By including these recipes without any more specific instruction, we're telling them to perform their default tasks. In each case, that's the install action.</p>
<p>Next we have the &quot;directory&quot; provider. We pass it some attributes and it creates the directory.</p>
<p>Next we have a &quot;remote_file&quot; provider. This goes out and gets a file from a remote location, and puts it on the virtual machine in the right place with the right credentials.</p>
<p>Now we have a couple of &quot;cookbookfiles&quot;. Just like remotefile, but it comes from the cookbook, under the &quot;files&quot; directory.</p>
<p>Finally we have a provider called &quot;link&quot; that creates a file or folder that's a symbolic link to some other file or folder.</p>
<p>I started this off by telling you how simple it all is, and now I probably just went and made it look complicated. So let's back up and recap.</p>
<p>There'a a github repository. It's called vagrant-chef-wordpress.</p>
<p>We cloned it.</p>
<p>We changed into its directory.</p>
<p>We ran vagrant up.</p>
<p>About 6 minutes passed.</p>
<p>[Browser: http://localhost:8000/]</p>
<p>We connected to a brand-spanking-new Wordpress.</p>
<p>Clone my repository and use it if it helps. If you improve it, please remember to send me a pull request.</p>
<p>I made a couple more repositories that are similar to this one, but run Vagrant, Chef, and Composer. One of them is a nearly-empty Composer project, and the other one installs Drupal7.</p>
<p>[Shell: vagrant halt vagrant-chef-wordpress]</p>
<p>[Shell: vagrant up vagrant-chef-flask]</p>
<p><img src="/static/examples/vagrant-chef-git/slide16.png" alt="Slide: And now for something completely different - Monty Python"></p>
<p>Let me tell you a story about my blog, version2beta.com. It's not a PHP project - it's runs from a static site generated by a Python microframework. And, of course, my development environment uses Vagrant, Chef, and Git.</p>
<p>A couple of years ago I decided I'd start blogging again. I felt like the Cheerleader on Heroes, I don't know if you remember that show. No matter how many times she tries to kill herself, she just keeps on healing.</p>
<p>No matter how many times I try to kill myself with blogging, I just keep coming back.</p>
<p>So a couple of years, I decided to use Wordpress. That wasn't a new decision. In fact, a couple years after I first started blogging, the platform I was using was discontinued. That was B2 from CafeLog. They dropped it in favor of a complete rewrite under a new name, Wordpress.</p>
<p>I built my theme, etc etc. You all know how baby Wordpress sites are made.</p>
<p>A year or so later I got sick of Wordpress. Actually, I got sick enough of Wordpress to do something different. At the time, I'd been learning Django, but I'd also been checking out this cool Ruby-based blogging tool called Jekyll. It is a static site generator, so it builds all of your pages in advance so your blog is way fast.</p>
<p>Since I was working with Python, I went looking for a Python version of Jekyll. I found Hyde. Where do they come up with these names?</p>
<p>Hyde was cool, but the dev environment you needed for it was a bit heavy for me. In fact, I broke my dev environment almost year ago, and never quite found the energy to go fix it. So I stopped blogging from May of 2012 until the end of January of 2013.</p>
<p>In January I decided I needed to fix my blog. I almost used Jekyll, which would have made sense since I've been learning me some Ruby here and there.</p>
<p>Apparently I still must be inspired by Larry Wall, the creator of the Perl programming language. He says the three characteristics of a good programmer are laziness, impatience, and hubris.</p>
<p>Fits me like a glove. I was too lazy to rebuild my blog development environment for almost a year.</p>
<p>Once I got over my laziness, I was too impatient to learn enough Ruby to use Jekyll. Or even look at how much Ruby I'd need to learn.</p>
<p>Then I polished up my hubris and built my own blog engine. In Python.</p>
<p>[Browser: http://version2beta.com]</p>
<p>It wasn't hard. In fact, it's only 125 lines of code. And it's really easy to use. And the development environment is a breeze.</p>
<p>So let's talk about the development environment.</p>
<p>My blog development environment works much like the Wordpress dev environment we already went through. I have a repository on my github account that sets up a Vagrant box with all of the tools I need: basically, Python and a handful of Python packages.</p>
<p>But this environment works just a little bit different. It doesn't bring up a clean, new environment. It deploys a local development version of my blog.</p>
<p>Let's walk through my configuration cookbook.</p>
<p>[File: vagrant-chef-flask/cookbooks/configure/recipes/default.rb]</p>
<p>My configuration recipe starts much like the Wordpress version. We start by including some library cookbooks for Python and Vim.</p>
<p>The next Chef command is new though. It's called &quot;package&quot; and all it does is use the virtual machine's package manager to install a package. My box is running on Ubuntu 12.04, so it's probably going to use apt-get. If I were on one of those other, weird versions of Linux, maybe it would use yum.</p>
<p>I have a handful of Python packages to install, so I'm going to use the Python package manager called pip. The Python cookbook even gives me a provider for this, python_pip.</p>
<p>My dev environment needs a few directories. I'll take one for the blog, one for my SSH keys, one for my Amazon Web Service keys, and one for this program you might have noticed called vcprompt. That's the git notifier I'm using in my Bash prompt. It's included in the Wordpress and Composer Vagrant boxes I made too.</p>
<p>Next we need to put some stuff in the filesystem. vcprompt, my bash profile, my vim rc file, public and private keys, a configuration file for s3cmd for Amazon S3, and my configuration file for git.</p>
<p>Then the last step tells Chef to go to Github, as me, and clone or pull my blog repository.</p>
<p>[Shell: vagrant ssh]</p>
<p>My workflow is really easy then.</p>
<p>I run a simple command to launch my dev server.</p>
<p>[Shell: python sitebuilder.py]</p>
<p>I create or edit my content.</p>
<p>I check it out in a browser.</p>
<p>[Browser: http://localhost:8000]</p>
<p>I commit my changes and push to Github.</p>
<p>I like it so I launch it.</p>
<p>[Shell: python sitebuilder.py deploy]</p>
<p>I think that's pretty damn easy to use. I'm happy with it.</p>
<p>I've been building a development environment for our developers at my day job too. It involves multiple virtual machines, many more library cookbooks, four configuration cookbooks, at least a dozen Github repositories, dozens of Python packages, preloading over a gigabyte of data into the database, and it's all written to work with Vagrant, or a virtual private server, or bare metal - whatever you choose.</p>
<p>I'm happy to say it works, even scaled out, comparatively.</p>
<p><img src="/static/examples/vagrant-chef-git/slide17.png" alt="Slide: twitter, github contact info, &amp;quot;Free as in beer&amp;quot; tech support"></p>
<p>Let's wrap it up. There are four repositories on my Github account showing off how you can make dev environments with Vagrant and Chef. Three of them are set up so that you can just clone them and go.</p>
<p>The first one is called vagrant-chef-wordpress, and if you clone it, you can go straight from vagrant up to picking your wordpress name. Clone it, star it, use it, make it better, send me pull requests.</p>
<p>The second one is called vagrant-chef-composer, and it gets you in a LAMP environment with composer and a starter composer.json file. Clone it, star it, use it, make it better, send me pull requests.</p>
<p>The third one is called vagrant-chef-drupal7, and it gets you the same composer environment, but this one is ready to run Drupal. Clone it, star it, use it, make it better, send me pull requests.</p>
<p>I really like stars, by the way. I hope to get more of them.</p>
<p>The fourth one is called vagrant-chef-flask, and it's my blog development environment. I recommend against working with it right now. It's really a single purpose kind of thing. My daughter Miranda and I are working on making it into a general purpose static site generator called Kobol. It's in Python, not PHP, but maybe you'll have both her and I back to talk about it sometime.</p>
<p>I want to thank you for listening. As always, my presentations come with a 100% money back guarantee plus tech support that is &quot;Free as in beer&quot;. That means you buy me a beer and I give you tech support.</p>
]]></description><link>http://version2beta.com/articles/dev-environments-with-vagrant-chef-and-git</link><guid isPermaLink="true">http://version2beta.com/articles/dev-environments-with-vagrant-chef-and-git</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Last time I reset my blog,<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> I chose a static site generator called Hyde<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> because it is based on Python and Django<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>. It was a good choice at the time, but since then it's become heavy and I got tired of carrying it. In fact, in May 2012 I accidentally deleted my blog dev virtualenv environment and decided then I'd rather move the site to a new platform than rebuild the environment. After all, I keep telling myself I need to learn Jekyll<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>. Or Sinatra.<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> Or I could build it in Tako<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> on Node.js. In fact, at various times I think I started all of those projects.</p>
<p>So after a mere 8 months of false starts and procrastination, I managed to move my blog. And make it prettier.</p>
<h2>The new setup</h2>
<p>The new platform is based on a handful of interesting technologies that I wanted to learn more about:</p>
<ul>
<li>Amazon Web Services Route53 and S3 Simple Storage Service</li>
<li>Vagrant and Chef</li>
<li>Python Flask microframework</li>
<li>YAML and Markdown</li>
</ul>
<h3>Amazon Web Services</h3>
<p>Amazon Web Services<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup> offers a bunch of technologies at affordable pay-per-use prices. I did a largish project on AWS a couple years ago but haven't been using them much until recently, when I decided to take advantage of the &quot;free&quot; tier. I'm using an EC2<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup> micro instance virtual private server right now as an online coding server pretty much specifically so I can invite other devs in on tmux<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup> for remote pairing, but that's not actually relevant to my blog platform. For that, I'm using Route53<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup> and S3<sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup>, but it's all giving me a good opportunity to come up to speed on a lot of their tech.</p>
<p>S3<sup class="footnote-ref"><a href="#fn11" id="fnref11:1">[11]</a></sup> provides file storage in the cloud. With the right permissions on files, you can share them with the world just like a web server would. Since my blogging platform is a &quot;static site generator&quot; (it builds a collection of static files that make up the site), I need someplace to store the files that's accessible via the internet.</p>
<p>Route53<sup class="footnote-ref"><a href="#fn10" id="fnref10:1">[10]</a></sup> is the special sauce that makes my static files accessible via my domain. This is a fairly recent addition to the AWS product line. First, it provides Domain Name Services or DNS for any domain pointed there. Second, it let's you associate a host in your DNS with a bucket in your S3. With that, any file I upload to S3 can be served at <a href="http://version2beta.com">http://version2beta.com</a>. Mission accomplished.</p>
<h3>Vagrant and Chef</h3>
<p>Chef is a server management tool that let's you associate a server (node) with cookbooks and recipes that install, configure, and maintain the software on the server. More advanced use lets you associate your server with one or more roles (like application server, or database server, load balancer, or super-secret-international-spyperson-hacking-platform) in an environment (like development, QA, production, or maybe destructive-test-grounds).</p>
<p>Chef works well with Vagrant<sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup>, which is a tool for quickly deploying local virtual machines using VirtualBox.<sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup> Vagrant deploys the virtual machine and then uses Chef (or Puppet,<sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup> a similar tool) to provision it.</p>
<p>What I've done this time around is create a Vagrant project (available on my Github<sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup>) that sets up my development environment on any machine with Vagrant installed. The blog is also on Github<sup class="footnote-ref"><a href="#fn16" id="fnref16">[16]</a></sup> of course, so in one command, I build everything I need in a development server to work on my blog. It's an on-demand environment. Pretty slick.</p>
<p>I've been killing birds with stones all over the place with Vagrant and Chef. One of my current $dayjob<sup class="footnote-ref"><a href="#fn17" id="fnref17">[17]</a></sup> projects is to create a portable development environment that's quick and easy for a dev to deploy. Another is to create QA environments that are disposable and fast. A third is to set up our production systems on Opscode's Hosted Chef environment.<sup class="footnote-ref"><a href="#fn18" id="fnref18">[18]</a></sup></p>
<p>I'm also preparing a presentation for the Milwaukee PHP User's Group<sup class="footnote-ref"><a href="#fn19" id="fnref19">[19]</a></sup>, one of our excellent local (Milwaukee) tech meetups. My presentation is on creating and using virtual development environments:<sup class="footnote-ref"><a href="#fn20" id="fnref20">[20]</a></sup></p>
<blockquote>
<p>Virtual development environments keep your workspace clean and predictable in dev and production, and creating a virtual development machine with Vagrant is quick and easy once you have all the pieces in place. Rob Martin (@version2beta) is going to put all the pieces together and hand them to you, and then show you how you can use them.</p>
</blockquote>
<h3>Python Flask microframework</h3>
<p>I've mentioned Flask<sup class="footnote-ref"><a href="#fn21" id="fnref21">[21]</a></sup> in other blog posts. It's a Python microframework originally inspired by Ruby's Sinatra<sup class="footnote-ref"><a href="#fn5" id="fnref5:1">[5]</a></sup> and written by Armin Ronacher<sup class="footnote-ref"><a href="#fn22" id="fnref22">[22]</a></sup>. I'm a big fan of Armin's work, which includes not only Flask but also Werkzeug,<sup class="footnote-ref"><a href="#fn23" id="fnref23">[23]</a></sup> Jinja2,<sup class="footnote-ref"><a href="#fn24" id="fnref24">[24]</a></sup>, and Sphinx.<sup class="footnote-ref"><a href="#fn25" id="fnref25">[25]</a></sup></p>
<p>I find writing web applications and restful services in Flask pretty easy. But it wasn't until I was looking at my options for replacing Hyde on this blog that I discovered Frozen-Flask,<sup class="footnote-ref"><a href="#fn26" id="fnref26">[26]</a></sup> a Flask extension that takes a static snapshot of a Flask application and stores it in a file system. Frozen-Flask makes Flask into a static site generator.</p>
<p>My Flask application is really quite simple.</p>
<ul>
<li>If I run it directly (<code>python sitebuilder.py</code>) it launches a development server on port 8000 (which Vagrant has forwarded to port 8000 on the host computer.)</li>
<li>If I run <code>python sitebuilder.py build</code> it freezes the website into the ./build directory.</li>
<li>If I run <code>python sitebuilder.py deploy</code> it freezes the website and copies the contents of the ./build directory to the S3 bucket, taking the site live.</li>
</ul>
<h3>YAML and markdown</h3>
<p>Finally it comes down to content, which if I understand correctly is an important part of a blog.</p>
<p>My content is stored in flat files. I like this. It makes it very easy to do version control and store them at Github. In fact with Github's new online editing,<sup class="footnote-ref"><a href="#fn27" id="fnref27">[27]</a></sup> I can even create and edit blog posts through their web interface.</p>
<p>My content is divided into &quot;pages&quot; and &quot;articles&quot;. Pages are manually linked to the navigation, or referenced on other pages. Articles are blog posts and always sorted in reverse chronological order (most recent first).</p>
<p>Each page or article is in it's own text file. The raw file is YAML<sup class="footnote-ref"><a href="#fn28" id="fnref28">[28]</a></sup> over Markdown.<sup class="footnote-ref"><a href="#fn29" id="fnref29">[29]</a></sup> There's a YAML header that contains a short and long title (the short title is used for the H1 tag, the long title is used for the title attribute in links), and an excerpt or summary. Articles also have a published attribute with the date and time to show as the published timestamp. These YAML fields are arbitrary though - what they're called only has relevance if they're referenced in a template or the program logic, so any fields can be added at any time. In fact, I'll probably add tags at some point, which will require updating the controller and the templates.</p>
<p>After the YAML header, there's a blank line. After that, there's markdown defining the main content for the page or article. Easy-peasy.</p>
<h2>What's next</h2>
<p>I hadn't intended to use YAML as my metadata transport. I wanted to use JSON for all of the content definitions, and support a variety of backends including CouchDB.<sup class="footnote-ref"><a href="#fn30" id="fnref30">[30]</a></sup> But JSON doesn't support multiline strings (you must embed the carriage returns) and I don't have a JSON+Markdown editor that I can connect to CouchDB. So that's a project I might take on.</p>
<p>Blogging is inherently organized by time, and my platform supports that. I think it'd be nice to also support tags. If I do that, I'll just use Javascript to make a faceted filter - check or uncheck tags or categories and articles appear or disappear.</p>
<h1>Check it out</h1>
<p>Check out the code for my blog platform on Github at <a href="https://github.com/Version2beta/version2beta">https://github.com/Version2beta/version2beta</a>.</p>
<p>Check out the Vagrant + Chef setup at <a href="https://github.com/Version2beta/vagrant-chef-flask">https://github.com/Version2beta/vagrant-chef-flask</a>. I'll be building a couple more open source versions of that getup for PHP stuff in preparation for my February presentation.</p>
<p><a href="http://docs.python.org/3/">http://docs.python.org/</a>.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>I blogged about the last blog reset too in <a href="/articles/blog-reset/" title="The last blog reset I did">Blog reset</a>. I blogged about starting this blog in <a href="http://version2beta.com/articles/instantiate-blog/" title="The story of how I ended up blogging. Again.">Instantiate blog</a> almost two years ago. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p><a href="http://ringce.com/hyde" title="Hyde is a static website generator powered by Python &amp; Django.">Hyde</a> is a static site generator inspired by Ruby's Jekyll<sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4]</a></sup>. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="https://www.djangoproject.com/" title="The web framework for perfectionists with deadlines.">Django</a> is a powerful and monolithic web application platform. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p><a href="http://jekyllrb.com/" title="Jekyll is a blog-aware, static site generator in Ruby.">Jekyll</a> is a Ruby-based static site generator. I don't consider myself a Ruby programmer, but I suspect that's changing. <a href="#fnref4" class="footnote-backref">↩</a> <a href="#fnref4:1" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p><a href="http://www.sinatrarb.com/" title="Sinatra is a DSL for quickly creating web applications in Ruby with minimal effort.">Sinatra</a> is a brilliantly simple web application microframework in Ruby. It's one of the reasons I'll probably become a Ruby programmer. <a href="#fnref5" class="footnote-backref">↩</a> <a href="#fnref5:1" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p><a href="https://github.com/mikeal/tako" title="Tako framework.">Tako</a> is a functional web framework in Javascript for Node.js. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
<li id="fn7"  class="footnote-item"><p><a href="http://aws.amazon.com" title="Amazon Web Services">AWS</a> is Amazon Web Services, Amazon's platform for developing &quot;web scale&quot; applications in the cloud. <a href="#fnref7" class="footnote-backref">↩</a></p>
</li>
<li id="fn8"  class="footnote-item"><p><a href="http://aws.amazon.com/ec2/" title="Elastic Compute Cloud">EC2, or Elastic Compute Cloud</a> is Amazon AWS' virtual private server offering. <a href="#fnref8" class="footnote-backref">↩</a></p>
</li>
<li id="fn9"  class="footnote-item"><p><a href="http://tmux.sourceforge.net/" title="TMUX terminal multiplexer">TMUX</a> is a &quot;terminal multiplexer&quot; that I find useful when sharing a coding session with another programmer. <a href="#fnref9" class="footnote-backref">↩</a></p>
</li>
<li id="fn10"  class="footnote-item"><p><a href="http://aws.amazon.com/route53/" title="Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.">Route53</a> is Amazon AWS' domain name service. <a href="#fnref10" class="footnote-backref">↩</a> <a href="#fnref10:1" class="footnote-backref">↩</a></p>
</li>
<li id="fn11"  class="footnote-item"><p><a href="http://aws.amazon.com/s3/" title="Amazon internet file store">S3, or Simple Storage Service</a> is Amazon AWS' cloud-based file store. <a href="#fnref11" class="footnote-backref">↩</a> <a href="#fnref11:1" class="footnote-backref">↩</a></p>
</li>
<li id="fn12"  class="footnote-item"><p><a href="http://www.vagrantup.com/" title="Development environments made easy">Vagrant</a> is a tool for creating lightweight, reproducable, portable development and QA environments. <a href="#fnref12" class="footnote-backref">↩</a></p>
</li>
<li id="fn13"  class="footnote-item"><p><a href="https://www.virtualbox.org/" title="Virtualization platform">VirtualBox</a> makes virtual machines run on a variety of host platforms including at least Linux, MAC OS X, and Windows. <a href="#fnref13" class="footnote-backref">↩</a></p>
</li>
<li id="fn14"  class="footnote-item"><p><a href="http://puppetlabs.com/" title="Configuration management.">Puppet</a> is a configuration management tool similar in some ways to Chef. I'm using Chef without much review of Puppet, so I can't add a whole lot more here. <a href="#fnref14" class="footnote-backref">↩</a></p>
</li>
<li id="fn15"  class="footnote-item"><p>This is my <a href="https://github.com/Version2beta/vagrant-chef-flask" title="dev environment source code">code repository for my blog dev environment</a> using Vagrant and Chef. <a href="#fnref15" class="footnote-backref">↩</a></p>
</li>
<li id="fn16"  class="footnote-item"><p>This is my <a href="https://github.com/Version2beta/version2beta" title="blog source code">code repository for my blog and static site generator</a>. <a href="#fnref16" class="footnote-backref">↩</a></p>
</li>
<li id="fn17"  class="footnote-item"><p><a href="http://tartansolutions.com" title="Tartan Solutions">Tartan Solutions</a> is my $dayjob. <a href="#fnref17" class="footnote-backref">↩</a></p>
</li>
<li id="fn18"  class="footnote-item"><p>Opscode Chef comes in a <a href="http://www.opscode.com/hosted-chef/" title="Hosted Chef at Opscode.">online version</a> that's pretty slick. I'm using it. <a href="#fnref18" class="footnote-backref">↩</a></p>
</li>
<li id="fn19"  class="footnote-item"><p>Milwaukee has a ton of great meetups. The <a href="http://www.mkepug.org/" title="Milwaukee PHP User's Group">PHP User's Group</a> is just one of them. <a href="#fnref19" class="footnote-backref">↩</a></p>
</li>
<li id="fn20"  class="footnote-item"><p>I'll be <a href="http://www.mkepug.org/events/101042652/" title="Smooth moves with Vagrant, Chef-solo, and git">presenting</a> on February 12, 2013 at 6 PM if you're in the area and available. <a href="#fnref20" class="footnote-backref">↩</a></p>
</li>
<li id="fn21"  class="footnote-item"><p>Flask is a Python microframework, originally inspired by Sinatra. It's my framework of choice for most things. <a href="#fnref21" class="footnote-backref">↩</a></p>
</li>
<li id="fn22"  class="footnote-item"><p>Check out <a href="http://lucumr.pocoo.org/" title="Armin's blog.">Armin online</a>. He's pretty damn cool. <a href="#fnref22" class="footnote-backref">↩</a></p>
</li>
<li id="fn23"  class="footnote-item"><p><a href="http://werkzeug.pocoo.org/" title="Werkzeug WSGI library">Werkzeug</a> is a whiskey library. No, a WSGI brilary. No, A whiskey a-go-go. I forget, what were we talking about? <a href="#fnref23" class="footnote-backref">↩</a></p>
</li>
<li id="fn24"  class="footnote-item"><p><a href="http://jinja.pocoo.org/" title="Jinja2 templating engine.">Jinja2</a> is a Python templating engine with a lot of features. <a href="#fnref24" class="footnote-backref">↩</a></p>
</li>
<li id="fn25"  class="footnote-item"><p><a href="http://sphinx-doc.org/" title="Sphinx documentation engine.">Sphinx</a> is a Python-based documentation platform used by lots and lots of projects, including <a href="#fnref25" class="footnote-backref">↩</a></p>
</li>
<li id="fn26"  class="footnote-item"><p><a href="http://packages.python.org/Frozen-Flask/" title="Frozen-Flask freezes a Flask application into a set of static files">Frozen-Flask</a> turns Flask into a static site generator. <a href="#fnref26" class="footnote-backref">↩</a></p>
</li>
<li id="fn27"  class="footnote-item"><p><a href="https://github.com/blog/905-edit-like-an-ace" title="Github online editing.">Github provides online editors now</a>. With these editors you can change existing files or create new ones right from the website. In fact, you can even edit other people's repos online. It forks them for you, and on commit will helpfully send a pull request. <a href="#fnref27" class="footnote-backref">↩</a></p>
</li>
<li id="fn28"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/YAML" title="YAML on Wikipedia">YAML</a> is a way to store data in a way that computers find meaningful and people find comfortable. <a href="#fnref28" class="footnote-backref">↩</a></p>
</li>
<li id="fn29"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Markdown" title="Markdown on Wikipedia">Markdown</a> is a markup language, kinda like HTML but way easier to use and much nicer to read. <a href="#fnref29" class="footnote-backref">↩</a></p>
</li>
<li id="fn30"  class="footnote-item"><p><a href="http://couchdb.apache.org/" title="Relax.">CouchDB</a> is a JSON-based NoSQL database. <a href="#fnref30" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/another-blog-reset</link><guid isPermaLink="true">http://version2beta.com/articles/another-blog-reset</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I won't make a habit of archiving my twitter stream here. Most of what I've said on Twitter is best ignored by the present, let alone posterity.</p>
<p>When my ego is stroked just right by my own cleverness, a tweet may land here.</p>
<blockquote>
<p>Last night I dreamt Bruce Banner hadn't aged but Hulk had. Young Bruce becomes tottering gray-green Hulk. I dreamt I was old Hulk.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>So yeah, that's how my morning is going.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="https://twitter.com/version2beta/status/294815678442127360" title="Last night I dreamt Bruce Banner hadn't aged...">@version2beta's Twitter stream on 25 Jan 2013 at 8:35AM.</a> <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/hulk_tweet</link><guid isPermaLink="true">http://version2beta.com/articles/hulk_tweet</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p><em>Dear Ramada Worldwide,</em></p>
<p><em>Your Wisconsin Ramada Plaza Hotel on 13th at College Ave in Milwaukee just kicked my 70 year old mother out of her hotel room at midnight, because I complained about accessibility.</em></p>
<p>I know that sounds absurd. It is absurd, and it actually gets worse. You see, what I actually complained about was that the hotel told my sisters to cart my mother to their room on a luggage rack. You know, the rack the bellboy pushes.</p>
<p>Mom has had bypass surgeries, back surgeries, neck surgeries, heart surgeries, you name it. Last month they did an operation on her carotid artery. A month before they replaced her pacemaker. She also has primary progressive MS. Mom is a modern medical miracle. One would think that when you arrive with a 70 year old woman and ask for a wheel chair, you might recognize the kind of situation that requires a level head for both customer service and legal compliance. You might not want to tell the guests to load mom up on a luggage cart and skate her up to her room.</p>
<p>Upstairs, and all the way to the other end of the building. To a room where, when one sits on the foot of the bed, the head of the bed rises 12 inches. (Try to picture my mother sitting on the edge of the bed putting on her shoes, with the other end of the bed floating away. It's okay if you need to laugh.)</p>
<p>My younger sister didn't just tell me about it, she called up Ramada and complained. Nothing happened.</p>
<p>Trying to do something about this worried my older sister - with good reason, as it turned out. After all, look what happened when I did try to do something about it. They got kicked right out on their asses at midnight. Duh!</p>
<p>My mother didn't want to be a bother. To be honest, I think she feels bad she can no longer walk from the lobby to room 256.</p>
<p>On the other hand, I was willing to be a bother. Here's what I did:</p>
<ol>
<li>I tweeted about it.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> <sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> <sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup> <sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> Really, this is some absurd stuff. Push the old lady up on a luggage rack? It's almost funny, you know? I mean, if she's not your mom.</li>
<li>I called Ramada Worldwide customer service and told them about it. They told me to call the hotel. I said I would, but I still wanted to talk to a manager. Turns out, Ramada Worldwide customer service is one of those departments that is set up to prevent the customer from getting service. I had to tell the woman to (a) get a manager, or (b) take my information so that a manager could get back to me, or (c) hang up on me. She chose option (b) and promised a manager would return my call by Thursday, five days hence.</li>
<li>I called the Ramada Plaza Milwaukee, where they were staying. Scratch that. I tried to call the hotel, but THEIR NUMBER WAS DISCONNECTED. Yes, the 800-303-8002 number on every page of their website<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> was disconnected. Wtf?</li>
<li>I drove down to the hotel and I talked to a manager, Jennifer, who was actually very sweet and helpful. She was aghast about the luggage rack. Jennifer's indignation made me feel good. She also found an accessible room on the first floor. She gave me keys so I could move my mom and my sisters (who were visiting with my son at his hippotherapy) to the new room. As it happens, she couldn't find one of the aforementioned luggage racks so I had to make five trips. But she did take some notes on my concerns (like the see-sawing bed and the out-of-service phone number) to leave for the owner.</li>
</ol>
<p>The owner didn't call me. When my sisters returned at midnight, their room key didn't work. When they checked in at the counter, my sisters were informed that they were no longer guests and would be escorted out, with their things.</p>
<p>Here's the really fun part - mom wasn't even there because she was at the hospital for a heart attack! My sisters were returning to the hotel room after we got mom admitted to St Luke's Hospital. I'm sitting in mom's hospital room where it's still not clear if she had a heart attack or if it's just a stage one blockage, and my sisters - after one hell of an evening - are getting kicked out of their hotel.</p>
<p>The reason they were given is that <strong>I was combative.</strong></p>
<p>Some people might think I was being reasonable to ask that they help find a more appropriate room. But some people might call it reasonable that the hotel didn't have any wheelchairs and didn't offer help beyond a luggage rack for her transport. My mother could have chosen to travel with her electric scooter, except that she wouldn't have been able to fly here from Maine. Or maybe my sister should have reserved a handicapped room - I don't actually know whether she reserved a handicap room, or if she even knew they exist. If she didn't <strong>reserve</strong> an accessible room, why should that be the hotel's problem?</p>
<p>(Except for the ADA. And Wisconsin law. I don't know if the city has any laws on the subject.)</p>
<p>Just to be clear: I was not there when my sisters wheeled our mother up to the room on a luggage rack, but all three of them told me it happened, that it was what the hotel told them to do and they had no other way to get mom to the room. I did sit on the seesawing bed. I did talk to Ramada Worldwide customer service. And I did talk to Jennifer at the hotel, who is the person who answered my questions when I asked for a manager.</p>
<p>My conclusion can only be that my elderly mother and two sisters were kicked out of the Ramada Plaza Milwaukee because I complained about accessibility. To be fair, what I call complaint they call combat. And I did tweet about them five times. So maybe I deserved to feel like a total shit when my sister called me crying at half past midnight to tell me they kicked them out of their room because I was combative.</p>
<p>I fear many people don't actually understand what accessibility is, and why it's important. Some of them work in (or even own) businesses that deal with accessibility challenges on this scale every day, and often they are handled poorly. I encourage you to share this story for the value of a bad example, and reinforce why accessibility is important.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>'Worse hotel ever @ramadaworldwide. Mother can't get handicap access, wheeled up on bellboy carrier. Water stains, no more towels in hotel.' <a href="https://twitter.com/#!/version2beta/status/203895122167992320" title="@version2beta tweet about the Ramada Plaza Milwaukee hotel.">twitter.com</a> <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>'That was my biggest &quot;you must be shitting me&quot; hotel experience yet, @ramadaworldwide. Room window overlooks banquet hall trash pile?' <a href="https://twitter.com/#!/version2beta/status/203898432803446785" title="@version2beta tweet about the Ramada Plaza Milwaukee hotel.">twitter.com</a> <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p>'Sat on the foot of the bed at mom's @ramadaworldwide room and the head rose a foot. Looked up at fresh water stains on ceiling.' <a href="https://twitter.com/#!/version2beta/status/203901314520973312">twitter.com</a> <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p>'Needless to say, pretty disgusted by @ramadaworldwide's College Ave, Milwaukee hotel. Wish mom were staying somewhere else.' <a href="https://twitter.com/#!/version2beta/status/203902803209498624" title="@version2beta tweet about the Ramada Plaza Milwaukee hotel.">twitter.com</a> <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p>'I want @ramadaworldwide to picture my 70 year old mother riding a luggage cart because you didn't have a wheelchair or accessible room.' <a href="https://twitter.com/#!/version2beta/status/203905076320931841" title="@version2beta tweet about the Ramada Plaza Milwaukee hotel.">twitter.com</a> <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p><a href="http://www.ramadaplazamke.com/" title="The Ramada Plaza Hotel in Milwaukee, Wisconsin">Ramada Plaza Hotel, 6331 S. 13th Street, Milwaukee, Wisconsin 53221</a>, 800-303-8002 (disconnected) and 414-764-1500 (though I didn't find that before I drove down there.) <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/ramada-plaza-milwaukee-kicks-out-my-70-year-old-mother-at-midnight</link><guid isPermaLink="true">http://version2beta.com/articles/ramada-plaza-milwaukee-kicks-out-my-70-year-old-mother-at-midnight</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>On his blog, Tom Henrich<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> calls for better developer documentation<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> on <em>why</em> a design decision was made, rather than just <em>what</em> decision was made. In this post I share my example.</p>
<p>From the source code for a Box.net<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> uploader snippet I wrote in MODX:<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<pre><code class="language-php">/*
 * @name      Down and Dirty Box.net Uploader
 * @author    Rob Martin &lt;rob@qmuxs.com&gt;
 * @copyright (c) 2011 Quintessential Mischief LLC
 * @link      http://www.qmuxs.com
 * @license   GPLv3
 * @version   0.1.0
 *
 * The need for a down &amp; dirty uploader came about after reviewing the
 * box.net PHP library code at https://github.com/boxplatform/box-php.
 * It's just not very good, and some of it is totally borked. It's not
 * even a surprise - I found comments on blog posts dated from February
 * 2008 complaining about a bug (can you call a whole missing function
 * - promised in the docs - a bug?) that has not changed in over three
 * years.
 *
 * I was about to start over. :-( But I did get in touch with Sean ****
 * at Box.net who threw some salt on the open wounds. He let me know
 * that the new PHP library is **just days from release**.
 *
 * And no, he couldn't get it for me. So sorry.
 *
 * The Python code isn't much better, though I haven't read through it
 * as much. However, documentation such as:
 *
 * &gt; &quot;&quot;&quot;Exception class for errors received from Facebook.&quot;&quot;&quot;
 *
 * makes me think it might not be. Facebook has nothing to do with this
 * code.
 *
 * **NOTE**: Just so you know, this code doesn't do any of the
 * authentication work. You've gotta do that manually. You need an API key,
 * an auth_token, and a folder ID for where you want the files to land.
 *
 * Here's how:
 *
 * 1. Get a ticket. It'll come back as &lt;ticket&gt;...&lt;/ticket&gt;.
 * https://www.box.net/api/1.0/rest?action=get_ticket&amp;api_key={YOUR_API_KEY}
 *
 * 2. Using the ticket, log in.
 * https://www.box.net/api/1.0/auth/{YOUR_TICKET}
 *
 * 3. Request the auth_token. It'll come back as &lt;auth_token&gt;...&lt;/auth_token&gt;.
 * https://www.box.net/api/1.0/rest?action=get_auth_token&amp;api_key={YOUR_API_KEY}&amp;ticket={YOUR_TICKET}
 *
 * 4. Get the ID of the folder you want. It'll look like &lt;folder id=&quot;xxx&quot; name=&quot;this-one&quot;.../&gt;
 * https://www.box.net/api/1.0/rest?action=get_account_tree&amp;api_key={YOUR_API_KEY}&amp;auth_token={YOUR_AUTH_TOKEN}&amp;folder_id=0&amp;params[]=nozip
 *
 * So that's the story. Here's the code:
 */
</code></pre>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>Tom Henrich (<a href="http://www.twitter.com/#!/tomhenrich" title="Tom Henrich on Twitter">@tomhenrich</a>) is a Milwaukee web geek &amp; caffeine fiend. <a href="http://notes.tomhenrich.com/" title="Tom Henrich's blog">Tom's blog</a>. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>Tom's post, <a href="http://notes.tomhenrich.com/2012/03/document-the-why-not-just-the-how/" title="Document the Why, not just the How">Document the Why, not just the How</a>. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://www.box.net" title="Those people who do secure cloud storage.">Box.net</a> is pretty good at secure cloud storage, and pretty bad at APIs - in my experience anyway. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p><a href="http://www.modx.com" title="MODX content management framework">MODX</a> is a PHP-based content management framework that works well for developers, designers, and content managers. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/document-the-why-not-just-the-how</link><guid isPermaLink="true">http://version2beta.com/articles/document-the-why-not-just-the-how</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Tonight's Milwaukee Web Design Meetup featured a CMS MegaPanel - eight pros in eight content management systems, head to head on development, features, ecosystems, costs. I represented for MODX.</p>
<p>Here is my Prezi<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> on MODX:<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<div class="prezi-player">
    <style type="text/css" media="screen">
        .prezi-player { width: 640px; } .prezi-player-links { text-align: center; }
    </style>
    <object id="prezi_xemmat6oavos" name="prezi_xemmat6oavos" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="640" height="440">
        <param name="movie" value="http://prezi.com/bin/preziloader.swf"/>
        <param name="allowfullscreen" value="true"/>
        <param name="allowscriptaccess" value="always"/>
        <param name="bgcolor" value="#ffffff"/>
        <param name="flashvars" value="prezi_id=xemmat6oavos&amp;lock_to_path=0&amp;color=ffffff&amp;autoplay=no&amp;autohide_ctrls=0"/>
        <embed id="preziEmbed_xemmat6oavos" name="preziEmbed_xemmat6oavos" src="http://prezi.com/bin/preziloader.swf" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="640" height="440" bgcolor="#ffffff" flashvars="prezi_id=xemmat6oavos&amp;lock_to_path=0&amp;color=ffffff&amp;autoplay=no&amp;autohide_ctrls=0"></embed>
    </object>
    <div class="prezi-player-links">
        <p><a title="MODX can beat up your Content Management System." href="http://prezi.com/xemmat6oavos/modx-can-beat-up-your-content-management-system/">MODX can beat up your Content Management System.</a> on <a href="http://prezi.com">Prezi</a></p>
    </div>
</div>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://www.prezi.com" title="Zooming presentations from Prezi.">Prezi's are zooming presentations</a>. I like the effect, and they're clearly still rare enough that they get just a little extra boost from the audience. But they require Flash (booo!) and I apologize for that. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p><a href="http://www.modx.com" title="MODX Content Management Framework.">MODX</a> is a relatively light-weight (as in fast, not wimpy) Content Management System and Application Framework. So far I haven't come across anything I couldn't build in MODX, though I increasingly find myself yearning for more Python (<a href="http://flask.pocoo.org/" title="A BSD-licensed microframework for Python and Jinja2.">Flask</a>, mostly, some <a href="https://www.djangoproject.com/" title="The web framework for perfectionists with deadlines.">Django</a>) and Javascript (<a href="https://www.djangoproject.com/" title="Scalable, No-SQL database programmed in Javascript.">MongoDB</a>, <a href="http://nodejs.org/" title="Non-blocking, event-driven, server-side Javascript programming.">Node.js</a>, even <a href="http://sammyjs.org/" title="RESTful, evented, client-side Javascript microframework.">Sammy.js</a>). But they aren't content management systems. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/modx-can-beat-up-your-content-management-system</link><guid isPermaLink="true">http://version2beta.com/articles/modx-can-beat-up-your-content-management-system</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>MongoDB is replying to a replica-set add command with &quot;Need most members up to reconfigure, not ok&quot;. The problem is with my configuration.</p>
<p>Here's the error:</p>
<pre><code>PRIMARY&gt; rs.add(&quot;nosql1-private:27017&quot;)
{
    &quot;assertion&quot; : &quot;need most members up to reconfigure, not ok : nosql1-private:27017&quot;,
    &quot;assertionCode&quot; : 13144,
    &quot;errmsg&quot; : &quot;db assertion failure&quot;,
    &quot;ok&quot; : 0
}
</code></pre>
<p>The problem is in my configuration on the slave Mongod. Note that I'm using a configuration file, rather than command line options, which is how the tutorials are written. This fits in with my init file, which I can share if anyone wants an Ubuntu init for MongoDB 2.0.2.</p>
<pre><code>fork = true
bind_ip = nosql1-private
port = 27017 # default port
logpath = /var/log/mongodb/mongod.log
logappend = true
cpu = true # log CPU activity periodically
journal = true
auth = true
replSet = gedc
</code></pre>
<p>I disabled journal (shouldn't be needed on a slave, right?) and auth, which seems to actually be the problem. After, the rs.add() works fine.</p>
<pre><code>PRIMARY&gt; rs.add(&quot;nosql1-private:27017&quot;)
{ &quot;ok&quot; : 1 }
</code></pre>
<p>I'm not sure I don't have to go back and get auth reenabled, though, because now my status says that the second server is &quot;still initializing&quot; and &quot;(not reachable/healthy)&quot;. But when I try to add authentication credentials, I get this error:</p>
<pre><code>uncaught exception: error { &quot;$err&quot; : &quot;not master and slaveok=false&quot;, &quot;code&quot; : 13435 }
</code></pre>
<p>So, I did discover what I really needed was a keyFile directive<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> in my mongod.conf. The file itself contains a base64 text key the servers will use for communicating.</p>
<pre><code>...
keyFile = /etc/mongodb/key.txt
...
</code></pre>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>See the &quot;Replica Set and Sharding Authentication&quot; section on the <a href="http://www.mongodb.org/display/DOCS/Security+and+Authentication#SecurityandAuthentication-ReplicaSetandShardingAuthentication" title="MongoDB docs for security and authentication, including key files for shards and replica sets.">MongoDB doc page for Security and Authentication</a>. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/mongod-replica-set-slave</link><guid isPermaLink="true">http://version2beta.com/articles/mongod-replica-set-slave</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Sitting right now at my desk at Top Floor Technologies, I've got 18 monitors available to me as I work. Excessive? Nah. 18 is almost enough.</p>
<p>I've had a variety of computer configurations. Hell, I have a variety of configurations right now, ranging from a decent setup in my home office that's stuck in the middle of an OS update I started last month and haven't gotten back to, to a setup at my QM<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> with a 32&quot; LCD TV as the main monitor (with a 23&quot; on the side), to my Version2beta<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> laptop and 19&quot; Dell monitor that I take with me when working onsite with customers.</p>
<p>In the past, I've done 3-monitor configurations. Once even a 4-monitor setup. They've been good, sometimes even fun.</p>
<p>Now though, at Top Floor,<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> I count 18 monitors on my setup.</p>
<p>As you might guess, these aren't all full, separate physical monitors. My desk is not so big, nor my chair so rolly. In fact, no one computer (there are three) has more than one physical monitor installed. But I have lots of virtual workspaces, and my fingers are very rolly.</p>
<p>My setup. Count along with me.</p>
<ul>
<li>Main: Intel Core i7 @ 3.4GHz with 12 GB RAM. 27&quot; LED monitor. 8 virtual monitors configured in pairs.
<ul>
<li>General web on Chrome (1) and general consoles (2). Stuff like filling out my time card, logging into Rackspace, etc.</li>
<li>Email (3) and Google Talk (4).</li>
<li>Project web on Chromium (5) and project consoles (6). Whatever development project I'm working one.</li>
<li>Interuptions, web (7) and consoles (8). The stuff that gets done inbetween the stuff I'm supposed to be working on.</li>
</ul>
</li>
<li>Laptop: Intel i5 @ 2.4GHz with 6 GB RAM. 17&quot; widescreen display. 8 more virtual monitors configured in pairs.
<ul>
<li>General (personal) web (9). My webmail clients, twitter, etc. Also, general consoles (10).</li>
<li>Google talk (11) and network tests (12). Yes, it's the same Google Talk account. Sometimes I don't want to switch away on my main monitor.</li>
<li>Version2beta project work browsers (13) and consoles (14).</li>
<li>Overflow (15) and (16). Okay, I have more monitors than I need on my laptop. Usually need.</li>
</ul>
</li>
<li>iPad: first generation. It has a processor and some memory, but I don't recall how much.
<ul>
<li>Just one display (17). It often has my Twitter client on it, but sometimes I'll throw email on screen, especially if I need to look at one of my more obscure personal accounts.</li>
</ul>
</li>
<li>Dell 19&quot; widescreen (18). Currently sitting on the floor next to my desk, unused. I need to buy an HDMI cable for my main system so I can run this one off the secondary output.</li>
</ul>
<p>I configure CCSM (Compiz Configuration Settings Manager) to use Ctl-Alt-Arrows to move me from virtual monitor to virtual monitor, alt-tab (and alt-shift-tab) to get me between applications on my current workspace, and alt-super-tab (and alt-super-shift-tab) to switch me between all applications on all virtual monitors. It's almost as fast as moving my eyes from one screen to the next.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://www.qmuxs.com" title="Quintessential Mischief User Experiences">QM is Quintessential Mischief LLC</a>, my wife's company. She fights for the user. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>Version2beta LLC is my company. I've occasionally worked at it full-time, but at the moment, I'm putting only a few hours a month into it. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p>I'm Web Infrastructure Manager at <a href="http://www.topfloortech.com" title="Business-to-Business internet marketing and web development.">Top Floor Tech</a>, which means I get to design awesome high performance hosting environments for standard and custom applications, and develop the web applications that need them. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/my-eighteen-monitor-setup</link><guid isPermaLink="true">http://version2beta.com/articles/my-eighteen-monitor-setup</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I ran Drupal on GlusterFS for a few days. I didn't like it. Here's why.</p>
<p>I'm building an eight-node server cluster on Rackspace Cloud for a Drupal site. Clearly, I want it to go fast.</p>
<p>It is a busy site, peaking at 20,000 unique visitors a day, maybe 100,000 pageviews. But the real fun part is that it has 1.6 million users.</p>
<p>Putting it on Drupal is a decision that predates me (and I withhold judgement - I don't have nearly enough Drupal experience yet), but the rest of the structure has been up to me. I have specific goals, like 1.5 second response times even for users who are logged in.</p>
<p>My architecture goes like this:</p>
<ul>
<li>
<p>Two load balancers, running nginx. Nginx is also serving all static content and boost cache from Drupal. Upstream servers are selected by ip_hash.</p>
</li>
<li>
<p>Two application servers upstream of nginx run lighttpd and fastcgi. Hello, Drupal.</p>
</li>
<li>
<p>A dual-master pair of MySQL servers back up the application servers. I wanted to run PostgreSQL, and I was really happy when I remembered that Drupal works with PostgreSQL. But Drupal only works with Postgres for some values of the word &quot;works&quot;. Modules may or may not support it. CCK has some issues too.</p>
</li>
<li>
<p>Two MongoDB servers hold up the rear and contain user-specific information for all 1.6 million users. A custom Python program manages authentication and data interface.</p>
</li>
</ul>
<p>Originally, I intended to use DR:BD<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> much like I do with my high-availability Linode virtual private servers.<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> It turns out that you can do that on Rackspace a couple different ways, neither of which are recommended. The first requires you to make a loopback device, since it's really difficult to get more than one block-level device on a Rackspace cloud server. The second requires you to get more than one block-level device on a Rackspace cloud server, which is not (as you might guess) only really difficult to accomplish, but it can also break things like backups and snapshots.</p>
<p>So bzzzzt to DR:BD, this time.</p>
<p>Next, I tried GlusterFS.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> The docs sucked<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>. At least I think they would have sucked if I'd read them, nearly all of them, because that's how far you have to get into them before you can see what really needs to be done. In part, this highlights the absence of a useful quickstart guide. But there's this sad thing, too. Once you manage to infer the organization of the configuration, it's really rather elegant. You could think of it as a string of Unix pipes, each volume handing off to the next, but I picture it like a stack of matryoshka dolls. This volume (the littlest doll) provides a POSIX device. This volume (the next littlest doll) provides locks. The next volume (we're getting bigger now) provides multiple I/O threads. And so on.</p>
<p>When all the dolls were stacked, I had a working GlusterFS filesystem across four servers.</p>
<p>Since I'm not the only person on this project (which is a good thing, or else we'd really be in trouble) we also had a development server at WebEnabled.<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> I compared the Drupal devel module timing between the two systems and realized that I had a serious problem. What WebEnabled was doing in 1,200ms, my setup was taking 4,200ms.</p>
<p>Ultimately I tracked this down to GlusterFS. It appears (and I haven't really tested this) that Drupal is I/O intensive enough that the delays of GlusterFS made a noticeable (and unacceptable) difference.</p>
<p>Here's the timing for one page (logged into Drupal, so boost isn't helping) with GlusterFS:</p>
<pre><code>Executed 229 queries in 294.47 milliseconds. Page execution time was 3820.92 ms.
</code></pre>
<p>Here's the same page without GlusterFS:</p>
<pre><code>Executed 229 queries in 325.98 milliseconds. Page execution time was 839.68 ms.
</code></pre>
<p>Now I'm not here saying you can't run Drupal on GlusterFS. I'm not even saying I had it configured right. (Remember, I didn't read the docs - at least not all of them.) But I'm reasonably confident I had it configured and optimized well, and I got considerably better results when not using GlusterFS. In my case, I got acceptable results only without GlusterFS.</p>
<p>I still need to synchronize filesystems, so I tried another new-to-me program, lsyncd.<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> I like it, and it works well for this application, where the file system is not changing all that often. Perhaps I'll write something up on lsyncd another day.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>I still recommend <a href="http://www.drbd.org" title="Block storage devices distributed, even mirrored, across servers.">DR:BD</a>, it's cool beans. RAID-1 across a network. Nice. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>I've blogged about this before, including a how-to for <a href="http://version2beta.com/articles/high-availability-linode-pairs" title="A how-to of sorts for high-availability Linode pairs.">building high availability Linode pairs</a>. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p>GlusterFS provides multi-master file systems, much like OCFS, but without the poisonous &quot;Oracle&quot; in it's name. (Actually it's now owned by RedHat.) <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p><strong>Important note:</strong> RedHat bought GlusterFS shortly before I started using it, and even though it was only a week ago I was bitching and moaning about the documentation, the new docs are up. Also, when I took my moaning to Twitter, someone almost immediately tweeted back at me that the new docs were coming very soon. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p><a href="http://www.webenabled.com" title="Instant development servers with zero systems administration.">WebEnabled</a> is a development-platform-as-a-service-provider. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p>Live sync'ing daemon. <a href="http://code.google.com/p/lsyncd/" title="Live syncing daemon">Lsyncd</a> watches the directories you tell it to, and when something changes, it rsync-ssh's the changes around to other machines. Kinda like a DIY Dropbox. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/drupal-on-glusterfs-on-rackspace-cloud</link><guid isPermaLink="true">http://version2beta.com/articles/drupal-on-glusterfs-on-rackspace-cloud</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>A customer received 40,000 mailer-daemon messages yesterday. I bet that was fun.</p>
<p>I've seen only four or five of the emails, but it was enough to demonstrate that someone had credentials to use the SMTP server to send phishing messages pretending to be from Elavon Merchant Services.</p>
<p>The text of the message goes something like this:</p>
<blockquote>
<p>Elavon Virtual Merchant Account Alert -</p>
<p>Your RETAIL account has expired. If you intend to use our services in the future you have to update your online info now.</p>
<ul>
<li>Download the attached login page in this email to continue. -</li>
</ul>
<p>*** Please note : Only Retail accounts are locked. (Example : Market Segment : Retail )</p>
<p>Thank you - Elavon Merchant Services Team.</p>
</blockquote>
<p>The attached HTML file looks like a login form for Elavon, but sends the data to a Japanese website http://depot-abc.com, deep linked into a Wordpress installation, probably hacked.</p>
<p>While it looked like the client's computer might have been compromised, it turned out the messages were being sent from colocated or shared servers, at least the few I tracked down. Most of the messages I looked at were sent from The Planet in Texas, which I believe is still the world's largest privately held hosting facility (hosting services, not like Facebook or Google which undoubtedly have bigger facilities.) Some of the other messages came from a machine hosted at Netelligent.ca, providing hosting services in and around Montreal. In this case, the machine seems to be in Laval, QC.</p>
]]></description><link>http://version2beta.com/articles/elavon-phishing-scam</link><guid isPermaLink="true">http://version2beta.com/articles/elavon-phishing-scam</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>This is part three in a series exploring how Tryton might fare as the heavy-lifting portion of an e-commerce package. This third part explores what it means to do e-commerce.</p>
<p>The whole series:</p>
<ul>
<li><a href="/articles/evaluating-tryton-as-an-ecommerce-backend_about-tryton" title="Evaluation Tryton as an e-commerce back-end: Stalking the Tryton community">Part 1: About Tryton</a></li>
<li><a href="/articles/evaluating-tryton-as-an-ecommerce-backend_stalking-the-tryton-community" title="Evaluation Tryton as an e-commerce back-end: Stalking the Tryton community">Part 2: Stalking the Tryton community</a></li>
<li>Part 3: The crux of the matter</li>
</ul>
<h2>First a review</h2>
<p>If you read my last two posts on this topic, you'll recall I'm in the process of discovering the whys and hows of using Tryton as the back end of an e-commerce system.</p>
<p>To review, Tryton<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> is an open source ERP<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> platform licensed under the GNU General Public License,<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> written in Python<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup> and working with a PostgreSQL<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> database server. Phew. In short, it's a cool way to set up One Software To Rule Them All.<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
<p>In this post we get into the meat and potatoes: what is e-commerce anyway?</p>
<h2>What's e-commerce anyway?</h2>
<p>There are many ways to define e-commerce. Perhaps most comprehensive would be a list of features that are implemented in a given e-commerce system. I considered creating such a list for this blog post. Ultimately, I decided to keep it simple, because the most simple view also exposes the biggest holes in almost all e-commerce systems.</p>
<p>Here's the simple definition: <strong>e-commerce is the implementation of a business' customer interface on the internet.</strong> If it involves a customer, a company, and a computer, it's probably e-commerce.</p>
<p>Obviously this covers all the typical interactions: Buying a shirt, choosing an XL size. Reviewing my order before I check out. Paying for my order, getting my order confirmation. Getting a note when my shirt ships. Returning it when I discover the hole in the underarm.  As you can see, this is all part of a process.</p>
<p>A lot of this typical process is well defined by best practices, and implemented in (almost) every sort of e-commerce platform. So why do we need to consider Tryton?</p>
<p>The problem is that my process, or your process, might actually be different. In fact, I can say my process is definitely different - I'm not selling shirts, or widgets, or anything concrete. I sell services as diverse as disinfecting a compromised web server to building an e-commerce web site. Many of my sales are projects, made up of milestones and tasks and billing stages. Sure, when I order a shirt online I might wish to see when it's going to ship, but when my customer orders a web site, she might wish to see where we're at in the process of producing it.</p>
<p>My work is not unique in its e-commerce needs. Heck, my field isn't even unique. Just about everyone who sells anything other than widgets online needs something that's either custom, or developed special for their vertical market. Lawyers, doctors, veternarians, carpet cleaners, housekeepers, daycare providers, doggie daycare providers, landscapers, painters, roofers, artists, appliance repair persons, gutter cleaners, chimney sweeps, HVAC cleaners, pest control applicators, plumbers, electricians, home theater installers, home automation designers, car mechanics, small engine mechanics, massage therapists, optomotrists, window cleaners, holiday window painters, office plant carepeople, office fish carepeople, snow removers, community theater, professional theater, cinema, parking space rental, storage space rental, apartment rental, house rental, hoteliers and moteliers, concierge and personal assistants - the list goes on.</p>
<p>Why can't I pay my rent online? Schedule my car service? Schedule a gutter cleaning, a chimney cleaning, and a tooth cleaning - all for the same day? After all, I can practically watch Domino's make my pizza with their new system.</p>
<h2>E-commerce is the ERP interface</h2>
<p>ERP is a system that manages documents as they progress through a pre-defined process. The documents very often represent something else — a purchase order represents some product that needs to be received and paid for, a sales order represents a set of products that need to be shipped and paid for, a work order represents some raw product that will be transformed into something new. We call the process they go through &quot;workflow&quot;.</p>
<p>The more accurately we model the real world with our ERP analogs, the more accurate the information we retrieve from the ERP will be. If we count incoming deliveries before marking an order received, we'll probably have better inventory numbers and fewer overcharges from vendors. If we eschew back door sales, chances are good our sales figures will be closer to reality and more profitable too.</p>
<p>Normally speaking, our customer doesn't have much more access to our ERP system than glancing at my screen as I fill out their order. That is, until we connect a website to it, and then much of the interaction they have is - or should be, as I propose - interfaced to the ERP.</p>
<p>Let's start at the beginning with a brand new customer, and fictitious business called Hearty Dog Treats that sells natural treats for dogs. Jane Doe goes shoppping for some new treats for her Newfoundland (his name is Jayne, but he's named for Jayne Cobb from Firefly and Serenity, not because it sounds just like Jane's name) and she finds Hearty Dog Treats through a series of fortuitous events. Here is her process, and how it could and should represent an interface tightly integrated with ERP:</p>
<ol>
<li>Jane visits the home page of the website to see who the company is. A sidebar advertisement is promoting 12&quot; bully sticks.<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup> This advertisement might be promoted based on an overstock, or special pricing received, or other condition modeled within the ERP.</li>
<li>Jane clicks through to the product page for bully sticks. She reads the ingredients (wow - she didn't realize what they were actually made of!) She looks at the price and stock status. The three primary pieces of information Jane pursued all come from the ERP system. A food's ingredient list really must be kept up to date and managed in a system that allows for appropriate controls and distribution. Something like an ERP system would work. The stock status is certainly derived from the ERP's inventory of bully sticks. And Jane's price comes from the default web pricelist. Too bad she's not a repeat customer or a dealer - she could create an account on the website, and get access to better pricing. <em>Her</em> pricing.</li>
<li>Jane is actually looking for duck hearts. She returns to the &quot;Treats&quot; section of the catalog. The catalog as a whole, and the navigation for it, may very well come directly from the ERP system. Indeed, if Hearty Dog Treats maintains multiple sales channels (say, online sales, a print catalog, and flyers to hand out at dog shows) they might wish to maintain the official copy for marketing materials in the ERP system as well, associated directly with the product or product line. Besides, the high school kids with the after school jobs running a point of sale terminal at Hearty Dog Treats' retail location doesn't know much about the product, so putting good product information into the ERP system will help them make the sale too.</li>
<li>Jane clicks through to Freeze Dried Duck Hearts. (These are real, by the way.<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup> I often claim that either of my Basset hounds would balance a piano on their nose for a freeze-dried duck heart.) See step 2 above.</li>
<li>Jane decides to buy. She fills out her order and submits it. She's just created a new document in the ERP system and started the process of filling an order.</li>
<li>Jane gets a confirmation email from the ERP system. She clicks the link and sees that her order has been picked from inventory and moved to shipping. She thinks to herself how cool it is to be able to see the progress of her order.</li>
<li>When Jane's order is ready to ship, the ERP system captures her credit card funds. Sure, it used to be that e-commerce systems grabbed the money when the order came in, regardless of whether it could ever be filled, but today's system knows it's better all around to charge for what you're shipping, not what you hope to ship as soon as possible.</li>
<li>Jane receives an email that her order has shipped, containing a tracking number so that she can check the progress of her delivery. She does. The truck is out for delivery.</li>
<li>The day after delivery, she gets an email from Hearty Dog Treats<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup> saying she should have received her order, and asking if everything okay with it. It also suggests she might want to subscribe to their email newsletter, or follow them on Twitter, or fan them on Facebook. In fact, maybe Jane would like to click the link below and share Hearty Dog Treats with her friends on Twitter and Facebook.</li>
</ol>
<p>Every step of Jane's order interfaced with the ERP system. Many, many websites work this way, but far from all of them. Most tier 3 and 4 businesses aren't running ERP at all. They're getting by on Quickbooks, Peachtree, or sometimes even the shoebox accounting method. Many e-commerce systems don't connect to any ERP system, or even to Quickbooks. Since that is the case, some companies actually use their e-commerce <em>as an ERP package</em> even though the design is weak at best.</p>
<p>That brings us to the next point: ERP is the company's interface to the e-commerce system.</p>
<p>[bully]: http://www.freshisbestinc.com/products/pet-treats-chews/bully-sticks-12-inch &quot;Fresh Is Best 12&quot; bully sticks.&quot;</p>
<h2>ERP is the e-commerce interface</h2>
<p>It stands to reason that, if ERP is the flip side of the e-commerce coin, the e-commerce is the flip side of the ERP coin too, right? (If not, that would make a cool magic trick...)</p>
<p>For each step Jane when through, there were one or more steps that Hearty Dog Treats went through as well. They need to order the product and have some in stock. They need to process her order and issue a pull slip or pick ticket or delivery order or whatever Hearty Dog Treats is using to represent a stock move from inventory to shipping to the customer. They need to order more stock, if their inventory has fallen below the trigger point. They need to reconcile her payment on the back account. All of these tasks are triggered by, and performed in their ERP system.</p>
<p>In fact, the reason Hearty Dog Treats has ERP is so that these processes can be automated as much as possible. Hearty Dog Treats wants things to run smoothly and profitably, even when the boss is away.</p>
<h2>Wow, so Tryton can do all this?</h2>
<p>Nope.</p>
<p>Tryton can't do it. OpenERP can't do it. Magento can't do it. Quickbooks, Peachtree, Sage — I don't really think any ERP or accounting system, open or closed source, <em>designed for small business,</em> can do what I'm describing. (If you think I'm wrong about this, comment or tweet at me right away. I don't want to redesign the wheel. I do want a system that does all of this, scales down to a mom-and-pop shop and up to tens of thousands of products and customers.)</p>
<p>I can't let that sit. I feel like those statements need to be expanded upon. I hear someone saying, &quot;There's someone wrong on the Internet! He uses the handle Version2beta!&quot;</p>
<p>First, Tryton can do it, because Tryton is a framework for developing business applications. Given a framework and a developer, much can be done. It's my opinion after months of planning this project that Tryton can do it well. Nonetheless, Tryton cannot do it yet.</p>
<p>According to OpenERP SA, OpenERP will integrate with a number of popular open source e-commerce platforms, including OSCommerce, Magento, and Joomla.<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup> And they do - I know some of the people who have worked on the Magento Connector.<sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup> In the very next paragraph of the same page, OpenERP says that &quot;to benefit from all the power of OpenERP ... you can also use our own eCommerce system that automatically plugs in an existing website. Add a few lines of HTML in your website and OpenERP converts it to a full featured eCommerce platform.&quot;<sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup> The rest of the page lists cool things you can do, a broken image link, and some comments from visitors asking how. If you dig deeper into their site, you can find the e-commerce module, version 5.0.1.0 (which often indicates it is a module for OpenERP version 5, even though it's listed under OpenERP version 6). This module is not an official module, not quality certified, and reimplements Partner, Address, Payment, Shop, Category, Sale Order, and Order Line — all standard OpenERP objects — in order to achieve e-commerce. And so I hold that OpenERP cannot do this.</p>
<p>Magento can't do this.<sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup> Now that they've been bought by eBay, Magento is doing a lot of cool things, and it would not surprise me if they moved in this direction down the road. (I'm certain many companies will.) They're even providing a US$1 million stimulus to encourage small business e-commerce.</p>
<p>Quickbooks might be able to do it, if you go for the Enterprise version and add on third party software. It's my impression (earned in part by having used Quickbooks) that it's a great accounting package for small businesses, but the software's enterprise features are flawed with usability issues. Then there's the third party problem for the e-commerce software - how integrated is it with Quickbooks? Both Quickbooks and the e-commerce package are proprietary; how well are they kept in sync? Is the quality of the code there? I'm not trying to engage in FUD<sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup> — I'd be thrilled to hear about a solid Quickbooks e-commerce solution that goes beyond widgets. Let me know and I will list it right here.</p>
<p>Peachtree can't do it — or if it can, we're looking at the same situation as Quickbooks at best. But Peachtree's parent company, Sage, can do it. Once again, though, you need to use their proprietary module (eBusiness Web Services) combined with a third party e-commerce application.<sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup> Besides, Sage is pretty pricey for a small business. We had a customer gut OpenERP (and us, along with it) and put in Sage. Rumor has it the licenses alone were more than US$80,000, plus integration, plus e-commerce software and hosting.</p>
<p>Netsuite can probably do it. With Netsuite Ecommerce, a lot of set-up, and US$1,200 a month, a mom-and-pop shop can sell widgets online and get the benefit of Netsuite's accounting, finance, and supply chain management. At that price, it is probably affordable for a business doing a million a year in sales. (Mom and pop are good at this widget business.)</p>
<p>You know who can do it, with open source software even? Apache OFBiz.<sup class="footnote-ref"><a href="#fn16" id="fnref16">[16]</a></sup> Honestly I know very little about OFBiz (which stands for &quot;Open For Business&quot;), but it clearly does a lot, and if you're looking for a community open source ERP project that does web e-commerce right now, this might be your choice. If you use it, let me know what you think?</p>
<h2>What does Tryton need?</h2>
<p>I think Tryton needs a web framework.</p>
<p>I'm somewhat at odds with Cédric Krier<sup class="footnote-ref"><a href="#fn17" id="fnref17">[17]</a></sup> on this, I know. We've chatted on IRC, and he assures me that Tryton doesn't need a full framework; JSON<sup class="footnote-ref"><a href="#fn18" id="fnref18">[18]</a></sup> is enough. And he's right - JSON is enough. Tryton itself is a framework, and with an easily implemented interface like JSON, one can do all I describe above. But unless there's something on the other end of the JSON, it's useless to my customers, and in turn useless to my customers' customers.</p>
<p>Cédric's &quot;something on the other end of the JSON&quot; approach puts Tryton as a rather smart back end to a web application (any application, really - I can totally see using it behind an Android or iPhone app), without building an actual framework into Tryton. But I'm not sure that a real web framework built into Tryton wouldn't be very, very useful. I have ideas on how to do this, involving some of my favorite tech tools - MongoDB<sup class="footnote-ref"><a href="#fn19" id="fnref19">[19]</a></sup>, Jinja2<sup class="footnote-ref"><a href="#fn20" id="fnref20">[20]</a></sup> or Restructured Text<sup class="footnote-ref"><a href="#fn21" id="fnref21">[21]</a></sup>, maybe a little Flask<sup class="footnote-ref"><a href="#fn22" id="fnref22">[22]</a></sup> action. Some Redis<sup class="footnote-ref"><a href="#fn23" id="fnref23">[23]</a></sup> and Celery<sup class="footnote-ref"><a href="#fn24" id="fnref24">[24]</a></sup> to make sure we never ask Tryton to try too hard.</p>
<p>I'm certain this can be done. I'm pretty sure I can do it. I strongly suspect it's already been done by at least one company, for private use.</p>
<h2>A Tryton web framework</h2>
<p>When I first started this blog post almost two months ago, my work life was considerably different than it is right now. At that time, I thought I may be days from starting the web framework project for at least one, and maybe two different customers.</p>
<p>Hell, when I first started this series of blog posts on Tryton as an e-commerce back-end, I thought I'd have a Tryton-based e-commerce platform done by now. Funny, that. But then life knocked on my door - kicked it in, more like. Among other things, I worked with one of the best Tryton programmers in the world for nearly 40 hours straight, and at the end of it, I had lost my biggest customer. (Correlation, not causation - he didn't steal my customer or anything like that.)</p>
<p>I still have prospects for using Tryton as an e-commerce back end. If any of them come through I may continue the series. Until then I hope it's been a useful discussion.</p>
<h3>What else is there?</h3>
<ul>
<li><a href="/articles/evaluating-tryton-as-an-ecommerce-backend_about-tryton" title="Evaluation Tryton as an e-commerce back-end: Stalking the Tryton community">Part 1: About Tryton</a>. An overview of Tryton – architecture,
business model, features, license.</li>
<li><a href="/articles/evaluating-tryton-as-an-ecommerce-backend_stalking-the-tryton-community" title="Evaluation Tryton as an e-commerce back-end: Stalking the Tryton community">Part 2: Stalking the Tryton community</a>. There are some
impressive people working on this project. I’m pleased to get to
know them.</li>
<li>Part 3: The crux of the matter. What
does a Tryton-backed e-commerce system need to do?</li>
</ul>
<p><em>If I’ve inspired a response from you (probably the type of response that deserves an apology), mention <a href="http://twitter.com/version2beta" title="Me, twitterfied">@version2beta</a> on <a href="http://twitter.com/" title="All of twitter, including me.">Twitter</a> and I’ll see it there. Or, if you can’t comment in less than 126 characters (my handle takes 14 characters with a space), blog about it and tweet that.</em></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p><a href="http://tryton.org/" title="Tryton home page">http://tryton.org/</a> Tryton project home <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
<li id="fn2"  class="footnote-item"><p>Don't know what <a href="http://en.wikipedia.org/wiki/Enterprise_resource_planning" title="Wikipedia article on enterprise resource planning.">Enterprise Resource Planning</a> is? Wikipedia does. <a href="#fnref2" class="footnote-backref">↩</a></p>
</li>
<li id="fn3"  class="footnote-item"><p><a href="http://www.gnu.org/licenses/gpl-3.0.html" title="The Gnu General Public License version 3.0">The Gnu General Public License version 3.0</a>. Tryton is licensed under these terms. <a href="#fnref3" class="footnote-backref">↩</a></p>
</li>
<li id="fn4"  class="footnote-item"><p>The <a href="http://www.python.org/" title="The Python programming language official website. Hello, Guido!">Python programming language official website</a>. Guido van Rossum started development on Python in 1986, and named it in part after Monty Python's Flying Circus. <a href="#fnref4" class="footnote-backref">↩</a></p>
</li>
<li id="fn5"  class="footnote-item"><p>Have I mentioned how much I like <a href="http://www.postgresql.org/" title="Have I mentioned how much I like PostgreSQL before?">PostgreSQL</a> before? I really did discount and ignore it before I had to start using it on a project, and that's all it took. I prefer PostgreSQL now over every other SQL database I've used. <a href="#fnref5" class="footnote-backref">↩</a></p>
</li>
<li id="fn6"  class="footnote-item"><p>No ring required. <a href="#fnref6" class="footnote-backref">↩</a></p>
</li>
<li id="fn7"  class="footnote-item"><p>Bullies are great dog treats, but their made from bull &quot;pizzle&quot; which is really just an old English word for penis. We buy [these bully sticks][bully]. <a href="#fnref7" class="footnote-backref">↩</a></p>
</li>
<li id="fn8"  class="footnote-item"><p>Freeze-dried duck hearts are also quite real, and I have never used a more effective treat with our girls. Check out <a href="http://www.freshisbestinc.com/products/pet-treats-chews/freeze-dried-duck-heart-bites" title="Fresh is Best freeze dried duck hearts">Fresh Is Best's freeze-dried duck hearts</a>. <a href="#fnref8" class="footnote-backref">↩</a></p>
</li>
<li id="fn9"  class="footnote-item"><p>Hearty Dog Treats is a business I want to build, but as yet it's just a dream waiting for a preponderance of time combined with a sufficiency of money. <a href="http://www.freshisbestinc.com/" title="Fresh is Best Inc home page">Fresh is Best Inc.</a> is not fictitious. They are one of our customers, but not currently using an ERP system. <a href="#fnref9" class="footnote-backref">↩</a></p>
</li>
<li id="fn10"  class="footnote-item"><p><a href="http://doc.openerp.com/v6.0/features/integrated_ecommerce.html" title="Feature page">OpenERP SA's &quot;feature&quot; page on integrated e-commerce</a>. <a href="#fnref10" class="footnote-backref">↩</a></p>
</li>
<li id="fn11"  class="footnote-item"><p><a href="http://doc.openerp.com/v6.0/technical_guide/ecommerce.html" title="Technical guide">OpenERP SA's e-commerce doc page from the OpenERP v6 technical guide</a>. Although it is labeled version 6, this page seems to discuss a version 5 module. <a href="#fnref11" class="footnote-backref">↩</a></p>
</li>
<li id="fn12"  class="footnote-item"><p>OpenERP is growing and improving, or at least that's what I hear. Version 6.1 might have what version 6.0 lacked. Check it out for yourself. <a href="http://doc.openerp.com/v6.0/features/integrated_ecommerce.html" title="OpenERP's integrated e-commerce capabilities?">Here's the page I visited</a>. <a href="#fnref12" class="footnote-backref">↩</a></p>
</li>
<li id="fn13"  class="footnote-item"><p>See <a href="http://go.magento.com/features/" title="Magento's list of features">Magento's feature list</a> for more information. Really though, I like the quote from <a href="http://groups.google.com/group/tryton-dev/msg/403620501bffdb55" title="Tryton-dev discussion regarding a Magento connector for Tryton">Sharoon Thomas discussing a Magento connector for Tryton</a>: &quot;An integration with Magento does not add 'The best e-commerce possibility for Tryton' but does make 'A great ERP backend for Magento'.&quot; <a href="#fnref13" class="footnote-backref">↩</a></p>
</li>
<li id="fn14"  class="footnote-item"><p><a href="http://en.wikipedia.org/wiki/Fear,_uncertainty_and_doubt" title="Wikipedia article on the sales and marketing tactic known as FUD.">Fear, uncertainty, and doubt</a>. <a href="#fnref14" class="footnote-backref">↩</a></p>
</li>
<li id="fn15"  class="footnote-item"><p>I was surprised by this. I thought they had their own e-commerce module, but the closest I find for Sage MAS 90 and 200 is the <a href="http://www.sagemas.com/Products/Sage-ERP-MAS-90-and-200/eBusiness/eBusiness-Web-Services" title="Sage eBusiness Web Services">eBusiness Web Services module</a>. <a href="#fnref15" class="footnote-backref">↩</a></p>
</li>
<li id="fn16"  class="footnote-item"><p>I don't know what to make of this project, honestly. <a href="http://ofbiz.apache.org/" title="Apache Open For Business project">Open For Business</a> has been around for ages, they're up to version 10, and they've got some high profile users, like British Telecom. It doesn't seem to be limited in any way to widgets. But, it's written in Java and I'm a programming snob, and it feels heavy to me. Really heavy. I'd really love to hear from someone who's worked with OFBiz, or even worked on the project. Tell me about it? <a href="#fnref16" class="footnote-backref">↩</a></p>
</li>
<li id="fn17"  class="footnote-item"><p>[Cédric Krier][cedrick] is with [b2ck.com][] and is something of the [BFDL][] for Tryton. Every time I write that, I am uncomfortable. I've only seen one person definitively call him Benevolent Dictator for Life, but he so clearly fits the role, even without better confirmation I have to stop saying &quot;...something of the BFDL...&quot;. He is. Complain at me if you think I'm wrong.
[cedrick]: http://twitter.com/#!/cedrickrier &quot;Cédric Krier on Twitter.&quot;
[b2ck.com]: http://b2ck.com &quot;B2CK Software Development.&quot;
[BFDL]: http://en.wikipedia.org/wiki/Benevolent_Dictator_For_Life &quot;Wikipedia's article about open source software development leadership and the title 'Benevolent Dictator For Life'.&quot; <a href="#fnref17" class="footnote-backref">↩</a></p>
</li>
<li id="fn18"  class="footnote-item"><p>[JSON-RPC][] is like XML-RPC, but quieter.
[JSON-RPC]: http://en.wikipedia.org/wiki/JSON-RPC &quot;JSON-RPC Wikipedia article.&quot; <a href="#fnref18" class="footnote-backref">↩</a></p>
</li>
<li id="fn19"  class="footnote-item"><p>[MongoDB][mongo] comes from &quot;humongous&quot; - a no-SQL, document-oriented database capable of some very cool feats.
[mongo]: http://www.mongodb.org/ &quot;MongoDB, a document-oriented, open source, high performance datbase.&quot; <a href="#fnref19" class="footnote-backref">↩</a></p>
</li>
<li id="fn20"  class="footnote-item"><p>[Jinja2][] is a designer-friendly templating language, somewhat based on Django but extending Django templates in some important and well-considered ways. It's also [Armin Ronacher][mitsuhiko] project, and I seem to be a fanboi.
[jinja2]: http://jinja.pocoo.org/ &quot;Jinja2 template engine.&quot; <a href="#fnref20" class="footnote-backref">↩</a></p>
</li>
<li id="fn21"  class="footnote-item"><p>Restructured text, more properly written reStructuredText, is another markup language. It happens to be the markup used by the [Sphinx][] documentation generator, so I use it all the time.
[rst]: http://docutils.sourceforge.net/rst.html &quot;Markup language, part of Docutils.&quot; <a href="#fnref21" class="footnote-backref">↩</a></p>
</li>
<li id="fn22"  class="footnote-item"><p>[Flask][] is a Python microframework, a set of tools that can connect a web interface to an object back-end with appropriate routing and logic. Another [Armin Ronacher][mitsuhiko] project.
[flask]: http://flask.pocoo.org/ &quot;Flask micoframework in Python.&quot;
[mitsuhiko]: https://twitter.com/#!/mitsuhiko &quot;Armin Ronacher on Twitter.&quot; <a href="#fnref22" class="footnote-backref">↩</a></p>
</li>
<li id="fn23"  class="footnote-item"><p>Redis is a key-value store, much like memcached, the entire DNS system, etc. It's a tremendously efficient way to store smaller bits of data, like information you might cache a while.
[redis]: http://redis.io/ &quot;Key-value store.&quot; <a href="#fnref23" class="footnote-backref">↩</a></p>
</li>
<li id="fn24"  class="footnote-item"><p>Celery provides a distributed task queue, kind of a to-do list for other programs.
[celery]: http://celeryproject.org/ &quot;A distributed taask queue.&quot; <a href="#fnref24" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></description><link>http://version2beta.com/articles/evaluating-tryton-as-an-ecommerce-backend_web-framework</link><guid isPermaLink="true">http://version2beta.com/articles/evaluating-tryton-as-an-ecommerce-backend_web-framework</guid><dc:creator><![CDATA[Rob Martin]]></dc:creator></item></channel></rss>